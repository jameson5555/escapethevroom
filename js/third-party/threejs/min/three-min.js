var THREE={REVISION:"68"};"object"==typeof module&&(module.exports=THREE),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(e){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(e)},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){return e instanceof THREE.Color?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSL:function(e,t,r){if(0===t)this.r=this.g=this.b=r;else{var i=function(e,t,r){return 0>r&&(r+=1),r>1&&(r-=1),1/6>r?e+6*(t-e)*r:.5>r?t:2/3>r?e+6*(t-e)*(2/3-r):e},n=.5>=r?r*(1+t):r+t-r*t,a=2*r-n;this.r=i(a,n,e+1/3),this.g=i(a,n,e),this.b=i(a,n,e-1/3)}return this},setStyle:function(e){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(e)){var t=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(e);return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,this}if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(e)){var t=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(e);return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(e)){var t=/^\#([0-9a-f]{6})$/i.exec(e);return this.setHex(parseInt(t[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)){var t=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e);return this.setHex(parseInt(t[1]+t[1]+t[2]+t[2]+t[3]+t[3],16)),this}return/^(\w+)$/i.test(e)?(this.setHex(THREE.ColorKeywords[e]),this):void 0},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,r=this.b;return this.r=e*e,this.g=t*t,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){var t=e||{h:0,s:0,l:0},r=this.r,i=this.g,n=this.b,a=Math.max(r,i,n),o=Math.min(r,i,n),s,h,l=(o+a)/2;if(o===a)s=0,h=0;else{var c=a-o;switch(h=.5>=l?c/(a+o):c/(2-a-o),a){case r:s=(i-n)/c+(n>i?6:0);break;case i:s=(n-r)/c+2;break;case n:s=(r-i)/c+4}s/=6}return t.h=s,t.s=h,t.l=l,t},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,r){var i=this.getHSL();return i.h+=e,i.s+=t,i.l+=r,this.setHSL(i.h,i.s,i.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e){return this.r=e[0],this.g=e[1],this.b=e[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(e,t,r,i){this._x=e||0,this._y=t||0,this._z=r||0,this._w=void 0!==i?i:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get w(){return this._w},set w(e){this._w=e,this.onChangeCallback()},set:function(e,t,r,i){return this._x=e,this._y=t,this._z=r,this._w=i,this.onChangeCallback(),this},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this.onChangeCallback(),this},setFromEuler:function(e,t){if(e instanceof THREE.Euler==!1)throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var r=Math.cos(e._x/2),i=Math.cos(e._y/2),n=Math.cos(e._z/2),a=Math.sin(e._x/2),o=Math.sin(e._y/2),s=Math.sin(e._z/2);return"XYZ"===e.order?(this._x=a*i*n+r*o*s,this._y=r*o*n-a*i*s,this._z=r*i*s+a*o*n,this._w=r*i*n-a*o*s):"YXZ"===e.order?(this._x=a*i*n+r*o*s,this._y=r*o*n-a*i*s,this._z=r*i*s-a*o*n,this._w=r*i*n+a*o*s):"ZXY"===e.order?(this._x=a*i*n-r*o*s,this._y=r*o*n+a*i*s,this._z=r*i*s+a*o*n,this._w=r*i*n-a*o*s):"ZYX"===e.order?(this._x=a*i*n-r*o*s,this._y=r*o*n+a*i*s,this._z=r*i*s-a*o*n,this._w=r*i*n+a*o*s):"YZX"===e.order?(this._x=a*i*n+r*o*s,this._y=r*o*n+a*i*s,this._z=r*i*s-a*o*n,this._w=r*i*n-a*o*s):"XZY"===e.order&&(this._x=a*i*n-r*o*s,this._y=r*o*n-a*i*s,this._z=r*i*s+a*o*n,this._w=r*i*n+a*o*s),t!==!1&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){var r=t/2,i=Math.sin(r);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(r),this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t=e.elements,r=t[0],i=t[4],n=t[8],a=t[1],o=t[5],s=t[9],h=t[2],l=t[6],c=t[10],u=r+o+c,f;return u>0?(f=.5/Math.sqrt(u+1),this._w=.25/f,this._x=(l-s)*f,this._y=(n-h)*f,this._z=(a-i)*f):r>o&&r>c?(f=2*Math.sqrt(1+r-o-c),this._w=(l-s)/f,this._x=.25*f,this._y=(i+a)/f,this._z=(n+h)/f):o>c?(f=2*Math.sqrt(1+o-r-c),this._w=(n-h)/f,this._x=(i+a)/f,this._y=.25*f,this._z=(s+l)/f):(f=2*Math.sqrt(1+c-r-o),this._w=(a-i)/f,this._x=(n+h)/f,this._y=(s+l)/f,this._z=.25*f),this.onChangeCallback(),this},setFromUnitVectors:function(){var e,t,r=1e-6;return function(i,n){return void 0===e&&(e=new THREE.Vector3),t=i.dot(n)+1,r>t?(t=0,Math.abs(i.x)>Math.abs(i.z)?e.set(-i.y,i.x,0):e.set(0,-i.z,i.y)):e.crossVectors(i,n),this._x=e.x,this._y=e.y,this._z=e.z,this._w=t,this.normalize(),this}}(),inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this.onChangeCallback(),this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var r=e._x,i=e._y,n=e._z,a=e._w,o=t._x,s=t._y,h=t._z,l=t._w;return this._x=r*l+a*o+i*h-n*s,this._y=i*l+a*s+n*o-r*h,this._z=n*l+a*h+r*s-i*o,this._w=a*l-r*o-i*s-n*h,this.onChangeCallback(),this},multiplyVector3:function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){var r=this._x,i=this._y,n=this._z,a=this._w,o=a*e._w+r*e._x+i*e._y+n*e._z;if(0>o?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=r,this._y=i,this._z=n,this;var s=Math.acos(o),h=Math.sqrt(1-o*o);if(Math.abs(h)<.001)return this._w=.5*(a+this._w),this._x=.5*(r+this._x),this._y=.5*(i+this._y),this._z=.5*(n+this._z),this;var l=Math.sin((1-t)*s)/h,c=Math.sin(t*s)/h;return this._w=a*l+this._w*c,this._x=r*l+this._x*c,this._y=i*l+this._y*c,this._z=n*l+this._z*c,this.onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],this._w=e[3],this.onChangeCallback(),this},toArray:function(){return[this._x,this._y,this._z,this._w]},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(e,t,r,i){return r.copy(e).slerp(t,i)},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScalar:function(e){return this.x+=e,this.y+=e,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t}else this.x=0,this.y=0;return this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},clampScalar:function(){var e,t;return function(r,i){return void 0===e&&(e=new THREE.Vector2,t=new THREE.Vector2),e.set(r,r),t.set(i,i),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return t*t+r*r},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e){return this.x=e[0],this.y=e[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(){var e;return function(t){return t instanceof THREE.Euler==!1&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order."),void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromEuler(t)),this}}(),applyAxisAngle:function(){var e;return function(t,r){return void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromAxisAngle(t,r)),this}}(),applyMatrix3:function(e){var t=this.x,r=this.y,i=this.z,n=e.elements;return this.x=n[0]*t+n[3]*r+n[6]*i,this.y=n[1]*t+n[4]*r+n[7]*i,this.z=n[2]*t+n[5]*r+n[8]*i,this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z,n=e.elements;return this.x=n[0]*t+n[4]*r+n[8]*i+n[12],this.y=n[1]*t+n[5]*r+n[9]*i+n[13],this.z=n[2]*t+n[6]*r+n[10]*i+n[14],this},applyProjection:function(e){var t=this.x,r=this.y,i=this.z,n=e.elements,a=1/(n[3]*t+n[7]*r+n[11]*i+n[15]);return this.x=(n[0]*t+n[4]*r+n[8]*i+n[12])*a,this.y=(n[1]*t+n[5]*r+n[9]*i+n[13])*a,this.z=(n[2]*t+n[6]*r+n[10]*i+n[14])*a,this},applyQuaternion:function(e){var t=this.x,r=this.y,i=this.z,n=e.x,a=e.y,o=e.z,s=e.w,h=s*t+a*i-o*r,l=s*r+o*t-n*i,c=s*i+n*r-a*t,u=-n*t-a*r-o*i;return this.x=h*s+u*-n+l*-o-c*-a,this.y=l*s+u*-a+c*-n-h*-o,this.z=c*s+u*-o+h*-a-l*-n,this},transformDirection:function(e){var t=this.x,r=this.y,i=this.z,n=e.elements;return this.x=n[0]*t+n[4]*r+n[8]*i,this.y=n[1]*t+n[5]*r+n[9]*i,this.z=n[2]*t+n[6]*r+n[10]*i,this.normalize(),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t,this.z*=t}else this.x=0,this.y=0,this.z=0;return this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},clampScalar:function(){var e,t;return function(r,i){return void 0===e&&(e=new THREE.Vector3,t=new THREE.Vector3),e.set(r,r,r),t.set(i,i,i),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},cross:function(e,t){if(void 0!==t)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var r=this.x,i=this.y,n=this.z;return this.x=i*e.z-n*e.y,this.y=n*e.x-r*e.z,this.z=r*e.y-i*e.x,this},crossVectors:function(e,t){var r=e.x,i=e.y,n=e.z,a=t.x,o=t.y,s=t.z;return this.x=i*s-n*o,this.y=n*a-r*s,this.z=r*o-i*a,this},projectOnVector:function(){var e,t;return function(r){return void 0===e&&(e=new THREE.Vector3),e.copy(r).normalize(),t=this.dot(e),this.copy(e).multiplyScalar(t)}}(),projectOnPlane:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){var t=this.dot(e)/(this.length()*e.length());return Math.acos(THREE.Math.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y,i=this.z-e.z;return t*t+r*r+i*i},setEulerFromRotationMatrix:function(e,t){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(e,t){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},setFromMatrixPosition:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setFromMatrixScale:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),r=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),i=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=r,this.z=i,this},setFromMatrixColumn:function(e,t){var r=4*e,i=t.elements;return this.x=i[r],this.y=i[r+1],this.z=i[r+2],this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e){return this.x=e[0],this.y=e[1],this.z=e[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(e,t,r,i){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,r,i){return this.x=e,this.y=t,this.z=r,this.w=i,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z,n=this.w,a=e.elements;return this.x=a[0]*t+a[4]*r+a[8]*i+a[12]*n,this.y=a[1]*t+a[5]*r+a[9]*i+a[13]*n,this.z=a[2]*t+a[6]*r+a[10]*i+a[14]*n,this.w=a[3]*t+a[7]*r+a[11]*i+a[15]*n,this},divideScalar:function(e){if(0!==e){var t=1/e;this.x*=t,this.y*=t,this.z*=t,this.w*=t}else this.x=0,this.y=0,this.z=0,this.w=1;return this},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return 1e-4>t?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,r,i,n,a=.01,o=.1,s=e.elements,h=s[0],l=s[4],c=s[8],u=s[1],f=s[5],E=s[9],p=s[2],d=s[6],m=s[10];if(Math.abs(l-u)<a&&Math.abs(c-p)<a&&Math.abs(E-d)<a){if(Math.abs(l+u)<o&&Math.abs(c+p)<o&&Math.abs(E+d)<o&&Math.abs(h+f+m-3)<o)return this.set(1,0,0,0),this;t=Math.PI;var v=(h+1)/2,g=(f+1)/2,T=(m+1)/2,y=(l+u)/4,R=(c+p)/4,x=(E+d)/4;return v>g&&v>T?a>v?(r=0,i=.707106781,n=.707106781):(r=Math.sqrt(v),i=y/r,n=R/r):g>T?a>g?(r=.707106781,i=0,n=.707106781):(i=Math.sqrt(g),r=y/i,n=x/i):a>T?(r=.707106781,i=.707106781,n=0):(n=Math.sqrt(T),r=R/n,i=x/n),this.set(r,i,n,t),this}var H=Math.sqrt((d-E)*(d-E)+(c-p)*(c-p)+(u-l)*(u-l));return Math.abs(H)<.001&&(H=1),this.x=(d-E)/H,this.y=(c-p)/H,this.z=(u-l)/H,this.w=Math.acos((h+f+m-1)/2),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this.w>e.w&&(this.w=e.w),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this.w<e.w&&(this.w=e.w),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w),this},clampScalar:function(){var e,t;return function(r,i){return void 0===e&&(e=new THREE.Vector4,t=new THREE.Vector4),e.set(r,r,r,r),t.set(i,i,i,i),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e){return this.x=e[0],this.y=e[1],this.z=e[2],this.w=e[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(e,t,r,i){this._x=e||0,this._y=t||0,this._z=r||0,this._order=i||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get order(){return this._order},set order(e){this._order=e,this.onChangeCallback()},set:function(e,t,r,i){return this._x=e,this._y=t,this._z=r,this._order=i||this._order,this.onChangeCallback(),this},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t){var r=THREE.Math.clamp,i=e.elements,n=i[0],a=i[4],o=i[8],s=i[1],h=i[5],l=i[9],c=i[2],u=i[6],f=i[10];return t=t||this._order,"XYZ"===t?(this._y=Math.asin(r(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(-l,f),this._z=Math.atan2(-a,n)):(this._x=Math.atan2(u,h),this._z=0)):"YXZ"===t?(this._x=Math.asin(-r(l,-1,1)),Math.abs(l)<.99999?(this._y=Math.atan2(o,f),this._z=Math.atan2(s,h)):(this._y=Math.atan2(-c,n),this._z=0)):"ZXY"===t?(this._x=Math.asin(r(u,-1,1)),Math.abs(u)<.99999?(this._y=Math.atan2(-c,f),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(s,n))):"ZYX"===t?(this._y=Math.asin(-r(c,-1,1)),Math.abs(c)<.99999?(this._x=Math.atan2(u,f),this._z=Math.atan2(s,n)):(this._x=0,this._z=Math.atan2(-a,h))):"YZX"===t?(this._z=Math.asin(r(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(o,f))):"XZY"===t?(this._z=Math.asin(-r(a,-1,1)),Math.abs(a)<.99999?(this._x=Math.atan2(u,h),this._y=Math.atan2(o,n)):(this._x=Math.atan2(-l,f),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,this.onChangeCallback(),this},setFromQuaternion:function(e,t,r){var i=THREE.Math.clamp,n=e.x*e.x,a=e.y*e.y,o=e.z*e.z,s=e.w*e.w;return t=t||this._order,"XYZ"===t?(this._x=Math.atan2(2*(e.x*e.w-e.y*e.z),s-n-a+o),this._y=Math.asin(i(2*(e.x*e.z+e.y*e.w),-1,1)),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),s+n-a-o)):"YXZ"===t?(this._x=Math.asin(i(2*(e.x*e.w-e.y*e.z),-1,1)),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),s-n-a+o),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),s-n+a-o)):"ZXY"===t?(this._x=Math.asin(i(2*(e.x*e.w+e.y*e.z),-1,1)),this._y=Math.atan2(2*(e.y*e.w-e.z*e.x),s-n-a+o),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),s-n+a-o)):"ZYX"===t?(this._x=Math.atan2(2*(e.x*e.w+e.z*e.y),s-n-a+o),this._y=Math.asin(i(2*(e.y*e.w-e.x*e.z),-1,1)),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),s+n-a-o)):"YZX"===t?(this._x=Math.atan2(2*(e.x*e.w-e.z*e.y),s-n+a-o),this._y=Math.atan2(2*(e.y*e.w-e.x*e.z),s+n-a-o),this._z=Math.asin(i(2*(e.x*e.y+e.z*e.w),-1,1))):"XZY"===t?(this._x=Math.atan2(2*(e.x*e.w+e.y*e.z),s-n+a-o),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),s+n-a-o),
this._z=Math.asin(i(2*(e.z*e.w-e.x*e.y),-1,1))):console.warn("THREE.Euler: .setFromQuaternion() given unsupported order: "+t),this._order=t,r!==!1&&this.onChangeCallback(),this},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this.onChangeCallback(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Line3=function(e,t){this.start=void 0!==e?e:new THREE.Vector3,this.end=void 0!==t?t:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(e,t){return this.start.copy(e),this.end.copy(t),this},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},center:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){var t=e||new THREE.Vector3;return t.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var r=t||new THREE.Vector3;return this.delta(r).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i){e.subVectors(r,this.start),t.subVectors(this.end,this.start);var n=t.dot(t),a=t.dot(e),o=a/n;return i&&(o=THREE.Math.clamp(o,0,1)),o}}(),closestPointToPoint:function(e,t,r){var i=this.closestPointToPointParameter(e,t),n=r||new THREE.Vector3;return this.delta(n).multiplyScalar(i).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}},THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(1/0,1/0),this.max=void 0!==t?t:new THREE.Vector2(-(1/0),-(1/0))},THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;r>t;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(t,r){var i=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){var t=e||new THREE.Vector2;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new THREE.Vector2;return t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y?!0:!1},getParameter:function(e,t){var r=t||new THREE.Vector2;return r.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?!1:!0},clampPoint:function(e,t){var r=t||new THREE.Vector2;return r.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){var r=e.copy(t).clamp(this.min,this.max);return r.sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new THREE.Vector3(-(1/0),-(1/0),-(1/0))},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;r>t;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(t,r){var i=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}}(),setFromObject:function(){var e=new THREE.Vector3;return function(t){var r=this;return t.updateMatrixWorld(!0),this.makeEmpty(),t.traverse(function(t){if(void 0!==t.geometry&&void 0!==t.geometry.vertices)for(var i=t.geometry.vertices,n=0,a=i.length;a>n;n++)e.copy(i[n]),e.applyMatrix4(t.matrixWorld),r.expandByPoint(e)}),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new THREE.Vector3;return t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z?!0:!1},getParameter:function(e,t){var r=t||new THREE.Vector3;return r.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?!1:!0},clampPoint:function(e,t){var r=t||new THREE.Vector3;return r.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var r=e.copy(t).clamp(this.min,this.max);return r.sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){var r=t||new THREE.Sphere;return r.center=this.center(),r.radius=.5*this.size(e).length(),r}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){return e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(e),this}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(e,t,r,i,n,a,o,s,h){this.elements=new Float32Array(9);var l=this.elements;l[0]=void 0!==e?e:1,l[3]=t||0,l[6]=r||0,l[1]=i||0,l[4]=void 0!==n?n:1,l[7]=a||0,l[2]=o||0,l[5]=s||0,l[8]=void 0!==h?h:1},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,r,i,n,a,o,s,h){var l=this.elements;return l[0]=e,l[3]=t,l[6]=r,l[1]=i,l[4]=n,l[7]=a,l[2]=o,l[5]=s,l[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(e){return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)},applyToVector3Array:function(){var e=new THREE.Vector3;return function(t,r,i){void 0===r&&(r=0),void 0===i&&(i=t.length);for(var n=0,a=r,o;i>n;n+=3,a+=3)e.x=t[a],e.y=t[a+1],e.z=t[a+2],e.applyMatrix3(this),t[a]=e.x,t[a+1]=e.y,t[a+2]=e.z;return t}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],r=e[1],i=e[2],n=e[3],a=e[4],o=e[5],s=e[6],h=e[7],l=e[8];return t*a*l-t*o*h-r*n*l+r*o*s+i*n*h-i*a*s},getInverse:function(e,t){var r=e.elements,i=this.elements;i[0]=r[10]*r[5]-r[6]*r[9],i[1]=-r[10]*r[1]+r[2]*r[9],i[2]=r[6]*r[1]-r[2]*r[5],i[3]=-r[10]*r[4]+r[6]*r[8],i[4]=r[10]*r[0]-r[2]*r[8],i[5]=-r[6]*r[0]+r[2]*r[4],i[6]=r[9]*r[4]-r[5]*r[8],i[7]=-r[9]*r[0]+r[1]*r[8],i[8]=r[5]*r[0]-r[1]*r[4];var n=r[0]*i[0]+r[1]*i[3]+r[2]*i[6];if(0===n){var a="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(t)throw new Error(a);return console.warn(a),this.identity(),this}return this.multiplyScalar(1/n),this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},flattenToArrayOffset:function(e,t){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e},getNormalMatrix:function(e){return this.getInverse(e).transpose(),this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8]]},clone:function(){var e=this.elements;return new THREE.Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])}},THREE.Matrix4=function(e,t,r,i,n,a,o,s,h,l,c,u,f,E,p,d){this.elements=new Float32Array(16);var m=this.elements;m[0]=void 0!==e?e:1,m[4]=t||0,m[8]=r||0,m[12]=i||0,m[1]=n||0,m[5]=void 0!==a?a:1,m[9]=o||0,m[13]=s||0,m[2]=h||0,m[6]=l||0,m[10]=void 0!==c?c:1,m[14]=u||0,m[3]=f||0,m[7]=E||0,m[11]=p||0,m[15]=void 0!==d?d:1},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,r,i,n,a,o,s,h,l,c,u,f,E,p,d){var m=this.elements;return m[0]=e,m[4]=t,m[8]=r,m[12]=i,m[1]=n,m[5]=a,m[9]=o,m[13]=s,m[2]=h,m[6]=l,m[10]=c,m[14]=u,m[3]=f,m[7]=E,m[11]=p,m[15]=d,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return this.elements.set(e.elements),this},extractPosition:function(e){return console.warn("THREEMatrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},copyPosition:function(e){var t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this},extractRotation:function(){var e=new THREE.Vector3;return function(t){var r=this.elements,i=t.elements,n=1/e.set(i[0],i[1],i[2]).length(),a=1/e.set(i[4],i[5],i[6]).length(),o=1/e.set(i[8],i[9],i[10]).length();return r[0]=i[0]*n,r[1]=i[1]*n,r[2]=i[2]*n,r[4]=i[4]*a,r[5]=i[5]*a,r[6]=i[6]*a,r[8]=i[8]*o,r[9]=i[9]*o,r[10]=i[10]*o,this}}(),makeRotationFromEuler:function(e){e instanceof THREE.Euler==!1&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,r=e.x,i=e.y,n=e.z,a=Math.cos(r),o=Math.sin(r),s=Math.cos(i),h=Math.sin(i),l=Math.cos(n),c=Math.sin(n);if("XYZ"===e.order){var u=a*l,f=a*c,E=o*l,p=o*c;t[0]=s*l,t[4]=-s*c,t[8]=h,t[1]=f+E*h,t[5]=u-p*h,t[9]=-o*s,t[2]=p-u*h,t[6]=E+f*h,t[10]=a*s}else if("YXZ"===e.order){var d=s*l,m=s*c,v=h*l,g=h*c;t[0]=d+g*o,t[4]=v*o-m,t[8]=a*h,t[1]=a*c,t[5]=a*l,t[9]=-o,t[2]=m*o-v,t[6]=g+d*o,t[10]=a*s}else if("ZXY"===e.order){var d=s*l,m=s*c,v=h*l,g=h*c;t[0]=d-g*o,t[4]=-a*c,t[8]=v+m*o,t[1]=m+v*o,t[5]=a*l,t[9]=g-d*o,t[2]=-a*h,t[6]=o,t[10]=a*s}else if("ZYX"===e.order){var u=a*l,f=a*c,E=o*l,p=o*c;t[0]=s*l,t[4]=E*h-f,t[8]=u*h+p,t[1]=s*c,t[5]=p*h+u,t[9]=f*h-E,t[2]=-h,t[6]=o*s,t[10]=a*s}else if("YZX"===e.order){var T=a*s,y=a*h,R=o*s,x=o*h;t[0]=s*l,t[4]=x-T*c,t[8]=R*c+y,t[1]=c,t[5]=a*l,t[9]=-o*l,t[2]=-h*l,t[6]=y*c+R,t[10]=T-x*c}else if("XZY"===e.order){var T=a*s,y=a*h,R=o*s,x=o*h;t[0]=s*l,t[4]=-c,t[8]=h*l,t[1]=T*c+x,t[5]=a*l,t[9]=y*c-R,t[2]=R*c-y,t[6]=o*l,t[10]=x*c+T}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},makeRotationFromQuaternion:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z,a=e.w,o=r+r,s=i+i,h=n+n,l=r*o,c=r*s,u=r*h,f=i*s,E=i*h,p=n*h,d=a*o,m=a*s,v=a*h;return t[0]=1-(f+p),t[4]=c-v,t[8]=u+m,t[1]=c+v,t[5]=1-(l+p),t[9]=E-d,t[2]=u-m,t[6]=E+d,t[10]=1-(l+f),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(i,n,a){var o=this.elements;return r.subVectors(i,n).normalize(),0===r.length()&&(r.z=1),e.crossVectors(a,r).normalize(),0===e.length()&&(r.x+=1e-4,e.crossVectors(a,r).normalize()),t.crossVectors(r,e),o[0]=e.x,o[4]=t.x,o[8]=r.x,o[1]=e.y,o[5]=t.y,o[9]=r.y,o[2]=e.z,o[6]=t.z,o[10]=r.z,this}}(),multiply:function(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var r=e.elements,i=t.elements,n=this.elements,a=r[0],o=r[4],s=r[8],h=r[12],l=r[1],c=r[5],u=r[9],f=r[13],E=r[2],p=r[6],d=r[10],m=r[14],v=r[3],g=r[7],T=r[11],y=r[15],R=i[0],x=i[4],H=i[8],b=i[12],_=i[1],w=i[5],M=i[9],S=i[13],C=i[2],A=i[6],L=i[10],P=i[14],F=i[3],D=i[7],U=i[11],V=i[15];return n[0]=a*R+o*_+s*C+h*F,n[4]=a*x+o*w+s*A+h*D,n[8]=a*H+o*M+s*L+h*U,n[12]=a*b+o*S+s*P+h*V,n[1]=l*R+c*_+u*C+f*F,n[5]=l*x+c*w+u*A+f*D,n[9]=l*H+c*M+u*L+f*U,n[13]=l*b+c*S+u*P+f*V,n[2]=E*R+p*_+d*C+m*F,n[6]=E*x+p*w+d*A+m*D,n[10]=E*H+p*M+d*L+m*U,n[14]=E*b+p*S+d*P+m*V,n[3]=v*R+g*_+T*C+y*F,n[7]=v*x+g*w+T*A+y*D,n[11]=v*H+g*M+T*L+y*U,n[15]=v*b+g*S+T*P+y*V,this},multiplyToArray:function(e,t,r){var i=this.elements;return this.multiplyMatrices(e,t),r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(e){return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)},applyToVector3Array:function(){var e=new THREE.Vector3;return function(t,r,i){void 0===r&&(r=0),void 0===i&&(i=t.length);for(var n=0,a=r,o;i>n;n+=3,a+=3)e.x=t[a],e.y=t[a+1],e.z=t[a+2],e.applyMatrix4(this),t[a]=e.x,t[a+1]=e.y,t[a+2]=e.z;return t}}(),rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},determinant:function(){var e=this.elements,t=e[0],r=e[4],i=e[8],n=e[12],a=e[1],o=e[5],s=e[9],h=e[13],l=e[2],c=e[6],u=e[10],f=e[14],E=e[3],p=e[7],d=e[11],m=e[15];return E*(+n*s*c-i*h*c-n*o*u+r*h*u+i*o*f-r*s*f)+p*(+t*s*f-t*h*u+n*a*u-i*a*f+i*h*l-n*s*l)+d*(+t*h*c-t*o*f-n*a*c+r*a*f+n*o*l-r*h*l)+m*(-i*o*l-t*s*c+t*o*u+i*a*c-r*a*u+r*s*l)},transpose:function(){var e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},flattenToArrayOffset:function(e,t){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e},getPosition:function(){var e=new THREE.Vector3;return function(){console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var r=this.elements,i=e.elements,n=i[0],a=i[4],o=i[8],s=i[12],h=i[1],l=i[5],c=i[9],u=i[13],f=i[2],E=i[6],p=i[10],d=i[14],m=i[3],v=i[7],g=i[11],T=i[15];r[0]=c*d*v-u*p*v+u*E*g-l*d*g-c*E*T+l*p*T,r[4]=s*p*v-o*d*v-s*E*g+a*d*g+o*E*T-a*p*T,r[8]=o*u*v-s*c*v+s*l*g-a*u*g-o*l*T+a*c*T,r[12]=s*c*E-o*u*E-s*l*p+a*u*p+o*l*d-a*c*d,r[1]=u*p*m-c*d*m-u*f*g+h*d*g+c*f*T-h*p*T,r[5]=o*d*m-s*p*m+s*f*g-n*d*g-o*f*T+n*p*T,r[9]=s*c*m-o*u*m-s*h*g+n*u*g+o*h*T-n*c*T,r[13]=o*u*f-s*c*f+s*h*p-n*u*p-o*h*d+n*c*d,r[2]=l*d*m-u*E*m+u*f*v-h*d*v-l*f*T+h*E*T,r[6]=s*E*m-a*d*m-s*f*v+n*d*v+a*f*T-n*E*T,r[10]=a*u*m-s*l*m+s*h*v-n*u*v-a*h*T+n*l*T,r[14]=s*l*f-a*u*f-s*h*E+n*u*E+a*h*d-n*l*d,r[3]=c*E*m-l*p*m-c*f*v+h*p*v+l*f*g-h*E*g,r[7]=a*p*m-o*E*m+o*f*v-n*p*v-a*f*g+n*E*g,r[11]=o*l*m-a*c*m-o*h*v+n*c*v+a*h*g-n*l*g,r[15]=a*c*f-o*l*f+o*h*E-n*c*E-a*h*p+n*l*p;var y=n*r[0]+h*r[4]+f*r[8]+m*r[12];if(0==y){var R="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(t)throw new Error(R);return console.warn(R),this.identity(),this}return this.multiplyScalar(1/y),this},translate:function(e){console.warn("THREE.Matrix4: .translate() has been removed.")},rotateX:function(e){console.warn("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(e){console.warn("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(e){console.warn("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(e,t){console.warn("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z;return t[0]*=r,t[4]*=i,t[8]*=n,t[1]*=r,t[5]*=i,t[9]*=n,t[2]*=r,t[6]*=i,t[10]*=n,t[3]*=r,t[7]*=i,t[11]*=n,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,Math.max(r,i)))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var r=Math.cos(t),i=Math.sin(t),n=1-r,a=e.x,o=e.y,s=e.z,h=n*a,l=n*o;return this.set(h*a+r,h*o-i*s,h*s+i*o,0,h*o+i*s,l*o+r,l*s-i*a,0,h*s-i*o,l*s+i*a,n*s*s+r,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},compose:function(e,t,r){return this.makeRotationFromQuaternion(t),this.scale(r),this.setPosition(e),this},decompose:function(){var e=new THREE.Vector3,t=new THREE.Matrix4;return function(r,i,n){var a=this.elements,o=e.set(a[0],a[1],a[2]).length(),s=e.set(a[4],a[5],a[6]).length(),h=e.set(a[8],a[9],a[10]).length(),l=this.determinant();0>l&&(o=-o),r.x=a[12],r.y=a[13],r.z=a[14],t.elements.set(this.elements);var c=1/o,u=1/s,f=1/h;return t.elements[0]*=c,t.elements[1]*=c,t.elements[2]*=c,t.elements[4]*=u,t.elements[5]*=u,t.elements[6]*=u,t.elements[8]*=f,t.elements[9]*=f,t.elements[10]*=f,i.setFromRotationMatrix(t),n.x=o,n.y=s,n.z=h,this}}(),makeFrustum:function(e,t,r,i,n,a){var o=this.elements,s=2*n/(t-e),h=2*n/(i-r),l=(t+e)/(t-e),c=(i+r)/(i-r),u=-(a+n)/(a-n),f=-2*a*n/(a-n);return o[0]=s,o[4]=0,o[8]=l,o[12]=0,o[1]=0,o[5]=h,o[9]=c,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=f,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makePerspective:function(e,t,r,i){var n=r*Math.tan(THREE.Math.degToRad(.5*e)),a=-n,o=a*t,s=n*t;return this.makeFrustum(o,s,a,n,r,i)},makeOrthographic:function(e,t,r,i,n,a){var o=this.elements,s=t-e,h=r-i,l=a-n,c=(t+e)/s,u=(r+i)/h,f=(a+n)/l;return o[0]=2/s,o[4]=0,o[8]=0,o[12]=-c,o[1]=0,o[5]=2/h,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2/l,o[14]=-f,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}},THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3,this.direction=void 0!==t?t:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){var r=t||new THREE.Vector3;return r.copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var e=new THREE.Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){var r=t||new THREE.Vector3;r.subVectors(e,this.origin);var i=r.dot(this.direction);return 0>i?r.copy(this.origin):r.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var r=e.subVectors(t,this.origin).dot(this.direction);return 0>r?this.origin.distanceTo(t):(e.copy(this.direction).multiplyScalar(r).add(this.origin),e.distanceTo(t))}}(),distanceSqToSegment:function(e,t,r,i){var n=e.clone().add(t).multiplyScalar(.5),a=t.clone().sub(e).normalize(),o=.5*e.distanceTo(t),s=this.origin.clone().sub(n),h=-this.direction.dot(a),l=s.dot(this.direction),c=-s.dot(a),u=s.lengthSq(),f=Math.abs(1-h*h),E,p,d,m;if(f>=0)if(E=h*c-l,p=h*l-c,m=o*f,E>=0)if(p>=-m)if(m>=p){var v=1/f;E*=v,p*=v,d=E*(E+h*p+2*l)+p*(h*E+p+2*c)+u}else p=o,E=Math.max(0,-(h*p+l)),d=-E*E+p*(p+2*c)+u;else p=-o,E=Math.max(0,-(h*p+l)),d=-E*E+p*(p+2*c)+u;else-m>=p?(E=Math.max(0,-(-h*o+l)),p=E>0?-o:Math.min(Math.max(-o,-c),o),d=-E*E+p*(p+2*c)+u):m>=p?(E=0,p=Math.min(Math.max(-o,-c),o),d=p*(p+2*c)+u):(E=Math.max(0,-(h*o+l)),p=E>0?o:Math.min(Math.max(-o,-c),o),d=-E*E+p*(p+2*c)+u);else p=h>0?-o:o,E=Math.max(0,-(h*p+l)),d=-E*E+p*(p+2*c)+u;return r&&r.copy(this.direction.clone().multiplyScalar(E).add(this.origin)),i&&i.copy(a.clone().multiplyScalar(p).add(n)),d},isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},intersectSphere:function(){var e=new THREE.Vector3;return function(t,r){e.subVectors(t.center,this.origin);var i=e.dot(this.direction),n=e.dot(e)-i*i,a=t.radius*t.radius;if(n>a)return null;var o=Math.sqrt(a-n),s=i-o,h=i+o;return 0>s&&0>h?null:0>s?this.at(h,r):this.at(s,r)}}(),isIntersectionPlane:function(e){var t=e.distanceToPoint(this.origin);if(0===t)return!0;var r=e.normal.dot(this.direction);return 0>r*t?!0:!1},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0==t)return 0==e.distanceToPoint(this.origin)?0:null;var r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null},intersectPlane:function(e,t){var r=this.distanceToPlane(e);return null===r?null:this.at(r,t)},isIntersectionBox:function(){var e=new THREE.Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectBox:function(e,t){var r,i,n,a,o,s,h=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,u=this.origin;return h>=0?(r=(e.min.x-u.x)*h,i=(e.max.x-u.x)*h):(r=(e.max.x-u.x)*h,i=(e.min.x-u.x)*h),l>=0?(n=(e.min.y-u.y)*l,a=(e.max.y-u.y)*l):(n=(e.max.y-u.y)*l,a=(e.min.y-u.y)*l),r>a||n>i?null:((n>r||r!==r)&&(r=n),(i>a||i!==i)&&(i=a),c>=0?(o=(e.min.z-u.z)*c,s=(e.max.z-u.z)*c):(o=(e.max.z-u.z)*c,s=(e.min.z-u.z)*c),r>s||o>i?null:((o>r||r!==r)&&(r=o),(i>s||i!==i)&&(i=s),0>i?null:this.at(r>=0?r:i,t)))},intersectTriangle:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Vector3;return function(n,a,o,s,h){t.subVectors(a,n),r.subVectors(o,n),i.crossVectors(t,r);var l=this.direction.dot(i),c;if(l>0){if(s)return null;c=1}else{if(!(0>l))return null;c=-1,l=-l}e.subVectors(this.origin,n);var u=c*this.direction.dot(r.crossVectors(e,r));if(0>u)return null;var f=c*this.direction.dot(t.cross(e));if(0>f)return null;if(u+f>l)return null;var E=-c*e.dot(i);return 0>E?null:this.at(E/l,h)}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3,this.radius=void 0!==t?t:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new THREE.Box3;return function(t,r){var i=this.center;void 0!==r?i.copy(r):e.setFromPoints(t).center(i);for(var n=0,a=0,o=t.length;o>a;a++)n=Math.max(n,i.distanceToSquared(t[a]));return this.radius=Math.sqrt(n),this}}(),copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var r=this.center.distanceToSquared(e),i=t||new THREE.Vector3;return i.copy(e),r>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i},getBoundingBox:function(e){var t=e||new THREE.Box3;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(e,t,r,i,n,a){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==a?a:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(e,t,r,i,n,a){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(r),o[3].copy(i),o[4].copy(n),o[5].copy(a),this},copy:function(e){for(var t=this.planes,r=0;6>r;r++)t[r].copy(e.planes[r]);return this},setFromMatrix:function(e){var t=this.planes,r=e.elements,i=r[0],n=r[1],a=r[2],o=r[3],s=r[4],h=r[5],l=r[6],c=r[7],u=r[8],f=r[9],E=r[10],p=r[11],d=r[12],m=r[13],v=r[14],g=r[15];return t[0].setComponents(o-i,c-s,p-u,g-d).normalize(),t[1].setComponents(o+i,c+s,p+u,g+d).normalize(),t[2].setComponents(o+n,c+h,p+f,g+m).normalize(),t[3].setComponents(o-n,c-h,p-f,g-m).normalize(),t[4].setComponents(o-a,c-l,p-E,g-v).normalize(),t[5].setComponents(o+a,c+l,p+E,g+v).normalize(),this},intersectsObject:function(){var e=new THREE.Sphere;return function(t){var r=t.geometry;return null===r.boundingSphere&&r.computeBoundingSphere(),e.copy(r.boundingSphere),e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){for(var t=this.planes,r=e.center,i=-e.radius,n=0;6>n;n++){var a=t[n].distanceToPoint(r);if(i>a)return!1}return!0},intersectsBox:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){for(var i=this.planes,n=0;6>n;n++){var a=i[n];e.x=a.normal.x>0?r.min.x:r.max.x,t.x=a.normal.x>0?r.max.x:r.min.x,e.y=a.normal.y>0?r.min.y:r.max.y,t.y=a.normal.y>0?r.max.y:r.min.y,e.z=a.normal.z>0?r.min.z:r.max.z,t.z=a.normal.z>0?r.max.z:r.min.z;var o=a.distanceToPoint(e),s=a.distanceToPoint(t);if(0>o&&0>s)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,r=0;6>r;r++)if(t[r].distanceToPoint(e)<0)return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0),this.constant=void 0!==t?t:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,i){return this.normal.set(e,t,r),this.constant=i,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i,n){var a=e.subVectors(n,i).cross(t.subVectors(r,i)).normalize();return this.setFromNormalAndCoplanarPoint(a,r),this}}(),copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var r=this.distanceToPoint(e),i=t||new THREE.Vector3;return i.copy(this.normal).multiplyScalar(r)},isIntersectionLine:function(e){var t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return 0>t&&r>0||0>r&&t>0},intersectLine:function(){var e=new THREE.Vector3;return function(t,r){var i=r||new THREE.Vector3,n=t.delta(e),a=this.normal.dot(n);if(0!=a){var o=-(t.start.dot(this.normal)+this.constant)/a;if(!(0>o||o>1))return i.copy(n).multiplyScalar(o).add(t.start)}else if(0==this.distanceToPoint(t.start))return i.copy(t.start)}}(),coplanarPoint:function(e){var t=e||new THREE.Vector3;return t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Matrix3;return function(i,n){var a=n||r.getNormalMatrix(i),o=e.copy(this.normal).applyMatrix3(a),s=this.coplanarPoint(t);return s.applyMatrix4(i),this.setFromNormalAndCoplanarPoint(o,s),this}}(),translate:function(e){return this.constant=this.constant-e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={generateUUID:function(){var e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),t=new Array(36),r=0,i;return function(){for(var n=0;36>n;n++)8==n||13==n||18==n||23==n?t[n]="-":14==n?t[n]="4":(2>=r&&(r=33554432+16777216*Math.random()|0),
i=15&r,r>>=4,t[n]=e[19==n?3&i|8:i]);return t.join("")}}(),clamp:function(e,t,r){return t>e?t:e>r?r:e},clampBottom:function(e,t){return t>e?t:e},mapLinear:function(e,t,r,i,n){return i+(e-t)*(n-i)/(r-t)},smoothstep:function(e,t,r){return t>=e?0:e>=r?1:(e=(e-t)/(r-t),e*e*(3-2*e))},smootherstep:function(e,t,r){return t>=e?0:e>=r?1:(e=(e-t)/(r-t),e*e*e*(e*(6*e-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return 0>e?-1:e>0?1:0},degToRad:function(){var e=Math.PI/180;return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}(),isPowerOfTwo:function(e){return 0===(e&e-1)&&0!==e}},THREE.Spline=function(e){function t(e,t,r,i,n,a,o){var s=.5*(r-e),h=.5*(i-t);return(2*(t-r)+s+h)*o+(-3*(t-r)-2*s-h)*a+s*n+t}this.points=e;var r=[],i={x:0,y:0,z:0},n,a,o,s,h,l,c,u,f;this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return n=(this.points.length-1)*e,a=Math.floor(n),o=n-a,r[0]=0===a?a:a-1,r[1]=a,r[2]=a>this.points.length-2?this.points.length-1:a+1,r[3]=a>this.points.length-3?this.points.length-1:a+2,l=this.points[r[0]],c=this.points[r[1]],u=this.points[r[2]],f=this.points[r[3]],s=o*o,h=o*s,i.x=t(l.x,c.x,u.x,f.x,o,s,h),i.y=t(l.y,c.y,u.y,f.y,o,s,h),i.z=t(l.z,c.z,u.z,f.z,o,s,h),i},this.getControlPointsArray=function(){var e,t,r=this.points.length,i=[];for(e=0;r>e;e++)t=this.points[e],i[e]=[t.x,t.y,t.z];return i},this.getLength=function(e){var t,r,i,n,a=0,o=0,s=0,h=new THREE.Vector3,l=new THREE.Vector3,c=[],u=0;for(c[0]=0,e||(e=100),i=this.points.length*e,h.copy(this.points[0]),t=1;i>t;t++)r=t/i,n=this.getPoint(r),l.copy(n),u+=l.distanceTo(h),h.copy(n),a=(this.points.length-1)*r,o=Math.floor(a),o!=s&&(c[o]=u,s=o);return c[c.length]=u,{chunks:c,total:u}},this.reparametrizeByArcLength=function(e){var t,r,i,n,a,o,s,h,l,c=[],u=new THREE.Vector3,f=this.getLength();for(c.push(u.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(s=f.chunks[t]-f.chunks[t-1],h=Math.ceil(e*s/f.total),n=(t-1)/(this.points.length-1),a=t/(this.points.length-1),r=1;h-1>r;r++)i=n+r*(1/h)*(a-n),l=this.getPoint(i),c.push(u.copy(l).clone());c.push(u.copy(this.points[t]).clone())}this.points=c}},THREE.Triangle=function(e,t,r){this.a=void 0!==e?e:new THREE.Vector3,this.b=void 0!==t?t:new THREE.Vector3,this.c=void 0!==r?r:new THREE.Vector3},THREE.Triangle.normal=function(){var e=new THREE.Vector3;return function(t,r,i,n){var a=n||new THREE.Vector3;a.subVectors(i,r),e.subVectors(t,r),a.cross(e);var o=a.lengthSq();return o>0?a.multiplyScalar(1/Math.sqrt(o)):a.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(i,n,a,o,s){e.subVectors(o,n),t.subVectors(a,n),r.subVectors(i,n);var h=e.dot(e),l=e.dot(t),c=e.dot(r),u=t.dot(t),f=t.dot(r),E=h*u-l*l,p=s||new THREE.Vector3;if(0==E)return p.set(-2,-1,-1);var d=1/E,m=(u*c-l*f)*d,v=(h*f-l*c)*d;return p.set(1-m-v,v,m)}}(),THREE.Triangle.containsPoint=function(){var e=new THREE.Vector3;return function(t,r,i,n){var a=THREE.Triangle.barycoordFromPoint(t,r,i,n,e);return a.x>=0&&a.y>=0&&a.x+a.y<=1}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this},setFromPointsAndIndices:function(e,t,r,i){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[i]),this},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),midpoint:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){var t=e||new THREE.Plane;return t.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Clock=function(e){this.autoStart=void 0!==e?e:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();e=.001*(t-this.oldTime),this.oldTime=t,this.elapsedTime+=e}return e}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(e){e.addEventListener=THREE.EventDispatcher.prototype.addEventListener,e.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,e.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,e.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)?!0:!1},removeEventListener:function(e,t){if(void 0!==this._listeners){var r=this._listeners,i=r[e];if(void 0!==i){var n=i.indexOf(t);-1!==n&&i.splice(n,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners,r=t[e.type];if(void 0!==r){e.target=this;for(var i=[],n=r.length,a=0;n>a;a++)i[a]=r[a];for(var a=0;n>a;a++)i[a].call(this,e)}}}},function(e){e.Raycaster=function(t,r,i,n){this.ray=new e.Ray(t,r),this.near=i||0,this.far=n||1/0,this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var t=function(e,t){return e.distance-t.distance},r=function(e,t,i,n){if(e.raycast(t,i),n===!0)for(var a=e.children,o=0,s=a.length;s>o;o++)r(a[o],t,i,!0)};e.Raycaster.prototype={constructor:e.Raycaster,precision:1e-4,linePrecision:1,set:function(e,t){this.ray.set(e,t)},intersectObject:function(e,i){var n=[];return r(e,this,n,i),n.sort(t),n},intersectObjects:function(e,i){for(var n=[],a=0,o=e.length;o>a;a++)r(e[a],this,n,i);return n.sort(t),n}}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.parent=void 0,this.children=[],this.up=THREE.Object3D.DefaultUp.clone();var e=this,t=new THREE.Vector3,r=new THREE.Euler,i=new THREE.Quaternion,n=new THREE.Vector3(1,1,1);r.onChange(function(){i.setFromEuler(r,!1)}),i.onChange(function(){r.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{enumerable:!0,value:t},rotation:{enumerable:!0,value:r},quaternion:{enumerable:!0,value:i},scale:{enumerable:!0,value:n}}),this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.userData={}},THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0),THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order},set eulerOrder(e){console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order=e},get useQuaternion(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(e){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new THREE.Quaternion;return function(t,r){return e.setFromAxisAngle(t,r),this.quaternion.multiply(e),this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new THREE.Vector3;return function(t,r){return e.copy(t).applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(r)),this}}(),translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}if(e===this)return console.error("THREE.Object3D.add:",e,"can't be added as a child of itself."),this;if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e);for(var r=this;void 0!==r.parent;)r=r.parent;void 0!==r&&r instanceof THREE.Scene&&r.__addObject(e)}else console.error("THREE.Object3D.add:",e,"is not an instance of THREE.Object3D.");return this},remove:function(e){if(arguments.length>1)for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);var r=this.children.indexOf(e);if(-1!==r){e.parent=void 0,e.dispatchEvent({type:"removed"}),this.children.splice(r,1);for(var i=this;void 0!==i.parent;)i=i.parent;void 0!==i&&i instanceof THREE.Scene&&i.__removeObject(e)}},raycast:function(){},traverse:function(e){e(this);for(var t=0,r=this.children.length;r>t;t++)this.children[t].traverse(e)},traverseVisible:function(e){if(this.visible!==!1){e(this);for(var t=0,r=this.children.length;r>t;t++)this.children[t].traverseVisible(e)}},getObjectById:function(e,t){for(var r=0,i=this.children.length;i>r;r++){var n=this.children[r];if(n.id===e)return n;if(t===!0&&(n=n.getObjectById(e,t),void 0!==n))return n}},getObjectByName:function(e,t){for(var r=0,i=this.children.length;i>r;r++){var n=this.children[r];if(n.name===e)return n;if(t===!0&&(n=n.getObjectByName(e,t),void 0!==n))return n}},getChildByName:function(e,t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e,t)},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate===!0&&this.updateMatrix(),(this.matrixWorldNeedsUpdate===!0||e===!0)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;r>t;t++)this.children[t].updateMatrixWorld(e)},clone:function(e,t){if(void 0===e&&(e=new THREE.Object3D),void 0===t&&(t=!0),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.quaternion.copy(this.quaternion),e.scale.copy(this.scale),e.renderDepth=this.renderDepth,e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled,e.userData=JSON.parse(JSON.stringify(this.userData)),t===!0)for(var r=0;r<this.children.length;r++){var i=this.children[r];e.add(i.clone())}return e}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Projector=function(){function e(){if(h===c){var e=new THREE.RenderableObject;return l.push(e),c++,h++,e}return l[h++]}function t(){if(f===p){var e=new THREE.RenderableVertex;return E.push(e),p++,f++,e}return E[f++]}function r(){if(m===g){var e=new THREE.RenderableFace;return v.push(e),g++,m++,e}return v[m++]}function i(){if(y===x){var e=new THREE.RenderableLine;return R.push(e),x++,y++,e}return R[y++]}function n(){if(b===w){var e=new THREE.RenderableSprite;return _.push(e),w++,b++,e}return _[b++]}function a(e,t){return e.z!==t.z?t.z-e.z:e.id!==t.id?e.id-t.id:0}function o(e,t){var r=0,i=1,n=e.z+e.w,a=t.z+t.w,o=-e.z+e.w,s=-t.z+t.w;return n>=0&&a>=0&&o>=0&&s>=0?!0:0>n&&0>a||0>o&&0>s?!1:(0>n?r=Math.max(r,n/(n-a)):0>a&&(i=Math.min(i,n/(n-a))),0>o?r=Math.max(r,o/(o-s)):0>s&&(i=Math.min(i,o/(o-s))),r>i?!1:(e.lerp(t,r),t.lerp(e,1-i),!0))}var s,h,l=[],c=0,u,f,E=[],p=0,d,m,v=[],g=0,T,y,R=[],x=0,H,b,_=[],w=0,M={objects:[],lights:[],elements:[]},S=new THREE.Vector3,C=new THREE.Vector3,A=new THREE.Vector3,L=new THREE.Vector3,P=new THREE.Vector4,F=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),D=new THREE.Box3,U=new Array(3),V=new Array(4),z=new THREE.Matrix4,B=new THREE.Matrix4,k,N=new THREE.Matrix4,O=new THREE.Matrix3,I=new THREE.Frustum,G=new THREE.Vector4,W=new THREE.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),B.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),e.applyProjection(B)},this.unprojectVector=function(){var e=new THREE.Matrix4;return function(t,r){return e.getInverse(r.projectionMatrix),B.multiplyMatrices(r.matrixWorld,e),t.applyProjection(B)}}(),this.pickingRay=function(e,t){e.z=-1;var r=new THREE.Vector3(e.x,e.y,1);return this.unprojectVector(e,t),this.unprojectVector(r,t),r.sub(e).normalize(),new THREE.Raycaster(e,r)};var j=function(){var e=[],n=[],a=null,o=null,s=new THREE.Matrix3,h=function(t){a=t,o=a.material,s.getNormalMatrix(a.matrixWorld),e.length=0,n.length=0},l=function(e){var t=e.position,r=e.positionWorld,i=e.positionScreen;r.copy(t).applyMatrix4(k),i.copy(r).applyMatrix4(B);var n=1/i.w;i.x*=n,i.y*=n,i.z*=n,e.visible=i.x>=-1&&i.x<=1&&i.y>=-1&&i.y<=1&&i.z>=-1&&i.z<=1},c=function(e,r,i){u=t(),u.position.set(e,r,i),l(u)},f=function(t,r,i){e.push(t,r,i)},p=function(e,t){n.push(e,t)},m=function(e,t,r){return e.visible===!0||t.visible===!0||r.visible===!0?!0:(U[0]=e.positionScreen,U[1]=t.positionScreen,U[2]=r.positionScreen,F.isIntersectionBox(D.setFromPoints(U)))},v=function(e,t,r){return(r.positionScreen.x-e.positionScreen.x)*(t.positionScreen.y-e.positionScreen.y)-(r.positionScreen.y-e.positionScreen.y)*(t.positionScreen.x-e.positionScreen.x)<0},g=function(e,t){var r=E[e],n=E[t];T=i(),T.id=a.id,T.v1.copy(r),T.v2.copy(n),T.z=(r.positionScreen.z+n.positionScreen.z)/2,T.material=a.material,M.elements.push(T)},y=function(t,i,h){var l=E[t],c=E[i],u=E[h];if(m(l,c,u)!==!1&&(o.side===THREE.DoubleSide||v(l,c,u)===!0)){d=r(),d.id=a.id,d.v1.copy(l),d.v2.copy(c),d.v3.copy(u),d.z=(l.positionScreen.z+c.positionScreen.z+u.positionScreen.z)/3;for(var f=0;3>f;f++){var p=3*arguments[f],g=d.vertexNormalsModel[f];g.set(e[p],e[p+1],e[p+2]),g.applyMatrix3(s).normalize();var T=2*arguments[f],y=d.uvs[f];y.set(n[T],n[T+1])}d.vertexNormalsLength=3,d.material=a.material,M.elements.push(d)}};return{setObject:h,projectVertex:l,checkTriangleVisibility:m,checkBackfaceCulling:v,pushVertex:c,pushNormal:f,pushUv:p,pushLine:g,pushTriangle:y}},X=new j;this.projectScene=function(l,c,u,p){m=0,y=0,b=0,M.elements.length=0,l.autoUpdate===!0&&l.updateMatrixWorld(),void 0===c.parent&&c.updateMatrixWorld(),z.copy(c.matrixWorldInverse.getInverse(c.matrixWorld)),B.multiplyMatrices(c.projectionMatrix,z),I.setFromMatrix(B),h=0,M.objects.length=0,M.lights.length=0,l.traverseVisible(function(t){t instanceof THREE.Light?M.lights.push(t):(t instanceof THREE.Mesh||t instanceof THREE.Line||t instanceof THREE.Sprite)&&(t.frustumCulled===!1||I.intersectsObject(t)===!0)&&(s=e(),s.id=t.id,s.object=t,null!==t.renderDepth?s.z=t.renderDepth:(L.setFromMatrixPosition(t.matrixWorld),L.applyProjection(B),s.z=L.z),M.objects.push(s))}),u===!0&&M.objects.sort(a);for(var v=0,g=M.objects.length;g>v;v++){var R=M.objects[v].object,x=R.geometry;if(X.setObject(R),k=R.matrixWorld,f=0,R instanceof THREE.Mesh){if(x instanceof THREE.BufferGeometry){var _=x.attributes,w=x.offsets;if(void 0===_.position)continue;for(var F=_.position.array,D=0,U=F.length;U>D;D+=3)X.pushVertex(F[D],F[D+1],F[D+2]);if(void 0!==_.normal)for(var V=_.normal.array,D=0,U=V.length;U>D;D+=3)X.pushNormal(V[D],V[D+1],V[D+2]);if(void 0!==_.uv)for(var j=_.uv.array,D=0,U=j.length;U>D;D+=2)X.pushUv(j[D],j[D+1]);if(void 0!==_.index){var Y=_.index.array;if(w.length>0)for(var v=0;v<w.length;v++)for(var q=w[v],K=q.index,D=q.start,U=q.start+q.count;U>D;D+=3)X.pushTriangle(Y[D]+K,Y[D+1]+K,Y[D+2]+K);else for(var D=0,U=Y.length;U>D;D+=3)X.pushTriangle(Y[D],Y[D+1],Y[D+2])}else for(var D=0,U=F.length/3;U>D;D+=3)X.pushTriangle(D,D+1,D+2)}else if(x instanceof THREE.Geometry){var Z=x.vertices,Q=x.faces,J=x.faceVertexUvs[0];O.getNormalMatrix(k);for(var ee=R.material instanceof THREE.MeshFaceMaterial,te=ee===!0?R.material:null,re=0,ie=Z.length;ie>re;re++){var ne=Z[re];X.pushVertex(ne.x,ne.y,ne.z)}for(var ae=0,oe=Q.length;oe>ae;ae++){var se=Q[ae],he=ee===!0?te.materials[se.materialIndex]:R.material;if(void 0!==he){var le=he.side,ce=E[se.a],ue=E[se.b],fe=E[se.c];if(he.morphTargets===!0){var Ee=x.morphTargets,pe=R.morphTargetInfluences,de=ce.position,me=ue.position,ve=fe.position;S.set(0,0,0),C.set(0,0,0),A.set(0,0,0);for(var ge=0,Te=Ee.length;Te>ge;ge++){var ye=pe[ge];if(0!==ye){var Re=Ee[ge].vertices;S.x+=(Re[se.a].x-de.x)*ye,S.y+=(Re[se.a].y-de.y)*ye,S.z+=(Re[se.a].z-de.z)*ye,C.x+=(Re[se.b].x-me.x)*ye,C.y+=(Re[se.b].y-me.y)*ye,C.z+=(Re[se.b].z-me.z)*ye,A.x+=(Re[se.c].x-ve.x)*ye,A.y+=(Re[se.c].y-ve.y)*ye,A.z+=(Re[se.c].z-ve.z)*ye}}ce.position.add(S),ue.position.add(C),fe.position.add(A),X.projectVertex(ce),X.projectVertex(ue),X.projectVertex(fe)}if(X.checkTriangleVisibility(ce,ue,fe)!==!1){var xe=X.checkBackfaceCulling(ce,ue,fe);if(le!==THREE.DoubleSide){if(le===THREE.FrontSide&&xe===!1)continue;if(le===THREE.BackSide&&xe===!0)continue}d=r(),d.id=R.id,d.v1.copy(ce),d.v2.copy(ue),d.v3.copy(fe),d.normalModel.copy(se.normal),xe!==!1||le!==THREE.BackSide&&le!==THREE.DoubleSide||d.normalModel.negate(),d.normalModel.applyMatrix3(O).normalize();for(var He=se.vertexNormals,be=0,_e=Math.min(He.length,3);_e>be;be++){var we=d.vertexNormalsModel[be];we.copy(He[be]),xe!==!1||le!==THREE.BackSide&&le!==THREE.DoubleSide||we.negate(),we.applyMatrix3(O).normalize()}d.vertexNormalsLength=He.length;var Me=J[ae];if(void 0!==Me)for(var Se=0;3>Se;Se++)d.uvs[Se].copy(Me[Se]);d.color=se.color,d.material=he,d.z=(ce.positionScreen.z+ue.positionScreen.z+fe.positionScreen.z)/3,M.elements.push(d)}}}}}else if(R instanceof THREE.Line){if(x instanceof THREE.BufferGeometry){var _=x.attributes;if(void 0!==_.position){for(var F=_.position.array,D=0,U=F.length;U>D;D+=3)X.pushVertex(F[D],F[D+1],F[D+2]);if(void 0!==_.index)for(var Y=_.index.array,D=0,U=Y.length;U>D;D+=2)X.pushLine(Y[D],Y[D+1]);else for(var Ce=R.type===THREE.LinePieces?2:1,D=0,U=F.length/3-1;U>D;D+=Ce)X.pushLine(D,D+1)}}else if(x instanceof THREE.Geometry){N.multiplyMatrices(B,k);var Z=R.geometry.vertices;if(0===Z.length)continue;ce=t(),ce.positionScreen.copy(Z[0]).applyMatrix4(N);for(var Ce=R.type===THREE.LinePieces?2:1,re=1,ie=Z.length;ie>re;re++)ce=t(),ce.positionScreen.copy(Z[re]).applyMatrix4(N),(re+1)%Ce>0||(ue=E[f-2],G.copy(ce.positionScreen),W.copy(ue.positionScreen),o(G,W)===!0&&(G.multiplyScalar(1/G.w),W.multiplyScalar(1/W.w),T=i(),T.id=R.id,T.v1.positionScreen.copy(G),T.v2.positionScreen.copy(W),T.z=Math.max(G.z,W.z),T.material=R.material,R.material.vertexColors===THREE.VertexColors&&(T.vertexColors[0].copy(R.geometry.colors[re]),T.vertexColors[1].copy(R.geometry.colors[re-1])),M.elements.push(T)))}}else if(R instanceof THREE.Sprite){P.set(k.elements[12],k.elements[13],k.elements[14],1),P.applyMatrix4(B);var Ae=1/P.w;P.z*=Ae,P.z>=-1&&P.z<=1&&(H=n(),H.id=R.id,H.x=P.x*Ae,H.y=P.y*Ae,H.z=P.z,H.object=R,H.rotation=R.rotation,H.scale.x=R.scale.x*Math.abs(H.x-(P.x+c.projectionMatrix.elements[0])/(P.w+c.projectionMatrix.elements[12])),H.scale.y=R.scale.y*Math.abs(H.y-(P.y+c.projectionMatrix.elements[5])/(P.w+c.projectionMatrix.elements[13])),H.material=R.material,M.elements.push(H))}}return p===!0&&M.elements.sort(a),M}},THREE.Face3=function(e,t,r,i,n,a){this.a=e,this.b=t,this.c=r,this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3,this.vertexNormals=i instanceof Array?i:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=n instanceof Array?n:[],this.vertexTangents=[],this.materialIndex=void 0!==a?a:0},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal),e.color.copy(this.color),e.materialIndex=this.materialIndex;for(var t=0,r=this.vertexNormals.length;r>t;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();for(var t=0,r=this.vertexColors.length;r>t;t++)e.vertexColors[t]=this.vertexColors[t].clone();for(var t=0,r=this.vertexTangents.length;r>t;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Face4=function(e,t,r,i,n,a,o){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(e,t,r,n,a,o)},THREE.BufferAttribute=function(e,t){this.array=e,this.itemSize=t},THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},set:function(e){return this.array.set(e),this},setX:function(e,t){return this.array[e*this.itemSize]=t,this},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},setXY:function(e,t,r){return e*=this.itemSize,this.array[e]=t,this.array[e+1]=r,this},setXYZ:function(e,t,r,i){return e*=this.itemSize,this.array[e]=t,this.array[e+1]=r,this.array[e+2]=i,this},setXYZW:function(e,t,r,i,n){return e*=this.itemSize,this.array[e]=t,this.array[e+1]=r,this.array[e+2]=i,this.array[e+3]=n,this}},THREE.Int8Attribute=function(e,t){return console.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Uint8Attribute=function(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Uint8ClampedAttribute=function(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Int16Attribute=function(e,t){return console.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Uint16Attribute=function(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Int32Attribute=function(e,t){return console.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Uint32Attribute=function(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Float32Attribute=function(e,t){return console.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Float64Attribute=function(e,t){return console.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.attributes={},this.drawcalls=[],this.offsets=this.drawcalls,this.boundingBox=null,this.boundingSphere=null},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(e,t){return t instanceof THREE.BufferAttribute==!1?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),void(this.attributes[e]={array:arguments[1],itemSize:arguments[2]})):void(this.attributes[e]=t)},getAttribute:function(e){return this.attributes[e]},addDrawCall:function(e,t,r){this.drawcalls.push({start:e,count:t,index:void 0!==r?r:0})},applyMatrix:function(e){var t=this.attributes.position;void 0!==t&&(e.applyToVector3Array(t.array),t.needsUpdate=!0);var r=this.attributes.normal;if(void 0!==r){var i=(new THREE.Matrix3).getNormalMatrix(e);i.applyToVector3Array(r.array),r.needsUpdate=!0}},fromGeometry:function(e,t){t=t||{vertexColors:THREE.NoColors};var r=e.vertices,i=e.faces,n=e.faceVertexUvs,a=t.vertexColors,o=n[0].length>0,s=3==i[0].vertexNormals.length,h=new Float32Array(3*i.length*3);this.addAttribute("position",new THREE.BufferAttribute(h,3));var l=new Float32Array(3*i.length*3);if(this.addAttribute("normal",new THREE.BufferAttribute(l,3)),a!==THREE.NoColors){var c=new Float32Array(3*i.length*3);this.addAttribute("color",new THREE.BufferAttribute(c,3))}if(o===!0){var u=new Float32Array(3*i.length*2);this.addAttribute("uvs",new THREE.BufferAttribute(u,2))}for(var f=0,E=0,p=0;f<i.length;f++,E+=6,p+=9){var d=i[f],m=r[d.a],v=r[d.b],g=r[d.c];if(h[p]=m.x,h[p+1]=m.y,h[p+2]=m.z,h[p+3]=v.x,h[p+4]=v.y,h[p+5]=v.z,h[p+6]=g.x,h[p+7]=g.y,h[p+8]=g.z,s===!0){var T=d.vertexNormals[0],y=d.vertexNormals[1],R=d.vertexNormals[2];l[p]=T.x,l[p+1]=T.y,l[p+2]=T.z,l[p+3]=y.x,l[p+4]=y.y,l[p+5]=y.z,l[p+6]=R.x,l[p+7]=R.y,l[p+8]=R.z}else{var x=d.normal;l[p]=x.x,l[p+1]=x.y,l[p+2]=x.z,l[p+3]=x.x,l[p+4]=x.y,l[p+5]=x.z,l[p+6]=x.x,l[p+7]=x.y,l[p+8]=x.z}if(a===THREE.FaceColors){var H=d.color;c[p]=H.r,c[p+1]=H.g,c[p+2]=H.b,c[p+3]=H.r,c[p+4]=H.g,c[p+5]=H.b,c[p+6]=H.r,c[p+7]=H.g,c[p+8]=H.b}else if(a===THREE.VertexColors){var b=d.vertexColors[0],_=d.vertexColors[1],w=d.vertexColors[2];c[p]=b.r,c[p+1]=b.g,c[p+2]=b.b,c[p+3]=_.r,c[p+4]=_.g,c[p+5]=_.b,c[p+6]=w.r,c[p+7]=w.g,c[p+8]=w.b}if(o===!0){var M=n[0][f][0],S=n[0][f][1],C=n[0][f][2];u[E]=M.x,u[E+1]=M.y,u[E+2]=S.x,u[E+3]=S.y,u[E+4]=C.x,u[E+5]=C.y}}return this.computeBoundingSphere(),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var t=this.boundingBox;e.length>=3&&(t.min.x=t.max.x=e[0],t.min.y=t.max.y=e[1],t.min.z=t.max.z=e[2]);for(var r=3,i=e.length;i>r;r+=3){var n=e[r],a=e[r+1],o=e[r+2];n<t.min.x?t.min.x=n:n>t.max.x&&(t.max.x=n),a<t.min.y?t.min.y=a:a>t.max.y&&(t.max.y=a),o<t.min.z?t.min.z=o:o>t.max.z&&(t.max.z=o)}}(void 0===e||0===e.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')},computeBoundingSphere:function(){var e=new THREE.Box3,t=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var r=this.attributes.position.array;if(r){e.makeEmpty();for(var i=this.boundingSphere.center,n=0,a=r.length;a>n;n+=3)t.set(r[n],r[n+1],r[n+2]),e.expandByPoint(t);e.center(i);for(var o=0,n=0,a=r.length;a>n;n+=3)t.set(r[n],r[n+1],r[n+2]),o=Math.max(o,i.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(o),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){if(this.attributes.position){var e,t,r,i,n=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(n)};else for(e=0,t=this.attributes.normal.array.length;t>e;e++)this.attributes.normal.array[e]=0;var a=this.attributes.position.array,o=this.attributes.normal.array,s,h,l,c,u,f,E=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3,m=new THREE.Vector3,v=new THREE.Vector3;if(this.attributes.index){var g=this.attributes.index.array,T=this.offsets.length>0?this.offsets:[{start:0,count:g.length,index:0}];for(r=0,i=T.length;i>r;++r){var y=T[r].start,R=T[r].count,x=T[r].index;for(e=y,t=y+R;t>e;e+=3)s=x+g[e],h=x+g[e+1],l=x+g[e+2],c=a[3*s],u=a[3*s+1],f=a[3*s+2],E.set(c,u,f),c=a[3*h],u=a[3*h+1],f=a[3*h+2],p.set(c,u,f),c=a[3*l],u=a[3*l+1],f=a[3*l+2],d.set(c,u,f),m.subVectors(d,p),v.subVectors(E,p),m.cross(v),o[3*s]+=m.x,o[3*s+1]+=m.y,o[3*s+2]+=m.z,o[3*h]+=m.x,o[3*h+1]+=m.y,o[3*h+2]+=m.z,o[3*l]+=m.x,o[3*l+1]+=m.y,o[3*l+2]+=m.z}}else for(e=0,t=a.length;t>e;e+=9)c=a[e],u=a[e+1],f=a[e+2],E.set(c,u,f),c=a[e+3],u=a[e+4],f=a[e+5],p.set(c,u,f),c=a[e+6],u=a[e+7],f=a[e+8],d.set(c,u,f),m.subVectors(d,p),v.subVectors(E,p),m.cross(v),o[e]=m.x,o[e+1]=m.y,o[e+2]=m.z,o[e+3]=m.x,o[e+4]=m.y,o[e+5]=m.z,o[e+6]=m.x,o[e+7]=m.y,o[e+8]=m.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},computeTangents:function(){function e(e,t,r){f=i[3*e],E=i[3*e+1],p=i[3*e+2],d=i[3*t],m=i[3*t+1],v=i[3*t+2],g=i[3*r],T=i[3*r+1],y=i[3*r+2],R=a[2*e],x=a[2*e+1],H=a[2*t],b=a[2*t+1],_=a[2*r],w=a[2*r+1],M=d-f,S=g-f,C=m-E,A=T-E,L=v-p,P=y-p,F=H-R,D=_-R,U=b-x,V=w-x,z=1/(F*V-D*U),B.set((V*M-U*S)*z,(V*C-U*A)*z,(V*L-U*P)*z),k.set((F*S-D*M)*z,(F*A-D*C)*z,(F*P-D*L)*z),l[e].add(B),l[t].add(B),l[r].add(B),c[e].add(k),c[t].add(k),c[r].add(k)}function t(e){ee.x=n[3*e],ee.y=n[3*e+1],ee.z=n[3*e+2],te.copy(ee),ie=l[e],Q.copy(ie),Q.sub(ee.multiplyScalar(ee.dot(ie))).normalize(),J.crossVectors(te,ie),ne=J.dot(c[e]),re=0>ne?-1:1,h[4*e]=Q.x,h[4*e+1]=Q.y,h[4*e+2]=Q.z,h[4*e+3]=re}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)return void console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");var r=this.attributes.index.array,i=this.attributes.position.array,n=this.attributes.normal.array,a=this.attributes.uv.array,o=i.length/3;if(void 0===this.attributes.tangent){var s=4*o;this.attributes.tangent={itemSize:4,array:new Float32Array(s)}}for(var h=this.attributes.tangent.array,l=[],c=[],u=0;o>u;u++)l[u]=new THREE.Vector3,c[u]=new THREE.Vector3;var f,E,p,d,m,v,g,T,y,R,x,H,b,_,w,M,S,C,A,L,P,F,D,U,V,z,B=new THREE.Vector3,k=new THREE.Vector3,N,O,I,G,W,j,X,Y=this.offsets;for(I=0,G=Y.length;G>I;++I){var q=Y[I].start,K=Y[I].count,Z=Y[I].index;for(N=q,O=q+K;O>N;N+=3)W=Z+r[N],j=Z+r[N+1],X=Z+r[N+2],e(W,j,X)}var Q=new THREE.Vector3,J=new THREE.Vector3,ee=new THREE.Vector3,te=new THREE.Vector3,re,ie,ne;for(I=0,G=Y.length;G>I;++I){var q=Y[I].start,K=Y[I].count,Z=Y[I].index;for(N=q,
O=q+K;O>N;N+=3)W=Z+r[N],j=Z+r[N+1],X=Z+r[N+2],t(W),t(j),t(X)}},computeOffsets:function(e){var t=e;void 0===e&&(t=65535);for(var r=Date.now(),i=this.attributes.index.array,n=this.attributes.position.array,a=n.length/3,o=i.length/3,s=new Uint16Array(i.length),h=0,l=0,c=[{start:0,count:0,index:0}],u=c[0],f=0,E=0,p=new Int32Array(6),d=new Int32Array(n.length),m=new Int32Array(n.length),v=0;v<n.length;v++)d[v]=-1,m[v]=-1;for(var g=0;o>g;g++){E=0;for(var T=0;3>T;T++){var y=i[3*g+T];-1==d[y]?(p[2*T]=y,p[2*T+1]=-1,E++):d[y]<u.index?(p[2*T]=y,p[2*T+1]=-1,f++):(p[2*T]=y,p[2*T+1]=d[y])}var R=l+E;if(R>u.index+t){var x={start:h,count:0,index:l};c.push(x),u=x;for(var H=0;6>H;H+=2){var b=p[H+1];b>-1&&b<u.index&&(p[H+1]=-1)}}for(var H=0;6>H;H+=2){var y=p[H],b=p[H+1];-1===b&&(b=l++),d[y]=b,m[b]=y,s[h++]=b-u.index,u.count++}}return this.reorderBuffers(s,m,l),this.offsets=c,c},merge:function(){console.log("BufferGeometry.merge(): TODO")},normalizeNormals:function(){for(var e=this.attributes.normal.array,t,r,i,n,a=0,o=e.length;o>a;a+=3)t=e[a],r=e[a+1],i=e[a+2],n=1/Math.sqrt(t*t+r*r+i*i),e[a]*=n,e[a+1]*=n,e[a+2]*=n},reorderBuffers:function(e,t,r){var i={},n=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(var a in this.attributes)if("index"!=a)for(var o=this.attributes[a].array,s=0,h=n.length;h>s;s++){var l=n[s];if(o instanceof l){i[a]=new l(this.attributes[a].itemSize*r);break}}for(var c=0;r>c;c++){var u=t[c];for(var a in this.attributes)if("index"!=a)for(var f=this.attributes[a].array,E=this.attributes[a].itemSize,p=i[a],d=0;E>d;d++)p[c*E+d]=f[u*E+d]}this.attributes.index.array=e;for(var a in this.attributes)"index"!=a&&(this.attributes[a].array=i[a],this.attributes[a].numItems=this.attributes[a].itemSize*r)},clone:function(){var e=new THREE.BufferGeometry,t=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(var r in this.attributes){for(var i=this.attributes[r],n=i.array,a={itemSize:i.itemSize,array:null},o=0,s=t.length;s>o;o++){var h=t[o];if(n instanceof h){a.array=new h(n);break}}e.attributes[r]=a}for(var o=0,s=this.offsets.length;s>o;o++){var l=this.offsets[o];e.offsets.push({start:l.start,index:l.index,count:l.count})}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Geometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.tangentsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.buffersNeedUpdate=!1,this.groupsNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=(new THREE.Matrix3).getNormalMatrix(e),r=0,i=this.vertices.length;i>r;r++){var n=this.vertices[r];n.applyMatrix4(e)}for(var r=0,i=this.faces.length;i>r;r++){var a=this.faces[r];a.normal.applyMatrix3(t).normalize();for(var o=0,s=a.vertexNormals.length;s>o;o++)a.vertexNormals[o].applyMatrix3(t).normalize()}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox(),this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},center:function(){this.computeBoundingBox();var e=new THREE.Vector3;return e.addVectors(this.boundingBox.min,this.boundingBox.max),e.multiplyScalar(-.5),this.applyMatrix((new THREE.Matrix4).makeTranslation(e.x,e.y,e.z)),this.computeBoundingBox(),e},computeFaceNormals:function(){for(var e=new THREE.Vector3,t=new THREE.Vector3,r=0,i=this.faces.length;i>r;r++){var n=this.faces[r],a=this.vertices[n.a],o=this.vertices[n.b],s=this.vertices[n.c];e.subVectors(s,o),t.subVectors(a,o),e.cross(t),e.normalize(),n.normal.copy(e)}},computeVertexNormals:function(e){var t,r,i,n,a,o;for(o=new Array(this.vertices.length),t=0,r=this.vertices.length;r>t;t++)o[t]=new THREE.Vector3;if(e){var s,h,l,c,u=new THREE.Vector3,f=new THREE.Vector3,E=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3;for(i=0,n=this.faces.length;n>i;i++)a=this.faces[i],s=this.vertices[a.a],h=this.vertices[a.b],l=this.vertices[a.c],u.subVectors(l,h),f.subVectors(s,h),u.cross(f),o[a.a].add(u),o[a.b].add(u),o[a.c].add(u)}else for(i=0,n=this.faces.length;n>i;i++)a=this.faces[i],o[a.a].add(a.normal),o[a.b].add(a.normal),o[a.c].add(a.normal);for(t=0,r=this.vertices.length;r>t;t++)o[t].normalize();for(i=0,n=this.faces.length;n>i;i++)a=this.faces[i],a.vertexNormals[0]=o[a.a].clone(),a.vertexNormals[1]=o[a.b].clone(),a.vertexNormals[2]=o[a.c].clone()},computeMorphNormals:function(){var e,t,r,i,n;for(r=0,i=this.faces.length;i>r;r++)for(n=this.faces[r],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),e=0,t=n.vertexNormals.length;t>e;e++)n.__originalVertexNormals[e]?n.__originalVertexNormals[e].copy(n.vertexNormals[e]):n.__originalVertexNormals[e]=n.vertexNormals[e].clone();var a=new THREE.Geometry;for(a.faces=this.faces,e=0,t=this.morphTargets.length;t>e;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var o=this.morphNormals[e].faceNormals,s=this.morphNormals[e].vertexNormals,h,l;for(r=0,i=this.faces.length;i>r;r++)h=new THREE.Vector3,l={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},o.push(h),s.push(l)}var c=this.morphNormals[e];a.vertices=this.morphTargets[e].vertices,a.computeFaceNormals(),a.computeVertexNormals();var h,l;for(r=0,i=this.faces.length;i>r;r++)n=this.faces[r],h=c.faceNormals[r],l=c.vertexNormals[r],h.copy(n.normal),l.a.copy(n.vertexNormals[0]),l.b.copy(n.vertexNormals[1]),l.c.copy(n.vertexNormals[2])}for(r=0,i=this.faces.length;i>r;r++)n=this.faces[r],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){function e(e,t,r,i,n,a,o){c=e.vertices[t],u=e.vertices[r],f=e.vertices[i],E=l[n],p=l[a],d=l[o],m=u.x-c.x,v=f.x-c.x,g=u.y-c.y,T=f.y-c.y,y=u.z-c.z,R=f.z-c.z,x=p.x-E.x,H=d.x-E.x,b=p.y-E.y,_=d.y-E.y,w=1/(x*_-H*b),L.set((_*m-b*v)*w,(_*g-b*T)*w,(_*y-b*R)*w),P.set((x*v-H*m)*w,(x*T-H*g)*w,(x*R-H*y)*w),C[t].add(L),C[r].add(L),C[i].add(L),A[t].add(P),A[r].add(P),A[i].add(P)}var t,r,i,n,a,o,s,h,l,c,u,f,E,p,d,m,v,g,T,y,R,x,H,b,_,w,M,S,C=[],A=[],L=new THREE.Vector3,P=new THREE.Vector3,F=new THREE.Vector3,D=new THREE.Vector3,U=new THREE.Vector3,V;for(i=0,n=this.vertices.length;n>i;i++)C[i]=new THREE.Vector3,A[i]=new THREE.Vector3;for(t=0,r=this.faces.length;r>t;t++)h=this.faces[t],l=this.faceVertexUvs[0][t],e(this,h.a,h.b,h.c,0,1,2);var z=["a","b","c","d"];for(t=0,r=this.faces.length;r>t;t++)for(h=this.faces[t],a=0;a<Math.min(h.vertexNormals.length,3);a++)U.copy(h.vertexNormals[a]),s=h[z[a]],M=C[s],F.copy(M),F.sub(U.multiplyScalar(U.dot(M))).normalize(),D.crossVectors(h.vertexNormals[a],M),S=D.dot(A[s]),V=0>S?-1:1,h.vertexTangents[a]=new THREE.Vector4(F.x,F.y,F.z,V);this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,r=0,i=t.length;i>r;r++)r>0&&(e+=t[r].distanceTo(t[r-1])),this.lineDistances[r]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,r){if(e instanceof THREE.Geometry==!1)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);var i,n=this.vertices.length,a=this.faceVertexUvs[0].length,o=this.vertices,s=e.vertices,h=this.faces,l=e.faces,c=this.faceVertexUvs[0],u=e.faceVertexUvs[0];void 0===r&&(r=0),void 0!==t&&(i=(new THREE.Matrix3).getNormalMatrix(t));for(var f=0,E=s.length;E>f;f++){var p=s[f],d=p.clone();void 0!==t&&d.applyMatrix4(t),o.push(d)}for(f=0,E=l.length;E>f;f++){var m=l[f],v,g,T,y=m.vertexNormals,R=m.vertexColors;v=new THREE.Face3(m.a+n,m.b+n,m.c+n),v.normal.copy(m.normal),void 0!==i&&v.normal.applyMatrix3(i).normalize();for(var x=0,H=y.length;H>x;x++)g=y[x].clone(),void 0!==i&&g.applyMatrix3(i).normalize(),v.vertexNormals.push(g);v.color.copy(m.color);for(var x=0,H=R.length;H>x;x++)T=R[x],v.vertexColors.push(T.clone());v.materialIndex=m.materialIndex+r,h.push(v)}for(f=0,E=u.length;E>f;f++){var b=u[f],_=[];if(void 0!==b){for(var x=0,H=b.length;H>x;x++)_.push(new THREE.Vector2(b[x].x,b[x].y));c.push(_)}}},mergeVertices:function(){var e={},t=[],r=[],i,n,a=4,o=Math.pow(10,a),s,h,l,c,u,f,E,p;for(s=0,h=this.vertices.length;h>s;s++)i=this.vertices[s],n=Math.round(i.x*o)+"_"+Math.round(i.y*o)+"_"+Math.round(i.z*o),void 0===e[n]?(e[n]=s,t.push(this.vertices[s]),r[s]=t.length-1):r[s]=r[e[n]];var d=[];for(s=0,h=this.faces.length;h>s;s++){l=this.faces[s],l.a=r[l.a],l.b=r[l.b],l.c=r[l.c],c=[l.a,l.b,l.c];for(var m=-1,v=0;3>v;v++)if(c[v]==c[(v+1)%3]){m=v,d.push(s);break}}for(s=d.length-1;s>=0;s--){var g=d[s];for(this.faces.splice(g,1),f=0,E=this.faceVertexUvs.length;E>f;f++)this.faceVertexUvs[f].splice(g,1)}var T=this.vertices.length-t.length;return this.vertices=t,T},makeGroups:function(){var e=0;return function(t,r){var i,n,a,o,s,h={},l,c=this.morphTargets.length,u=this.morphNormals.length;for(this.geometryGroups={},this.geometryGroupsList=[],i=0,n=this.faces.length;n>i;i++)a=this.faces[i],o=t?a.materialIndex:0,o in h||(h[o]={hash:o,counter:0}),s=h[o].hash+"_"+h[o].counter,s in this.geometryGroups||(l={id:e++,faces3:[],materialIndex:o,vertices:0,numMorphTargets:c,numMorphNormals:u},this.geometryGroups[s]=l,this.geometryGroupsList.push(l)),this.geometryGroups[s].vertices+3>r&&(h[o].counter+=1,s=h[o].hash+"_"+h[o].counter,s in this.geometryGroups||(l={id:e++,faces3:[],materialIndex:o,vertices:0,numMorphTargets:c,numMorphNormals:u},this.geometryGroups[s]=l,this.geometryGroupsList.push(l))),this.geometryGroups[s].faces3.push(i),this.geometryGroups[s].vertices+=3}}(),clone:function(){for(var e=new THREE.Geometry,t=this.vertices,r=0,i=t.length;i>r;r++)e.vertices.push(t[r].clone());for(var n=this.faces,r=0,i=n.length;i>r;r++)e.faces.push(n[r].clone());for(var a=this.faceVertexUvs[0],r=0,i=a.length;i>r;r++){for(var o=a[r],s=[],h=0,l=o.length;l>h;h++)s.push(new THREE.Vector2(o[h].x,o[h].y));e.faceVertexUvs[0].push(s)}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up),this.quaternion.setFromRotationMatrix(e)}}(),THREE.Camera.prototype.clone=function(e){return void 0===e&&(e=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,e),e.matrixWorldInverse.copy(this.matrixWorldInverse),e.projectionMatrix.copy(this.projectionMatrix),e},THREE.CubeCamera=function(e,t,r){THREE.Object3D.call(this);var i=90,n=1,a=new THREE.PerspectiveCamera(i,n,e,t);a.up.set(0,-1,0),a.lookAt(new THREE.Vector3(1,0,0)),this.add(a);var o=new THREE.PerspectiveCamera(i,n,e,t);o.up.set(0,-1,0),o.lookAt(new THREE.Vector3(-1,0,0)),this.add(o);var s=new THREE.PerspectiveCamera(i,n,e,t);s.up.set(0,0,1),s.lookAt(new THREE.Vector3(0,1,0)),this.add(s);var h=new THREE.PerspectiveCamera(i,n,e,t);h.up.set(0,0,-1),h.lookAt(new THREE.Vector3(0,-1,0)),this.add(h);var l=new THREE.PerspectiveCamera(i,n,e,t);l.up.set(0,-1,0),l.lookAt(new THREE.Vector3(0,0,1)),this.add(l);var c=new THREE.PerspectiveCamera(i,n,e,t);c.up.set(0,-1,0),c.lookAt(new THREE.Vector3(0,0,-1)),this.add(c),this.renderTarget=new THREE.WebGLRenderTargetCube(r,r,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(e,t){var r=this.renderTarget,i=r.generateMipmaps;r.generateMipmaps=!1,r.activeCubeFace=0,e.render(t,a,r),r.activeCubeFace=1,e.render(t,o,r),r.activeCubeFace=2,e.render(t,s,r),r.activeCubeFace=3,e.render(t,h,r),r.activeCubeFace=4,e.render(t,l,r),r.generateMipmaps=i,r.activeCubeFace=5,e.render(t,c,r)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.OrthographicCamera=function(e,t,r,i,n,a){THREE.Camera.call(this),this.left=e,this.right=t,this.top=r,this.bottom=i,this.near=void 0!==n?n:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(){var e=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,e),e.left=this.left,e.right=this.right,e.top=this.top,e.bottom=this.bottom,e.near=this.near,e.far=this.far,e},THREE.PerspectiveCamera=function(e,t,r,i){THREE.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==r?r:.1,this.far=void 0!==i?i:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,r,i,n,a){this.fullWidth=e,this.fullHeight=t,this.x=r,this.y=i,this.width=n,this.height=a,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,r=-t,i=e*r,n=e*t,a=Math.abs(n-i),o=Math.abs(t-r);this.projectionMatrix.makeFrustum(i+this.x*a/this.fullWidth,i+(this.x+this.width)*a/this.fullWidth,t-(this.y+this.height)*o/this.fullHeight,t-this.y*o/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var e=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,e),e.fov=this.fov,e.aspect=this.aspect,e.near=this.near,e.far=this.far,e},THREE.Light=function(e){THREE.Object3D.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.clone=function(e){return void 0===e&&(e=new THREE.Light),THREE.Object3D.prototype.clone.call(this,e),e.color.copy(this.color),e},THREE.AmbientLight=function(e){THREE.Light.call(this,e)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.clone=function(){var e=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,e),e},THREE.AreaLight=function(e,t){THREE.Light.call(this,e),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==t?t:1,this.width=1,this.height=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.clone=function(){var e=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,e),e.target=this.target.clone(),e.intensity=this.intensity,e.castShadow=this.castShadow,e.onlyShadow=this.onlyShadow,e.shadowCameraNear=this.shadowCameraNear,e.shadowCameraFar=this.shadowCameraFar,e.shadowCameraLeft=this.shadowCameraLeft,e.shadowCameraRight=this.shadowCameraRight,e.shadowCameraTop=this.shadowCameraTop,e.shadowCameraBottom=this.shadowCameraBottom,e.shadowCameraVisible=this.shadowCameraVisible,e.shadowBias=this.shadowBias,e.shadowDarkness=this.shadowDarkness,e.shadowMapWidth=this.shadowMapWidth,e.shadowMapHeight=this.shadowMapHeight,e.shadowCascade=this.shadowCascade,e.shadowCascadeOffset.copy(this.shadowCascadeOffset),e.shadowCascadeCount=this.shadowCascadeCount,e.shadowCascadeBias=this.shadowCascadeBias.slice(0),e.shadowCascadeWidth=this.shadowCascadeWidth.slice(0),e.shadowCascadeHeight=this.shadowCascadeHeight.slice(0),e.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0),e.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0),e},THREE.HemisphereLight=function(e,t,r){THREE.Light.call(this,e),this.position.set(0,100,0),this.groundColor=new THREE.Color(t),this.intensity=void 0!==r?r:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.clone=function(){var e=new THREE.HemisphereLight;return THREE.Light.prototype.clone.call(this,e),e.groundColor.copy(this.groundColor),e.intensity=this.intensity,e},THREE.PointLight=function(e,t,r){THREE.Light.call(this,e),this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.clone=function(){var e=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,e),e.intensity=this.intensity,e.distance=this.distance,e},THREE.SpotLight=function(e,t,r,i,n){THREE.Light.call(this,e),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0,this.angle=void 0!==i?i:Math.PI/3,this.exponent=void 0!==n?n:10,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.clone=function(){var e=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,e),e.target=this.target.clone(),e.intensity=this.intensity,e.distance=this.distance,e.angle=this.angle,e.exponent=this.exponent,e.castShadow=this.castShadow,e.onlyShadow=this.onlyShadow,e.shadowCameraNear=this.shadowCameraNear,e.shadowCameraFar=this.shadowCameraFar,e.shadowCameraFov=this.shadowCameraFov,e.shadowCameraVisible=this.shadowCameraVisible,e.shadowBias=this.shadowBias,e.shadowDarkness=this.shadowDarkness,e.shadowMapWidth=this.shadowMapWidth,e.shadowMapHeight=this.shadowMapHeight,e},THREE.Cache=function(){this.files={}},THREE.Cache.prototype={constructor:THREE.Cache,add:function(e,t){this.files[e]=t},get:function(e){return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},THREE.Loader=function(e){this.showStatus=e,this.statusDomElement=e?THREE.Loader.prototype.addStatusElement():null,this.imageLoader=new THREE.ImageLoader,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ";t+=e.total?(100*e.loaded/e.total).toFixed(0)+"%":(e.loaded/1024).toFixed(2)+" KB",this.statusDomElement.innerHTML=t},extractUrlBase:function(e){var t=e.split("/");return 1===t.length?"./":(t.pop(),t.join("/")+"/")},initMaterials:function(e,t){for(var r=[],i=0;i<e.length;++i)r[i]=this.createMaterial(e[i],t);return r},needsTangents:function(e){for(var t=0,r=e.length;r>t;t++){var i=e[t];if(i instanceof THREE.ShaderMaterial)return!0}return!1},createMaterial:function(e,t){function r(e){var t=Math.log(e)/Math.LN2;return Math.pow(2,Math.round(t))}function i(e,i,n,o,s,h,l){var c=t+n,u,f=THREE.Loader.Handlers.get(c);if(null!==f?u=f.load(c):(u=new THREE.Texture,f=a.imageLoader,f.crossOrigin=a.crossOrigin,f.load(c,function(e){if(THREE.Math.isPowerOfTwo(e.width)===!1||THREE.Math.isPowerOfTwo(e.height)===!1){var t=r(e.width),i=r(e.height),n=document.createElement("canvas");n.width=t,n.height=i;var a=n.getContext("2d");a.drawImage(e,0,0,t,i),u.image=n}else u.image=e;u.needsUpdate=!0})),u.sourceFile=n,o&&(u.repeat.set(o[0],o[1]),1!==o[0]&&(u.wrapS=THREE.RepeatWrapping),1!==o[1]&&(u.wrapT=THREE.RepeatWrapping)),s&&u.offset.set(s[0],s[1]),h){var E={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==E[h[0]]&&(u.wrapS=E[h[0]]),void 0!==E[h[1]]&&(u.wrapT=E[h[1]])}l&&(u.anisotropy=l),e[i]=u}function n(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var a=this,o="MeshLambertMaterial",s={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var h=e.shading.toLowerCase();"phong"===h?o="MeshPhongMaterial":"basic"===h&&(o="MeshBasicMaterial")}if(void 0!==e.blending&&void 0!==THREE[e.blending]&&(s.blending=THREE[e.blending]),(void 0!==e.transparent||e.opacity<1)&&(s.transparent=e.transparent),void 0!==e.depthTest&&(s.depthTest=e.depthTest),void 0!==e.depthWrite&&(s.depthWrite=e.depthWrite),void 0!==e.visible&&(s.visible=e.visible),void 0!==e.flipSided&&(s.side=THREE.BackSide),void 0!==e.doubleSided&&(s.side=THREE.DoubleSide),void 0!==e.wireframe&&(s.wireframe=e.wireframe),void 0!==e.vertexColors&&("face"===e.vertexColors?s.vertexColors=THREE.FaceColors:e.vertexColors&&(s.vertexColors=THREE.VertexColors)),e.colorDiffuse?s.color=n(e.colorDiffuse):e.DbgColor&&(s.color=e.DbgColor),e.colorSpecular&&(s.specular=n(e.colorSpecular)),e.colorAmbient&&(s.ambient=n(e.colorAmbient)),e.colorEmissive&&(s.emissive=n(e.colorEmissive)),e.transparency&&(s.opacity=e.transparency),e.specularCoef&&(s.shininess=e.specularCoef),e.mapDiffuse&&t&&i(s,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy),e.mapLight&&t&&i(s,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy),e.mapBump&&t&&i(s,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy),e.mapNormal&&t&&i(s,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy),e.mapSpecular&&t&&i(s,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy),e.mapAlpha&&t&&i(s,"alphaMap",e.mapAlpha,e.mapAlphaRepeat,e.mapAlphaOffset,e.mapAlphaWrap,e.mapAlphaAnisotropy),e.mapBumpScale&&(s.bumpScale=e.mapBumpScale),e.mapNormal){var l=THREE.ShaderLib.normalmap,c=THREE.UniformsUtils.clone(l.uniforms);c.tNormal.value=s.normalMap,e.mapNormalFactor&&c.uNormalScale.value.set(e.mapNormalFactor,e.mapNormalFactor),s.map&&(c.tDiffuse.value=s.map,c.enableDiffuse.value=!0),s.specularMap&&(c.tSpecular.value=s.specularMap,c.enableSpecular.value=!0),s.lightMap&&(c.tAO.value=s.lightMap,c.enableAO.value=!0),c.diffuse.value.setHex(s.color),c.specular.value.setHex(s.specular),c.ambient.value.setHex(s.ambient),c.shininess.value=s.shininess,void 0!==s.opacity&&(c.opacity.value=s.opacity);var u={fragmentShader:l.fragmentShader,vertexShader:l.vertexShader,uniforms:c,lights:!0,fog:!0},f=new THREE.ShaderMaterial(u);s.transparent&&(f.transparent=!0)}else var f=new THREE[o](s);return void 0!==e.DbgName&&(f.name=e.DbgName),f}},THREE.Loader.Handlers={handlers:[],add:function(e,t){this.handlers.push(e,t)},get:function(e){for(var t=0,r=this.handlers.length;r>t;t+=2){var i=this.handlers[t],n=this.handlers[t+1];if(i.test(e))return n}return null}},THREE.XHRLoader=function(e){this.cache=new THREE.Cache,this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(e,t,r,i){var n=this,a=n.cache.get(e);if(void 0!==a)return void(t&&t(a));var o=new XMLHttpRequest;o.open("GET",e,!0),o.addEventListener("load",function(r){n.cache.add(e,this.response),t&&t(this.response),n.manager.itemEnd(e)},!1),void 0!==r&&o.addEventListener("progress",function(e){r(e)},!1),void 0!==i&&o.addEventListener("error",function(e){i(e)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),void 0!==this.responseType&&(o.responseType=this.responseType),o.send(null),n.manager.itemStart(e)},setResponseType:function(e){this.responseType=e},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.ImageLoader=function(e){this.cache=new THREE.Cache,this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t,r,i){var n=this,a=n.cache.get(e);if(void 0!==a)return void t(a);var o=document.createElement("img");return void 0!==t&&o.addEventListener("load",function(r){n.cache.add(e,this),t(this),n.manager.itemEnd(e)},!1),void 0!==r&&o.addEventListener("progress",function(e){r(e)},!1),void 0!==i&&o.addEventListener("error",function(e){i(e)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),o.src=e,n.manager.itemStart(e),o},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.JSONLoader=function(e){THREE.Loader.call(this,e),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(e,t,r){var i=this;r=r&&"string"==typeof r?r:this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,r)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,r,i,n){var a=new XMLHttpRequest,o=0;a.onreadystatechange=function(){if(a.readyState===a.DONE)if(200===a.status||0===a.status){if(a.responseText){var s=JSON.parse(a.responseText);if(void 0!==s.metadata&&"scene"===s.metadata.type)return void console.error('THREE.JSONLoader: "'+t+'" seems to be a Scene. Use THREE.SceneLoader instead.');var h=e.parse(s,i);r(h.geometry,h.materials)}else console.error('THREE.JSONLoader: "'+t+'" seems to be unreachable or the file is empty.');e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load \""+t+'" ('+a.status+")");else a.readyState===a.LOADING?n&&(0===o&&(o=a.getResponseHeader("Content-Length")),n({total:o,loaded:a.responseText.length})):a.readyState===a.HEADERS_RECEIVED&&void 0!==n&&(o=a.getResponseHeader("Content-Length"))},a.open("GET",t,!0),a.withCredentials=this.withCredentials,a.send(null)},THREE.JSONLoader.prototype.parse=function(e,t){function r(t){function r(e,t){return e&1<<t}var i,n,a,s,h,l,c,u,f,E,p,d,m,v,g,T,y,R,x,H,b,_,w,M,S,C,A,L,P=e.faces,F=e.vertices,D=e.normals,U=e.colors,V=0;if(void 0!==e.uvs){for(i=0;i<e.uvs.length;i++)e.uvs[i].length&&V++;for(i=0;V>i;i++)o.faceVertexUvs[i]=[]}for(s=0,h=F.length;h>s;)R=new THREE.Vector3,R.x=F[s++]*t,R.y=F[s++]*t,R.z=F[s++]*t,o.vertices.push(R);for(s=0,h=P.length;h>s;)if(E=P[s++],p=r(E,0),d=r(E,1),m=r(E,3),v=r(E,4),g=r(E,5),T=r(E,6),y=r(E,7),p){if(H=new THREE.Face3,H.a=P[s],H.b=P[s+1],H.c=P[s+3],b=new THREE.Face3,b.a=P[s+1],b.b=P[s+2],b.c=P[s+3],s+=4,d&&(f=P[s++],H.materialIndex=f,b.materialIndex=f),a=o.faces.length,m)for(i=0;V>i;i++)for(S=e.uvs[i],o.faceVertexUvs[i][a]=[],o.faceVertexUvs[i][a+1]=[],n=0;4>n;n++)u=P[s++],A=S[2*u],L=S[2*u+1],C=new THREE.Vector2(A,L),2!==n&&o.faceVertexUvs[i][a].push(C),0!==n&&o.faceVertexUvs[i][a+1].push(C);if(v&&(c=3*P[s++],H.normal.set(D[c++],D[c++],D[c]),b.normal.copy(H.normal)),g)for(i=0;4>i;i++)c=3*P[s++],M=new THREE.Vector3(D[c++],D[c++],D[c]),2!==i&&H.vertexNormals.push(M),0!==i&&b.vertexNormals.push(M);if(T&&(l=P[s++],w=U[l],H.color.setHex(w),b.color.setHex(w)),y)for(i=0;4>i;i++)l=P[s++],w=U[l],2!==i&&H.vertexColors.push(new THREE.Color(w)),0!==i&&b.vertexColors.push(new THREE.Color(w));o.faces.push(H),o.faces.push(b)}else{if(x=new THREE.Face3,x.a=P[s++],x.b=P[s++],x.c=P[s++],d&&(f=P[s++],x.materialIndex=f),a=o.faces.length,m)for(i=0;V>i;i++)for(S=e.uvs[i],o.faceVertexUvs[i][a]=[],n=0;3>n;n++)u=P[s++],A=S[2*u],L=S[2*u+1],C=new THREE.Vector2(A,L),o.faceVertexUvs[i][a].push(C);if(v&&(c=3*P[s++],x.normal.set(D[c++],D[c++],D[c])),g)for(i=0;3>i;i++)c=3*P[s++],M=new THREE.Vector3(D[c++],D[c++],D[c]),x.vertexNormals.push(M);if(T&&(l=P[s++],x.color.setHex(U[l])),y)for(i=0;3>i;i++)l=P[s++],x.vertexColors.push(new THREE.Color(U[l]));o.faces.push(x)}}function i(){var t=void 0!==e.influencesPerVertex?e.influencesPerVertex:2;if(e.skinWeights)for(var r=0,i=e.skinWeights.length;i>r;r+=t){var n=e.skinWeights[r],a=t>1?e.skinWeights[r+1]:0,s=t>2?e.skinWeights[r+2]:0,h=t>3?e.skinWeights[r+3]:0;o.skinWeights.push(new THREE.Vector4(n,a,s,h))}if(e.skinIndices)for(var r=0,i=e.skinIndices.length;i>r;r+=t){var l=e.skinIndices[r],c=t>1?e.skinIndices[r+1]:0,u=t>2?e.skinIndices[r+2]:0,f=t>3?e.skinIndices[r+3]:0;o.skinIndices.push(new THREE.Vector4(l,c,u,f))}o.bones=e.bones,o.bones&&o.bones.length>0&&(o.skinWeights.length!==o.skinIndices.length||o.skinIndices.length!==o.vertices.length)&&console.warn("When skinning, number of vertices ("+o.vertices.length+"), skinIndices ("+o.skinIndices.length+"), and skinWeights ("+o.skinWeights.length+") should match."),o.animation=e.animation,o.animations=e.animations}function n(t){if(void 0!==e.morphTargets){var r,i,n,a,s,h;for(r=0,i=e.morphTargets.length;i>r;r++)for(o.morphTargets[r]={},o.morphTargets[r].name=e.morphTargets[r].name,o.morphTargets[r].vertices=[],s=o.morphTargets[r].vertices,h=e.morphTargets[r].vertices,n=0,a=h.length;a>n;n+=3){var l=new THREE.Vector3;l.x=h[n]*t,l.y=h[n+1]*t,l.z=h[n+2]*t,s.push(l)}}if(void 0!==e.morphColors){var r,i,c,u,f,E,p;for(r=0,i=e.morphColors.length;i>r;r++)for(o.morphColors[r]={},o.morphColors[r].name=e.morphColors[r].name,o.morphColors[r].colors=[],f=o.morphColors[r].colors,E=e.morphColors[r].colors,c=0,u=E.length;u>c;c+=3)p=new THREE.Color(16755200),p.setRGB(E[c],E[c+1],E[c+2]),f.push(p)}}var a=this,o=new THREE.Geometry,s=void 0!==e.scale?1/e.scale:1;if(r(s),i(),n(s),o.computeFaceNormals(),o.computeBoundingSphere(),void 0===e.materials||0===e.materials.length)return{geometry:o};var h=this.initMaterials(e.materials,t);return this.needsTangents(h)&&o.computeTangents(),{geometry:o,materials:h}},THREE.LoadingManager=function(e,t,r){var i=this,n=0,a=0;this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){a++},this.itemEnd=function(e){n++,void 0!==i.onProgress&&i.onProgress(e,n,a),n===a&&void 0!==i.onLoad&&i.onLoad()}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(e,t,r,i){var n=this,a=new THREE.XHRLoader;a.setCrossOrigin(this.crossOrigin),a.load(e,function(e){t(n.parse(JSON.parse(e)))},r,i)},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE.BufferGeometry,r=e.attributes;for(var i in r){var n=r[i];t.attributes[i]={itemSize:n.itemSize,array:new self[n.type](n.array)}}var a=e.offsets;void 0!==a&&(t.offsets=JSON.parse(JSON.stringify(a)));
var o=e.boundingSphere;return void 0!==o&&(t.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==o.center?o.center:[0,0,0]),o.radius)),t}},THREE.MaterialLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(e,t,r,i){var n=this,a=new THREE.XHRLoader;a.setCrossOrigin(this.crossOrigin),a.load(e,function(e){t(n.parse(JSON.parse(e)))},r,i)},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE[e.type];if(void 0!==e.color&&t.color.setHex(e.color),void 0!==e.ambient&&t.ambient.setHex(e.ambient),void 0!==e.emissive&&t.emissive.setHex(e.emissive),void 0!==e.specular&&t.specular.setHex(e.specular),void 0!==e.shininess&&(t.shininess=e.shininess),void 0!==e.uniforms&&(t.uniforms=e.uniforms),void 0!==e.vertexShader&&(t.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(t.fragmentShader=e.fragmentShader),void 0!==e.vertexColors&&(t.vertexColors=e.vertexColors),void 0!==e.blending&&(t.blending=e.blending),void 0!==e.side&&(t.side=e.side),void 0!==e.opacity&&(t.opacity=e.opacity),void 0!==e.transparent&&(t.transparent=e.transparent),void 0!==e.wireframe&&(t.wireframe=e.wireframe),void 0!==e.materials)for(var r=0,i=e.materials.length;i>r;r++)t.materials.push(this.parse(e.materials[r]));return t}},THREE.ObjectLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(e,t,r,i){var n=this,a=new THREE.XHRLoader(n.manager);a.setCrossOrigin(this.crossOrigin),a.load(e,function(e){t(n.parse(JSON.parse(e)))},r,i)},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=this.parseGeometries(e.geometries),r=this.parseMaterials(e.materials),i=this.parseObject(e.object,t,r);return i},parseGeometries:function(e){var t={};if(void 0!==e)for(var r=new THREE.JSONLoader,i=new THREE.BufferGeometryLoader,n=0,a=e.length;a>n;n++){var o,s=e[n];switch(s.type){case"PlaneGeometry":o=new THREE.PlaneGeometry(s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"CubeGeometry":o=new THREE.BoxGeometry(s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":o=new THREE.CircleGeometry(s.radius,s.segments);break;case"CylinderGeometry":o=new THREE.CylinderGeometry(s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded);break;case"SphereGeometry":o=new THREE.SphereGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"IcosahedronGeometry":o=new THREE.IcosahedronGeometry(s.radius,s.detail);break;case"TorusGeometry":o=new THREE.TorusGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":o=new THREE.TorusKnotGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.p,s.q,s.heightScale);break;case"BufferGeometry":o=i.parse(s.data);break;case"Geometry":o=r.parse(s.data).geometry}o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),t[s.uuid]=o}return t},parseMaterials:function(e){var t={};if(void 0!==e)for(var r=new THREE.MaterialLoader,i=0,n=e.length;n>i;i++){var a=e[i],o=r.parse(a);o.uuid=a.uuid,void 0!==a.name&&(o.name=a.name),t[a.uuid]=o}return t},parseObject:function(){var e=new THREE.Matrix4;return function(t,r,i){var n;switch(t.type){case"Scene":n=new THREE.Scene;break;case"PerspectiveCamera":n=new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);break;case"OrthographicCamera":n=new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":n=new THREE.AmbientLight(t.color);break;case"DirectionalLight":n=new THREE.DirectionalLight(t.color,t.intensity);break;case"PointLight":n=new THREE.PointLight(t.color,t.intensity,t.distance);break;case"SpotLight":n=new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.exponent);break;case"HemisphereLight":n=new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":var a=r[t.geometry],o=i[t.material];void 0===a&&console.error("THREE.ObjectLoader: Undefined geometry "+t.geometry),void 0===o&&console.error("THREE.ObjectLoader: Undefined material "+t.material),n=new THREE.Mesh(a,o);break;case"Sprite":var o=i[t.material];void 0===o&&console.error("THREE.ObjectLoader: Undefined material "+t.material),n=new THREE.Sprite(o);break;default:n=new THREE.Object3D}if(n.uuid=t.uuid,void 0!==t.name&&(n.name=t.name),void 0!==t.matrix?(e.fromArray(t.matrix),e.decompose(n.position,n.quaternion,n.scale)):(void 0!==t.position&&n.position.fromArray(t.position),void 0!==t.rotation&&n.rotation.fromArray(t.rotation),void 0!==t.scale&&n.scale.fromArray(t.scale)),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.userData&&(n.userData=t.userData),void 0!==t.children)for(var s in t.children)n.add(this.parseObject(t.children[s],r,i));return n}}()},THREE.TextureLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e,t,r,i){var n=this,a=new THREE.ImageLoader(n.manager);a.setCrossOrigin(this.crossOrigin),a.load(e,function(e){var r=new THREE.Texture(e);r.needsUpdate=!0,void 0!==t&&t(r)},r,i)},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=0,this.visible=!0,this.needsUpdate=!0},THREE.Material.prototype={constructor:THREE.Material,setValues:function(e){if(void 0!==e)for(var t in e){var r=e[t];if(void 0!==r){if(t in this){var i=this[t];i instanceof THREE.Color?i.set(r):i instanceof THREE.Vector3&&r instanceof THREE.Vector3?i.copy(r):"overdraw"==t?this[t]=Number(r):this[t]=r}}else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}},clone:function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.scale=this.scale,e.dashSize=this.dashSize,e.gapSize=this.gapSize,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.alphaMap=this.alphaMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.alphaMap=this.alphaMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.specular.copy(this.specular),e.shininess=this.shininess,e.metal=this.metal,e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.normalMap=this.normalMap,e.normalScale.copy(this.normalScale),e.specularMap=this.specularMap,e.alphaMap=this.alphaMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.morphTargets=!1,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,e),e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]},THREE.MeshFaceMaterial.prototype.clone=function(){for(var e=new THREE.MeshFaceMaterial,t=0;t<this.materials.length;t++)e.materials.push(this.materials[t].clone());return e},THREE.PointCloudMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(e)},THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype),THREE.PointCloudMaterial.prototype.clone=function(){var e=new THREE.PointCloudMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.ParticleBasicMaterial=function(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial."),new THREE.PointCloudMaterial(e)},THREE.ParticleSystemMaterial=function(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial."),new THREE.PointCloudMaterial(e)},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.defines={},this.uniforms={},this.attributes=null,this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.RawShaderMaterial=function(e){THREE.ShaderMaterial.call(this,e)},THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype),THREE.RawShaderMaterial.prototype.clone=function(){var e=new THREE.RawShaderMaterial;return THREE.ShaderMaterial.prototype.clone.call(this,e),e},THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(e)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.rotation=this.rotation,e.fog=this.fog,e},THREE.SpriteCanvasMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(e,t){},this.setValues(e)},THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteCanvasMaterial.prototype.clone=function(){var e=new THREE.SpriteCanvasMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.program=this.program,e},THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial,THREE.Texture=function(e,t,r,i,n,a,o,s,h){this.id=THREE.TextureIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.image=void 0!==e?e:THREE.Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==t?t:THREE.Texture.DEFAULT_MAPPING,this.wrapS=void 0!==r?r:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i?i:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==a?a:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==o?o:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this._needsUpdate=!1,this.onUpdate=null},THREE.Texture.DEFAULT_IMAGE=void 0,THREE.Texture.DEFAULT_MAPPING=new THREE.UVMapping,THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){e===!0&&this.update(),this._needsUpdate=e},clone:function(e){return void 0===e&&(e=new THREE.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CubeTexture=function(e,t,r,i,n,a,o,s,h){THREE.Texture.call(this,e,t,r,i,n,a,o,s,h),this.images=e},THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CubeTexture.clone=function(e){return void 0===e&&(e=new THREE.CubeTexture),THREE.Texture.prototype.clone.call(this,e),e.images=this.images,e},THREE.CompressedTexture=function(e,t,r,i,n,a,o,s,h,l,c){THREE.Texture.call(this,null,a,o,s,h,l,i,n,c),this.image={width:t,height:r},this.mipmaps=e,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.DataTexture=function(e,t,r,i,n,a,o,s,h,l,c){THREE.Texture.call(this,null,a,o,s,h,l,i,n,c),this.image={data:e,width:t,height:r}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.PointCloud=function(e,t){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.PointCloudMaterial({color:16777215*Math.random()}),this.sortParticles=!1},THREE.PointCloud.prototype=Object.create(THREE.Object3D.prototype),THREE.PointCloud.prototype.raycast=function(){var e=new THREE.Matrix4,t=new THREE.Ray;return function(r,i){var n=this,a=n.geometry,o=r.params.PointCloud.threshold;if(e.getInverse(this.matrixWorld),t.copy(r.ray).applyMatrix4(e),null===a.boundingBox||t.isIntersectionBox(a.boundingBox)!==!1){var s=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=new THREE.Vector3,l=function(e,a){var o=t.distanceToPoint(e);if(s>o){var h=t.closestPointToPoint(e);h.applyMatrix4(n.matrixWorld);var l=r.ray.origin.distanceTo(h);i.push({distance:l,distanceToRay:o,point:h.clone(),index:a,face:null,object:n})}};if(a instanceof THREE.BufferGeometry){var c=a.attributes,u=c.position.array;if(void 0!==c.index){var f=c.index.array,E=a.offsets;if(0===E.length){var p={start:0,count:f.length,index:0};E=[p]}for(var d=0,m=E.length;m>d;++d)for(var v=E[d].start,g=E[d].count,T=E[d].index,y=v,R=v+g;R>y;y++){var x=T+f[y];h.set(u[3*x],u[3*x+1],u[3*x+2]),l(h,x)}}else for(var H=u.length/3,y=0;H>y;y++)h.set(u[3*y],u[3*y+1],u[3*y+2]),l(h,y)}else for(var b=this.geometry.vertices,y=0;y<b.length;y++)l(b[y],y)}}}(),THREE.PointCloud.prototype.clone=function(e){return void 0===e&&(e=new THREE.PointCloud(this.geometry,this.material)),e.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,e),e},THREE.ParticleSystem=function(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud."),new THREE.PointCloud(e,t)},THREE.Line=function(e,t,r){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==r?r:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.raycast=function(){var e=new THREE.Matrix4,t=new THREE.Ray,r=new THREE.Sphere;return function(i,n){var a=i.linePrecision,o=a*a,s=this.geometry;if(null===s.boundingSphere&&s.computeBoundingSphere(),r.copy(s.boundingSphere),r.applyMatrix4(this.matrixWorld),i.ray.isIntersectionSphere(r)!==!1&&(e.getInverse(this.matrixWorld),t.copy(i.ray).applyMatrix4(e),s instanceof THREE.Geometry))for(var h=s.vertices,l=h.length,c=new THREE.Vector3,u=new THREE.Vector3,f=this.type===THREE.LineStrip?1:2,E=0;l-1>E;E+=f){var p=t.distanceSqToSegment(h[E],h[E+1],u,c);if(!(p>o)){var d=t.origin.distanceTo(u);d<i.near||d>i.far||n.push({distance:d,point:c.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this})}}}}(),THREE.Line.prototype.clone=function(e){return void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;t>e;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.raycast=function(){var e=new THREE.Matrix4,t=new THREE.Ray,r=new THREE.Sphere,i=new THREE.Vector3,n=new THREE.Vector3,a=new THREE.Vector3;return function(o,s){var h=this.geometry;if(null===h.boundingSphere&&h.computeBoundingSphere(),r.copy(h.boundingSphere),r.applyMatrix4(this.matrixWorld),o.ray.isIntersectionSphere(r)!==!1&&(e.getInverse(this.matrixWorld),t.copy(o.ray).applyMatrix4(e),null===h.boundingBox||t.isIntersectionBox(h.boundingBox)!==!1))if(h instanceof THREE.BufferGeometry){var l=this.material;if(void 0===l)return;var c=h.attributes,u,f,E,p=o.precision;if(void 0!==c.index){var d=c.index.array,m=c.position.array,v=h.offsets;0===v.length&&(v=[{start:0,count:d.length,index:0}]);for(var g=0,T=v.length;T>g;++g)for(var y=v[g].start,R=v[g].count,x=v[g].index,H=y,b=y+R;b>H;H+=3){if(u=x+d[H],f=x+d[H+1],E=x+d[H+2],i.set(m[3*u],m[3*u+1],m[3*u+2]),n.set(m[3*f],m[3*f+1],m[3*f+2]),a.set(m[3*E],m[3*E+1],m[3*E+2]),l.side===THREE.BackSide)var _=t.intersectTriangle(a,n,i,!0);else var _=t.intersectTriangle(i,n,a,l.side!==THREE.DoubleSide);if(null!==_){_.applyMatrix4(this.matrixWorld);var w=o.ray.origin.distanceTo(_);p>w||w<o.near||w>o.far||s.push({distance:w,point:_,indices:[u,f,E],face:null,faceIndex:null,object:this})}}}else for(var m=c.position.array,H=0,M=0,b=m.length;b>H;H+=3,M+=9){if(u=H,f=H+1,E=H+2,i.set(m[M],m[M+1],m[M+2]),n.set(m[M+3],m[M+4],m[M+5]),a.set(m[M+6],m[M+7],m[M+8]),l.side===THREE.BackSide)var _=t.intersectTriangle(a,n,i,!0);else var _=t.intersectTriangle(i,n,a,l.side!==THREE.DoubleSide);if(null!==_){_.applyMatrix4(this.matrixWorld);var w=o.ray.origin.distanceTo(_);p>w||w<o.near||w>o.far||s.push({distance:w,point:_,indices:[u,f,E],face:null,faceIndex:null,object:this})}}}else if(h instanceof THREE.Geometry)for(var S=this.material instanceof THREE.MeshFaceMaterial,C=S===!0?this.material.materials:null,u,f,E,A,p=o.precision,L=h.vertices,P=0,F=h.faces.length;F>P;P++){var D=h.faces[P],l=S===!0?C[D.materialIndex]:this.material;if(void 0!==l){if(u=L[D.a],f=L[D.b],E=L[D.c],l.morphTargets===!0){var U=h.morphTargets,V=this.morphTargetInfluences;i.set(0,0,0),n.set(0,0,0),a.set(0,0,0);for(var z=0,B=U.length;B>z;z++){var k=V[z];if(0!==k){var N=U[z].vertices;i.x+=(N[D.a].x-u.x)*k,i.y+=(N[D.a].y-u.y)*k,i.z+=(N[D.a].z-u.z)*k,n.x+=(N[D.b].x-f.x)*k,n.y+=(N[D.b].y-f.y)*k,n.z+=(N[D.b].z-f.z)*k,a.x+=(N[D.c].x-E.x)*k,a.y+=(N[D.c].y-E.y)*k,a.z+=(N[D.c].z-E.z)*k}}i.add(u),n.add(f),a.add(E),u=i,f=n,E=a}if(l.side===THREE.BackSide)var _=t.intersectTriangle(E,f,u,!0);else var _=t.intersectTriangle(u,f,E,l.side!==THREE.DoubleSide);if(null!==_){_.applyMatrix4(this.matrixWorld);var w=o.ray.origin.distanceTo(_);p>w||w<o.near||w>o.far||s.push({distance:w,point:_,face:D,faceIndex:P,object:this})}}}}}(),THREE.Mesh.prototype.clone=function(e,t){return void 0===e&&(e=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e,t),e},THREE.Bone=function(e){THREE.Object3D.call(this),this.skin=e,this.accumulatedRotWeight=0,this.accumulatedPosWeight=0,this.accumulatedSclWeight=0},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.updateMatrixWorld=function(e){THREE.Object3D.prototype.updateMatrixWorld.call(this,e),this.accumulatedRotWeight=0,this.accumulatedPosWeight=0,this.accumulatedSclWeight=0},THREE.Skeleton=function(e,t,r){if(this.useVertexTexture=void 0!==r?r:!0,this.identityMatrix=new THREE.Matrix4,e=e||[],this.bones=e.slice(0),this.useVertexTexture){var i;i=this.bones.length>256?64:this.bones.length>64?32:this.bones.length>16?16:8,this.boneTextureWidth=i,this.boneTextureHeight=i,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1}else this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[];for(var n=0,a=this.bones.length;a>n;n++)this.boneInverses.push(new THREE.Matrix4)}},THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var e=0,t=this.bones.length;t>e;e++){var r=new THREE.Matrix4;this.bones[e]&&r.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(r)}},THREE.Skeleton.prototype.pose=function(){for(var e,t=0,r=this.bones.length;r>t;t++)e=this.bones[t],e&&e.matrixWorld.getInverse(this.boneInverses[t]);for(var t=0,r=this.bones.length;r>t;t++)e=this.bones[t],e&&(e.parent?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))},THREE.Skeleton.prototype.update=function(){for(var e=new THREE.Matrix4,t=0,r=this.bones.length;r>t;t++){var i=this.bones[t]?this.bones[t].matrixWorld:this.identityMatrix;e.multiplyMatrices(i,this.boneInverses[t]),e.flattenToArrayOffset(this.boneMatrices,16*t)}this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)},THREE.SkinnedMesh=function(e,t,r){THREE.Mesh.call(this,e,t),this.bindMode="attached",this.bindMatrix=new THREE.Matrix4,this.bindMatrixInverse=new THREE.Matrix4;var i=[];if(this.geometry&&void 0!==this.geometry.bones){for(var n,a,o,s,h,l=0,c=this.geometry.bones.length;c>l;++l)a=this.geometry.bones[l],o=a.pos,s=a.rotq,h=a.scl,n=new THREE.Bone(this),i.push(n),n.name=a.name,n.position.set(o[0],o[1],o[2]),n.quaternion.set(s[0],s[1],s[2],s[3]),void 0!==h?n.scale.set(h[0],h[1],h[2]):n.scale.set(1,1,1);for(var l=0,c=this.geometry.bones.length;c>l;++l)a=this.geometry.bones[l],-1!==a.parent?i[a.parent].add(i[l]):this.add(i[l])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new THREE.Skeleton(i,void 0,r))},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.bind=function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],r=1/t.lengthManhattan();r!==1/0?t.multiplyScalar(r):t.set(1)}},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(e){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unreckognized bindMode: "+this.bindMode)},THREE.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t),this.duration=1e3,this.mirroredLoop=!1,this.time=0,this.lastKeyframe=0,this.currentKeyframe=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e,this.endKeyframe=t,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,r=e.animations,i=/([a-z]+)_?(\d+)/,n=0,a=e.morphTargets.length;a>n;n++){var o=e.morphTargets[n],s=o.name.match(i);if(s&&s.length>1){var h=s[1],l=s[2];r[h]||(r[h]={start:1/0,end:-(1/0)});var c=r[h];n<c.start&&(c.start=n),n>c.end&&(c.end=n),t||(t=h)}}e.firstAnimation=t},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,r){
this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[e]={start:t,end:r}},THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var r=this.geometry.animations[e];r?(this.setFrameRange(r.start,r.end),this.duration=1e3*((r.end-r.start)/t),this.time=0):console.warn("animation["+e+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e,this.mirroredLoop?(this.time>this.duration||this.time<0)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,this.time<0&&(this.time+=this.duration));var r=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1);r!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[r]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=r);var i=this.time%t/t;this.directionBackwards&&(i=1-i),this.morphTargetInfluences[this.currentKeyframe]=i,this.morphTargetInfluences[this.lastKeyframe]=1-i},THREE.MorphAnimMesh.prototype.interpolateTargets=function(e,t,r){for(var i=this.morphTargetInfluences,n=0,a=i.length;a>n;n++)i[n]=0;e>-1&&(i[e]=1-r),t>-1&&(i[t]=r)},THREE.MorphAnimMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material)),e.duration=this.duration,e.mirroredLoop=this.mirroredLoop,e.time=this.time,e.lastKeyframe=this.lastKeyframe,e.currentKeyframe=this.currentKeyframe,e.direction=this.direction,e.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,e),e},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var r=0;r<this.objects.length&&!(t<this.objects[r].distance);r++);this.objects.splice(r,0,{distance:t,object:e}),this.add(e)},THREE.LOD.prototype.getObjectForDistance=function(e){for(var t=1,r=this.objects.length;r>t&&!(e<this.objects[t].distance);t++);return this.objects[t-1].object},THREE.LOD.prototype.raycast=function(){var e=new THREE.Vector3;return function(t,r){e.setFromMatrixPosition(this.matrixWorld);var i=t.ray.origin.distanceTo(e);this.getObjectForDistance(i).raycast(t,r)}}(),THREE.LOD.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){if(this.objects.length>1){e.setFromMatrixPosition(r.matrixWorld),t.setFromMatrixPosition(this.matrixWorld);var i=e.distanceTo(t);this.objects[0].object.visible=!0;for(var n=1,a=this.objects.length;a>n&&i>=this.objects[n].distance;n++)this.objects[n-1].object.visible=!1,this.objects[n].object.visible=!0;for(;a>n;n++)this.objects[n].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(e){void 0===e&&(e=new THREE.LOD),THREE.Object3D.prototype.clone.call(this,e);for(var t=0,r=this.objects.length;r>t;t++){var i=this.objects[t].object.clone();i.visible=0===t,e.addLevel(i,this.objects[t].distance)}return e},THREE.Sprite=function(){var e=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0]),t=new THREE.BufferGeometry;return t.addAttribute("position",new THREE.BufferAttribute(e,3)),function(e){THREE.Object3D.call(this),this.geometry=t,this.material=void 0!==e?e:new THREE.SpriteMaterial}}(),THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.raycast=function(){var e=new THREE.Vector3;return function(t,r){e.setFromMatrixPosition(this.matrixWorld);var i=t.ray.distanceToPoint(e);i>this.scale.x||r.push({distance:i,point:this.position,face:null,object:this})}}(),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(e){return void 0===e&&(e=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Particle=THREE.Sprite,THREE.Scene=function(){THREE.Object3D.call(this),this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,this.matrixAutoUpdate=!1,this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)){this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}this.dispatchEvent({type:"objectAdded",object:e}),e.dispatchEvent({type:"addedToScene",scene:this});for(var r=0;r<e.children.length;r++)this.__addObject(e.children[r])},THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){var t=this.__lights.indexOf(e);if(-1!==t&&this.__lights.splice(t,1),e.shadowCascadeArray)for(var r=0;r<e.shadowCascadeArray.length;r++)this.__removeObject(e.shadowCascadeArray[r])}else if(!(e instanceof THREE.Camera)){this.__objectsRemoved.push(e);var t=this.__objectsAdded.indexOf(e);-1!==t&&this.__objectsAdded.splice(t,1)}this.dispatchEvent({type:"objectRemoved",object:e}),e.dispatchEvent({type:"removedFromScene",scene:this});for(var i=0;i<e.children.length;i++)this.__removeObject(e.children[i])},THREE.Scene.prototype.clone=function(e){return void 0===e&&(e=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,e),null!==this.fog&&(e.fog=this.fog.clone()),null!==this.overrideMaterial&&(e.overrideMaterial=this.overrideMaterial.clone()),e.autoUpdate=this.autoUpdate,e.matrixAutoUpdate=this.matrixAutoUpdate,e},THREE.Fog=function(e,t,r){this.name="",this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==r?r:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(e){function t(){De.setRGB(0,0,0),Ue.setRGB(0,0,0),Ve.setRGB(0,0,0);for(var e=0,t=w.length;t>e;e++){var r=w[e],i=r.color;r instanceof THREE.AmbientLight?De.add(i):r instanceof THREE.DirectionalLight?Ue.add(i):r instanceof THREE.PointLight&&Ve.add(i)}}function r(e,t,r){for(var i=0,n=w.length;n>i;i++){var a=w[i];if(Re.copy(a.color),a instanceof THREE.DirectionalLight){var o=ze.setFromMatrixPosition(a.matrixWorld).normalize(),s=t.dot(o);if(0>=s)continue;s*=a.intensity,r.add(Re.multiplyScalar(s))}else if(a instanceof THREE.PointLight){var o=ze.setFromMatrixPosition(a.matrixWorld),s=t.dot(ze.subVectors(o,e).normalize());if(0>=s)continue;if(s*=0==a.distance?1:1-Math.min(e.distanceTo(o)/a.distance,1),0==s)continue;s*=a.intensity,r.add(Re.multiplyScalar(s))}}}function i(e,t,r){p(r.opacity),d(r.blending);var i=t.scale.x*L,n=t.scale.y*P,a=.5*Math.sqrt(i*i+n*n);if(Fe.min.set(e.x-a,e.y-a),Fe.max.set(e.x+a,e.y+a),r instanceof THREE.SpriteMaterial){var o=r.map;if(null!==o&&void 0!==o.image){o.hasEventListener("update",l)===!1&&(o.image.width>0&&c(o),o.addEventListener("update",l));var s=xe[o.id];y(void 0!==s?s:"rgba( 0, 0, 0, 1 )");var h=o.image,u=h.width*o.offset.x,f=h.height*o.offset.y,E=h.width*o.repeat.x,m=h.height*o.repeat.y,v=i/E,g=n/m;z.save(),z.translate(e.x,e.y),0!==r.rotation&&z.rotate(r.rotation),z.translate(-i/2,-n/2),z.scale(v,g),z.translate(-u,-f),z.fillRect(u,f,E,m),z.restore()}else y(r.color.getStyle()),z.save(),z.translate(e.x,e.y),0!==r.rotation&&z.rotate(r.rotation),z.scale(i,-n),z.fillRect(-.5,-.5,1,1),z.restore()}else r instanceof THREE.SpriteCanvasMaterial&&(T(r.color.getStyle()),y(r.color.getStyle()),z.save(),z.translate(e.x,e.y),0!==r.rotation&&z.rotate(r.rotation),z.scale(i,n),r.program(z),z.restore())}function n(e,t,r,i){if(p(i.opacity),d(i.blending),z.beginPath(),z.moveTo(e.positionScreen.x,e.positionScreen.y),z.lineTo(t.positionScreen.x,t.positionScreen.y),i instanceof THREE.LineBasicMaterial){if(m(i.linewidth),v(i.linecap),g(i.linejoin),i.vertexColors!==THREE.VertexColors)T(i.color.getStyle());else{var n=r.vertexColors[0].getStyle(),a=r.vertexColors[1].getStyle();if(n===a)T(n);else{try{var o=z.createLinearGradient(e.positionScreen.x,e.positionScreen.y,t.positionScreen.x,t.positionScreen.y);o.addColorStop(0,n),o.addColorStop(1,a)}catch(s){o=n}T(o)}}z.stroke(),Fe.expandByScalar(2*i.linewidth)}else i instanceof THREE.LineDashedMaterial&&(m(i.linewidth),v(i.linecap),g(i.linejoin),T(i.color.getStyle()),R([i.dashSize,i.gapSize]),z.stroke(),Fe.expandByScalar(2*i.linewidth),R([]))}function a(e,t,i,n,a,l,c,f){H.info.render.vertices+=3,H.info.render.faces++,p(f.opacity),d(f.blending),re=e.positionScreen.x,ie=e.positionScreen.y,ne=t.positionScreen.x,ae=t.positionScreen.y,oe=i.positionScreen.x,se=i.positionScreen.y,o(re,ie,ne,ae,oe,se),(f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshPhongMaterial)&&null===f.map?(Te.copy(f.color),ye.copy(f.emissive),f.vertexColors===THREE.FaceColors&&Te.multiply(c.color),pe.copy(De),Be.copy(e.positionWorld).add(t.positionWorld).add(i.positionWorld).divideScalar(3),r(Be,c.normalModel,pe),pe.multiply(Te).add(ye),f.wireframe===!0?s(pe,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):h(pe)):f instanceof THREE.MeshBasicMaterial||f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshPhongMaterial?null!==f.map?f.map.mapping instanceof THREE.UVMapping&&(be=c.uvs,u(re,ie,ne,ae,oe,se,be[n].x,be[n].y,be[a].x,be[a].y,be[l].x,be[l].y,f.map)):null!==f.envMap?f.envMap.mapping instanceof THREE.SphericalReflectionMapping?(ke.copy(c.vertexNormalsModel[n]).applyMatrix3(Ne),_e=.5*ke.x+.5,we=.5*ke.y+.5,ke.copy(c.vertexNormalsModel[a]).applyMatrix3(Ne),Me=.5*ke.x+.5,Se=.5*ke.y+.5,ke.copy(c.vertexNormalsModel[l]).applyMatrix3(Ne),Ce=.5*ke.x+.5,Ae=.5*ke.y+.5,u(re,ie,ne,ae,oe,se,_e,we,Me,Se,Ce,Ae,f.envMap)):f.envMap.mapping instanceof THREE.SphericalRefractionMapping&&(ke.copy(c.vertexNormalsModel[n]).applyMatrix3(Ne),_e=-.5*ke.x+.5,we=-.5*ke.y+.5,ke.copy(c.vertexNormalsModel[a]).applyMatrix3(Ne),Me=-.5*ke.x+.5,Se=-.5*ke.y+.5,ke.copy(c.vertexNormalsModel[l]).applyMatrix3(Ne),Ce=-.5*ke.x+.5,Ae=-.5*ke.y+.5,u(re,ie,ne,ae,oe,se,_e,we,Me,Se,Ce,Ae,f.envMap)):(pe.copy(f.color),f.vertexColors===THREE.FaceColors&&pe.multiply(c.color),f.wireframe===!0?s(pe,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):h(pe)):f instanceof THREE.MeshDepthMaterial?(pe.r=pe.g=pe.b=1-x(e.positionScreen.z*e.positionScreen.w,q.near,q.far),f.wireframe===!0?s(pe,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):h(pe)):f instanceof THREE.MeshNormalMaterial?(ke.copy(c.normalModel).applyMatrix3(Ne),pe.setRGB(ke.x,ke.y,ke.z).multiplyScalar(.5).addScalar(.5),f.wireframe===!0?s(pe,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):h(pe)):(pe.setRGB(1,1,1),f.wireframe===!0?s(pe,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):h(pe))}function o(e,t,r,i,n,a){z.beginPath(),z.moveTo(e,t),z.lineTo(r,i),z.lineTo(n,a),z.closePath()}function s(e,t,r,i){m(t),v(r),g(i),T(e.getStyle()),z.stroke(),Fe.expandByScalar(2*t)}function h(e){y(e.getStyle()),z.fill()}function l(e){c(e.target)}function c(e){if(!(e instanceof THREE.CompressedTexture)){var t=e.wrapS===THREE.RepeatWrapping,r=e.wrapT===THREE.RepeatWrapping,i=e.image,n=document.createElement("canvas");n.width=i.width,n.height=i.height;var a=n.getContext("2d");a.setTransform(1,0,0,-1,0,i.height),a.drawImage(i,0,0),xe[e.id]=z.createPattern(n,t===!0&&r===!0?"repeat":t===!0&&r===!1?"repeat-x":t===!1&&r===!0?"repeat-y":"no-repeat")}}function u(e,t,r,i,n,a,o,s,h,u,f,E,p){if(!(p instanceof THREE.DataTexture)){p.hasEventListener("update",l)===!1&&(void 0!==p.image&&p.image.width>0&&c(p),p.addEventListener("update",l));var d=xe[p.id];if(void 0===d)return y("rgba(0,0,0,1)"),void z.fill();y(d);var m,v,g,T,R,x,H,b,_=p.offset.x/p.repeat.x,w=p.offset.y/p.repeat.y,M=p.image.width*p.repeat.x,S=p.image.height*p.repeat.y;o=(o+_)*M,s=(s+w)*S,h=(h+_)*M,u=(u+w)*S,f=(f+_)*M,E=(E+w)*S,r-=e,i-=t,n-=e,a-=t,h-=o,u-=s,f-=o,E-=s,H=h*E-f*u,0!==H&&(b=1/H,m=(E*r-u*n)*b,v=(E*i-u*a)*b,g=(h*n-f*r)*b,T=(h*a-f*i)*b,R=e-m*o-g*s,x=t-v*o-T*s,z.save(),z.transform(m,v,g,T,R,x),z.fill(),z.restore())}}function f(e,t,r,i,n,a,o,s,h,l,c,u,f){var E,p,d,m,v,g,T,y,R=f.width-1,x=f.height-1;o*=R,s*=x,h*=R,l*=x,c*=R,u*=x,r-=e,i-=t,n-=e,a-=t,h-=o,l-=s,c-=o,u-=s,T=h*u-c*l,y=1/T,E=(u*r-l*n)*y,p=(u*i-l*a)*y,d=(h*n-c*r)*y,m=(h*a-c*i)*y,v=e-E*o-d*s,g=t-p*o-m*s,z.save(),z.transform(E,p,d,m,v,g),z.clip(),z.drawImage(f,0,0),z.restore()}function E(e,t,r){var i=t.x-e.x,n=t.y-e.y,a=i*i+n*n,o;0!==a&&(o=r/Math.sqrt(a),i*=o,n*=o,t.x+=i,t.y+=n,e.x-=i,e.y-=n)}function p(e){N!==e&&(z.globalAlpha=e,N=e)}function d(e){O!==e&&(e===THREE.NormalBlending?z.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?z.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(z.globalCompositeOperation="darker"),O=e)}function m(e){W!==e&&(z.lineWidth=e,W=e)}function v(e){j!==e&&(z.lineCap=e,j=e)}function g(e){X!==e&&(z.lineJoin=e,X=e)}function T(e){I!==e&&(z.strokeStyle=e,I=e)}function y(e){G!==e&&(z.fillStyle=e,G=e)}function R(e){Y.length!==e.length&&(z.setLineDash(e),Y=e)}var x=THREE.Math.smoothstep;e=e||{};var H=this,b,_,w,M=new THREE.Projector,S=void 0!==e.canvas?e.canvas:document.createElement("canvas"),C=S.width,A=S.height,L=Math.floor(C/2),P=Math.floor(A/2),F=0,D=0,U=C,V=A,z=S.getContext("2d",{alpha:e.alpha===!0}),B=new THREE.Color(0),k=0,N=1,O=0,I=null,G=null,W=null,j=null,X=null,Y=[],q,K,Z,Q,J,ee=new THREE.RenderableVertex,te=new THREE.RenderableVertex,re,ie,ne,ae,oe,se,he,le,ce,ue,fe,Ee,pe=new THREE.Color,de=new THREE.Color,me=new THREE.Color,ve=new THREE.Color,ge=new THREE.Color,Te=new THREE.Color,ye=new THREE.Color,Re=new THREE.Color,xe={},He,be,_e,we,Me,Se,Ce,Ae,Le=new THREE.Box2,Pe=new THREE.Box2,Fe=new THREE.Box2,De=new THREE.Color,Ue=new THREE.Color,Ve=new THREE.Color,ze=new THREE.Vector3,Be=new THREE.Vector3,ke=new THREE.Vector3,Ne=new THREE.Matrix3;void 0===z.setLineDash&&(z.setLineDash=function(){}),this.domElement=S,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(e,t,r){C=e*this.devicePixelRatio,A=t*this.devicePixelRatio,S.width=C,S.height=A,L=Math.floor(C/2),P=Math.floor(A/2),r!==!1&&(S.style.width=e+"px",S.style.height=t+"px"),Le.min.set(-L,-P),Le.max.set(L,P),Pe.min.set(-L,-P),Pe.max.set(L,P),N=1,O=0,I=null,G=null,W=null,j=null,X=null,this.setViewport(0,0,e,t)},this.setViewport=function(e,t,r,i){F=e*this.devicePixelRatio,D=t*this.devicePixelRatio,U=r*this.devicePixelRatio,V=i*this.devicePixelRatio},this.setScissor=function(){},this.enableScissorTest=function(){},this.setClearColor=function(e,t){B.set(e),k=void 0!==t?t:1,Pe.min.set(-L,-P),Pe.max.set(L,P)},this.setClearColorHex=function(e,t){console.warn("THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(e,t)},this.getClearColor=function(){return B},this.getClearAlpha=function(){return k},this.getMaxAnisotropy=function(){return 0},this.clear=function(){Pe.empty()===!1&&(Pe.intersect(Le),Pe.expandByScalar(2),Pe.min.x=Pe.min.x+L,Pe.min.y=-Pe.min.y+P,Pe.max.x=Pe.max.x+L,Pe.max.y=-Pe.max.y+P,1>k&&z.clearRect(0|Pe.min.x,0|Pe.min.y,Pe.max.x-Pe.min.x|0,Pe.max.y-Pe.min.y|0),k>0&&(d(THREE.NormalBlending),p(1),y("rgba("+Math.floor(255*B.r)+","+Math.floor(255*B.g)+","+Math.floor(255*B.b)+","+k+")"),z.fillRect(0|Pe.min.x,0|Pe.min.y,Pe.max.x-Pe.min.x|0,Pe.max.y-Pe.min.y|0)),Pe.makeEmpty())},this.clearColor=function(){},this.clearDepth=function(){},this.clearStencil=function(){},this.render=function(e,r){if(r instanceof THREE.Camera==!1)return void console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");this.autoClear===!0&&this.clear(),H.info.render.vertices=0,H.info.render.faces=0,z.setTransform(U/C,0,0,-V/A,F,A-D),z.translate(L,P),b=M.projectScene(e,r,this.sortObjects,this.sortElements),_=b.elements,w=b.lights,q=r,Ne.getNormalMatrix(r.matrixWorldInverse),t();for(var o=0,s=_.length;s>o;o++){var h=_[o],l=h.material;if(void 0!==l&&0!==l.opacity){if(Fe.makeEmpty(),h instanceof THREE.RenderableSprite)K=h,K.x*=L,K.y*=P,i(K,h,l);else if(h instanceof THREE.RenderableLine)K=h.v1,Z=h.v2,K.positionScreen.x*=L,K.positionScreen.y*=P,Z.positionScreen.x*=L,Z.positionScreen.y*=P,Fe.setFromPoints([K.positionScreen,Z.positionScreen]),Le.isIntersectionBox(Fe)===!0&&n(K,Z,h,l);else if(h instanceof THREE.RenderableFace){if(K=h.v1,Z=h.v2,Q=h.v3,K.positionScreen.z<-1||K.positionScreen.z>1)continue;if(Z.positionScreen.z<-1||Z.positionScreen.z>1)continue;if(Q.positionScreen.z<-1||Q.positionScreen.z>1)continue;K.positionScreen.x*=L,K.positionScreen.y*=P,Z.positionScreen.x*=L,Z.positionScreen.y*=P,Q.positionScreen.x*=L,Q.positionScreen.y*=P,l.overdraw>0&&(E(K.positionScreen,Z.positionScreen,l.overdraw),E(Z.positionScreen,Q.positionScreen,l.overdraw),E(Q.positionScreen,K.positionScreen,l.overdraw)),Fe.setFromPoints([K.positionScreen,Z.positionScreen,Q.positionScreen]),Le.isIntersectionBox(Fe)===!0&&a(K,Z,Q,0,1,2,h,l)}Pe.union(Fe)}}z.setTransform(1,0,0,1,0,0)}},THREE.ShaderChunk={},THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n	if ( gl_FragColor.a < ALPHATEST ) discard;\n\n#endif\n",THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n	vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n	vec3 dirVector = normalize( lDirection.xyz );\n\n	float dotProduct = dot( transformedNormal, dirVector );\n	vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n	#ifdef DOUBLE_SIDED\n\n		vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n		#ifdef WRAP_AROUND\n\n			vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n		#endif\n\n	#endif\n\n	#ifdef WRAP_AROUND\n\n		vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n		directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n		#ifdef DOUBLE_SIDED\n\n			directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n		#endif\n\n	#endif\n\n	vLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n	#ifdef DOUBLE_SIDED\n\n		vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n	#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n		float dotProduct = dot( transformedNormal, lVector );\n\n		vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n		#ifdef DOUBLE_SIDED\n\n			vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n			#ifdef WRAP_AROUND\n\n				vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n			#endif\n\n		#endif\n\n		#ifdef WRAP_AROUND\n\n			vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n			pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n			#ifdef DOUBLE_SIDED\n\n				pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n			#endif\n\n		#endif\n\n		vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\n		#endif\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n			float lDistance = 1.0;\n			if ( spotLightDistance[ i ] > 0.0 )\n				lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n			lVector = normalize( lVector );\n\n			float dotProduct = dot( transformedNormal, lVector );\n			vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n			#ifdef DOUBLE_SIDED\n\n				vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n				#ifdef WRAP_AROUND\n\n					vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n				#endif\n\n			#endif\n\n			#ifdef WRAP_AROUND\n\n				vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n				spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n				#ifdef DOUBLE_SIDED\n\n					spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n				#endif\n\n			#endif\n\n			vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\n			#ifdef DOUBLE_SIDED\n\n				vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\n			#endif\n\n		}\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n\n		float dotProduct = dot( transformedNormal, lVector );\n\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n		float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n		vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n		#endif\n\n	}\n\n#endif\n\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n\n#endif",THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif",THREE.ShaderChunk.default_vertex="vec4 mvPosition;\n\n#ifdef USE_SKINNING\n\n	mvPosition = modelViewMatrix * skinned;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\n\n	mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\n\n	mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.map_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif",THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n	#ifdef USE_MORPHNORMALS\n\n	vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n	#else\n\n	vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		varying float vFragDepth;\n\n	#endif\n\n	uniform float logDepthBufFC;\n\n#endif",THREE.ShaderChunk.lightmap_pars_vertex="#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n\n#endif",THREE.ShaderChunk.lights_phong_fragment="vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef DOUBLE_SIDED\n\n	normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	vec3 pointDiffuse = vec3( 0.0 );\n	vec3 pointSpecular = vec3( 0.0 );\n\n	for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( pointLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n\n				// diffuse\n\n		float dotProduct = dot( normal, lVector );\n\n		#ifdef WRAP_AROUND\n\n			float pointDiffuseWeightFull = max( dotProduct, 0.0 );\n			float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float pointDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		pointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\n				// specular\n\n		vec3 pointHalfVector = normalize( lVector + viewPosition );\n		float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n		float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n		pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	vec3 spotDiffuse = vec3( 0.0 );\n	vec3 spotSpecular = vec3( 0.0 );\n\n	for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float lDistance = 1.0;\n		if ( spotLightDistance[ i ] > 0.0 )\n			lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n		lVector = normalize( lVector );\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n					// diffuse\n\n			float dotProduct = dot( normal, lVector );\n\n			#ifdef WRAP_AROUND\n\n				float spotDiffuseWeightFull = max( dotProduct, 0.0 );\n				float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n				vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n			#else\n\n				float spotDiffuseWeight = max( dotProduct, 0.0 );\n\n			#endif\n\n			spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\n					// specular\n\n			vec3 spotHalfVector = normalize( lVector + viewPosition );\n			float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n			float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n			float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n			spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\n		}\n\n	}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n	vec3 dirDiffuse = vec3( 0.0 );\n	vec3 dirSpecular = vec3( 0.0 );\n\n	for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n		vec3 dirVector = normalize( lDirection.xyz );\n\n				// diffuse\n\n		float dotProduct = dot( normal, dirVector );\n\n		#ifdef WRAP_AROUND\n\n			float dirDiffuseWeightFull = max( dotProduct, 0.0 );\n			float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float dirDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		dirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\n		// specular\n\n		vec3 dirHalfVector = normalize( dirVector + viewPosition );\n		float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n		float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n		/*\n		// fresnel term from skin shader\n		const float F0 = 0.128;\n\n		float base = 1.0 - dot( viewPosition, dirHalfVector );\n		float exponential = pow( base, 5.0 );\n\n		float fresnel = exponential + F0 * ( 1.0 - exponential );\n		*/\n\n		/*\n		// fresnel term from fresnel shader\n		const float mFresnelBias = 0.08;\n		const float mFresnelScale = 0.3;\n		const float mFresnelPower = 5.0;\n\n		float fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n		*/\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		// 		dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n		dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	vec3 hemiDiffuse = vec3( 0.0 );\n	vec3 hemiSpecular = vec3( 0.0 );\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n		vec3 lVector = normalize( lDirection.xyz );\n\n		// diffuse\n\n		float dotProduct = dot( normal, lVector );\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n		vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		hemiDiffuse += diffuse * hemiColor;\n\n		// specular (sky light)\n\n		vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n		float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n		float hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n		// specular (ground light)\n\n		vec3 lVectorGround = -lVector;\n\n		vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n		float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n		float hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n		float dotProductGround = dot( normal, lVectorGround );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n		vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n		hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n	}\n\n#endif\n\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n\n#if MAX_DIR_LIGHTS > 0\n\n	totalDiffuse += dirDiffuse;\n	totalSpecular += dirSpecular;\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	totalDiffuse += hemiDiffuse;\n	totalSpecular += hemiSpecular;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	totalDiffuse += pointDiffuse;\n	totalSpecular += pointSpecular;\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	totalDiffuse += spotDiffuse;\n	totalSpecular += spotSpecular;\n\n#endif\n\n#ifdef METAL\n\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\n#else\n\n	gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\n#endif",
THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n	uniform vec3 fogColor;\n\n	#ifdef FOG_EXP2\n\n		uniform float fogDensity;\n\n	#else\n\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n\n#endif",THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n	vec3 morphedNormal = vec3( 0.0 );\n\n	morphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	morphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	morphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	morphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n	morphedNormal += normal;\n\n#endif",THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n	uniform float reflectivity;\n	uniform samplerCube envMap;\n	uniform float flipEnvMap;\n	uniform int combine;\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n		uniform bool useRefract;\n		uniform float refractionRatio;\n\n	#else\n\n		varying vec3 vReflect;\n\n	#endif\n\n#endif",THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif",THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n\n			// Per-Pixel Tangent Space Normal Mapping\n			// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n\n		vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n\n	}\n\n#endif\n",THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n",THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n	uniform sampler2D lightMap;\n\n#endif",THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n	}\n\n#endif",THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	vWorldPosition = worldPosition.xyz;\n\n#endif",THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n	vec4 texelColor = texture2D( map, vUv );\n\n	#ifdef GAMMA_INPUT\n\n		texelColor.xyz *= texelColor.xyz;\n\n	#endif\n\n	gl_FragColor = gl_FragColor * texelColor;\n\n#endif",THREE.ShaderChunk.lightmap_vertex="#ifdef USE_LIGHTMAP\n\n	vUv2 = uv2;\n\n#endif",THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n	gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n\n#endif",THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif\n",THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n	#ifdef GAMMA_INPUT\n\n		vColor = color * color;\n\n	#else\n\n		vColor = color;\n\n	#endif\n\n#endif",THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n	#ifdef USE_MORPHTARGETS\n\n	vec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n	#else\n\n	vec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n	#endif\n\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	skinned  = bindMatrixInverse * skinned;\n\n#endif\n",THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n	varying vec3 vReflect;\n\n	uniform float refractionRatio;\n	uniform bool useRefract;\n\n#endif\n",THREE.ShaderChunk.linear_to_gamma_fragment="#ifdef GAMMA_OUTPUT\n\n	gl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n\n#endif",THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif",THREE.ShaderChunk.lights_lambert_pars_vertex="uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n",THREE.ShaderChunk.map_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n\n#endif\n",THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n	vec3 reflectVec;\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n		// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\n		// Transforming Normal Vectors with the Inverse Transformation\n\n		vec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\n		if ( useRefract ) {\n\n			reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n		} else { \n\n			reflectVec = reflect( cameraToVertex, worldNormal );\n\n		}\n\n	#else\n\n		reflectVec = vReflect;\n\n	#endif\n\n	#ifdef DOUBLE_SIDED\n\n		float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n		vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n	#else\n\n		vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n	#endif\n\n	#ifdef GAMMA_INPUT\n\n		cubeColor.xyz *= cubeColor.xyz;\n\n	#endif\n\n	if ( combine == 1 ) {\n\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n\n	} else if ( combine == 2 ) {\n\n		gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n\n	} else {\n\n		gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n\n	}\n\n#endif",THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n	uniform sampler2D specularMap;\n\n#endif",THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n	gl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		vFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n	#endif\n\n#endif",THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n	#ifndef USE_MORPHNORMALS\n\n	uniform float morphTargetInfluences[ 8 ];\n\n	#else\n\n	uniform float morphTargetInfluences[ 4 ];\n\n	#endif\n\n#endif",THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n\n#else\n\n	specularStrength = 1.0;\n\n#endif",THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n	#else\n\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n\n	#endif\n\n	#ifdef FOG_EXP2\n\n		const float LOG2 = 1.442695;\n		float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n		fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n	#else\n\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n\n	#endif\n	\n	gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n#endif",THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n\n			// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n			//	http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n			// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n	vec2 dHdxy_fwd() {\n\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n		return vec2( dBx, dBy );\n\n	}\n\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;		// normalized\n\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n\n		float fDet = dot( vSigmaX, R1 );\n\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n\n	}\n\n#endif",THREE.ShaderChunk.defaultnormal_vertex="vec3 objectNormal;\n\n#ifdef USE_SKINNING\n\n	objectNormal = skinnedNormal.xyz;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\n\n	objectNormal = morphedNormal;\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\n\n	objectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n	objectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;",THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif",THREE.ShaderChunk.map_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif",THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n	gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n\n#endif",THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n	uniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif",THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n	gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n\n#endif",THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n	vec3 morphed = vec3( 0.0 );\n	morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n	#ifndef USE_MORPHNORMALS\n\n	morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n	#endif\n\n	morphed += position;\n\n#endif",THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n	vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n	worldNormal = normalize( worldNormal );\n\n	vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n	if ( useRefract ) {\n\n		vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n	} else {\n\n		vReflect = reflect( cameraToVertex, worldNormal );\n\n	}\n\n#endif",THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n	#ifdef SHADOWMAP_DEBUG\n\n		vec3 frustumColors[3];\n		frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n		frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n		frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n	#endif\n\n	#ifdef SHADOWMAP_CASCADE\n\n		int inFrustumCount = 0;\n\n	#endif\n\n	float fDepth;\n	vec3 shadowColor = vec3( 1.0 );\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n				// if ( something && something ) breaks ATI OpenGL shader compiler\n				// if ( all( something, something ) ) using this instead\n\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n\n				// don't shadow pixels outside of light frustum\n				// use just first frustum (for cascades)\n				// don't shadow pixels behind far plane of light frustum\n\n		#ifdef SHADOWMAP_CASCADE\n\n			inFrustumCount += int( inFrustum );\n			bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n		#else\n\n			bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n		#endif\n\n		bool frustumTest = all( frustumTestVec );\n\n		if ( frustumTest ) {\n\n			shadowCoord.z += shadowBias[ i ];\n\n			#if defined( SHADOWMAP_TYPE_PCF )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n		/*\n						// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n						// must enroll loop manually\n\n				for ( float y = -1.25; y <= 1.25; y += 1.25 )\n					for ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n						vec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n								// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n								//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n						float fDepth = unpackDepth( rgbaDepth );\n\n						if ( fDepth < shadowCoord.z )\n							shadow += 1.0;\n\n				}\n\n				shadow /= 9.0;\n\n		*/\n\n				const float shadowDelta = 1.0 / 9.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.25 * xPixelOffset;\n				float dy0 = -1.25 * yPixelOffset;\n				float dx1 = 1.25 * xPixelOffset;\n				float dy1 = 1.25 * yPixelOffset;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.0 * xPixelOffset;\n				float dy0 = -1.0 * yPixelOffset;\n				float dx1 = 1.0 * xPixelOffset;\n				float dy1 = 1.0 * yPixelOffset;\n\n				mat3 shadowKernel;\n				mat3 depthKernel;\n\n				depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n				vec3 shadowZ = vec3( shadowCoord.z );\n				shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n				shadowKernel[0] *= vec3(0.25);\n\n				shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n				shadowKernel[1] *= vec3(0.25);\n\n				shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n				shadowKernel[2] *= vec3(0.25);\n\n				vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n				shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n				shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n				vec4 shadowValues;\n				shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n				shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n				shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n				shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n				shadow = dot( shadowValues, vec4( 1.0 ) );\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#else\n\n				vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n				float fDepth = unpackDepth( rgbaDepth );\n\n				if ( fDepth < shadowCoord.z )\n\n		// spot with multiple shadows is darker\n\n					shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n		// spot with multiple shadows has the same color as single shadow spot\n\n		// 					shadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n			#endif\n\n		}\n\n\n		#ifdef SHADOWMAP_DEBUG\n\n			#ifdef SHADOWMAP_CASCADE\n\n				if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\n			#else\n\n				if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\n			#endif\n\n		#endif\n\n	}\n\n	#ifdef GAMMA_OUTPUT\n\n		shadowColor *= shadowColor;\n\n	#endif\n\n	gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n\n#endif\n",THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n	#ifdef USE_SKINNING\n\n		vec4 worldPosition = modelMatrix * skinned;\n\n	#endif\n\n	#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n		vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n	#endif\n\n	#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n		vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n	#endif\n\n#endif",THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n	uniform sampler2D shadowMap[ MAX_SHADOWS ];\n	uniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n	uniform float shadowDarkness[ MAX_SHADOWS ];\n	uniform float shadowBias[ MAX_SHADOWS ];\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n	float unpackDepth( const in vec4 rgba_depth ) {\n\n		const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n		float depth = dot( rgba_depth, bit_shift );\n		return depth;\n\n	}\n\n#endif",THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n\n	#ifdef BONE_TEXTURE\n\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n\n			y = dy * ( y + 0.5 );\n\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n			mat4 bone = mat4( v1, v2, v3, v4 );\n\n			return bone;\n\n		}\n\n	#else\n\n		uniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			mat4 bone = boneGlobalMatrices[ int(i) ];\n			return bone;\n\n		}\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n	uniform float logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		#extension GL_EXT_frag_depth : enable\n		varying float vFragDepth;\n\n	#endif\n\n#endif",THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n	gl_FragColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n	uniform sampler2D alphaMap;\n\n#endif\n",THREE.UniformsUtils={merge:function(e){var t,r,i,n={};for(t=0;t<e.length;t++){i=this.clone(e[t]);for(r in i)n[r]=i[r]}return n},clone:function(e){var t,r,i,n,a={};for(t in e){a[t]={};for(r in e[t])n=e[t][r],n instanceof THREE.Color||n instanceof THREE.Vector2||n instanceof THREE.Vector3||n instanceof THREE.Vector4||n instanceof THREE.Matrix4||n instanceof THREE.Texture?a[t][r]=n.clone():n instanceof Array?a[t][r]=n.slice():a[t][r]=n}return a}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"	#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"	#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"	#ifdef DOUBLE_SIDED","		if ( gl_FrontFacing )","			gl_FragColor.xyz *= vLightFront;","		else","			gl_FragColor.xyz *= vLightBack;","	#else","		gl_FragColor.xyz *= vLightFront;","	#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"	vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"	vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")
},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","	#ifdef USE_SIZEATTENUATION","		gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","	#else","		gl_PointSize = size;","	#endif","	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"	vLineDistance = scale * lineDistance;","	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	if ( mod( vLineDistance, totalSize ) > dashSize ) {","		discard;","	}","	gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT","		float depth = gl_FragDepthEXT / gl_FragCoord.w;","	#else","		float depth = gl_FragCoord.z / gl_FragCoord.w;","	#endif","	float color = 1.0 - smoothstep( mNear, mFar, depth );","	gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:.98},reflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 specular;","uniform float shininess;","uniform float opacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float refractionRatio;","uniform float reflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","	uniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	gl_FragColor = vec4( vec3( 1.0 ), opacity );","	vec3 specularTex = vec3( 1.0 );","	vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","	normalTex.xy *= uNormalScale;","	normalTex = normalize( normalTex );","	if( enableDiffuse ) {","		#ifdef GAMMA_INPUT","			vec4 texelColor = texture2D( tDiffuse, vUv );","			texelColor.xyz *= texelColor.xyz;","			gl_FragColor = gl_FragColor * texelColor;","		#else","			gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","		#endif","	}","	if( enableAO ) {","		#ifdef GAMMA_INPUT","			vec4 aoColor = texture2D( tAO, vUv );","			aoColor.xyz *= aoColor.xyz;","			gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","		#else","			gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","		#endif","	}",THREE.ShaderChunk.alphatest_fragment,"	if( enableSpecular )","		specularTex = texture2D( tSpecular, vUv ).xyz;","	mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","	vec3 finalNormal = tsb * normalTex;","	#ifdef FLIP_SIDED","		finalNormal = -finalNormal;","	#endif","	vec3 normal = normalize( finalNormal );","	vec3 viewPosition = normalize( vViewPosition );","	#if MAX_POINT_LIGHTS > 0","		vec3 pointDiffuse = vec3( 0.0 );","		vec3 pointSpecular = vec3( 0.0 );","		for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","			vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","			vec3 pointVector = lPosition.xyz + vViewPosition.xyz;","			float pointDistance = 1.0;","			if ( pointLightDistance[ i ] > 0.0 )","				pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","			pointVector = normalize( pointVector );","			#ifdef WRAP_AROUND","				float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","				float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","				vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","			#else","				float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","			#endif","			pointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;","			vec3 pointHalfVector = normalize( pointVector + viewPosition );","			float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","			float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );","			float specularNormalization = ( shininess + 2.0 ) / 8.0;","			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( pointVector, pointHalfVector ), 0.0 ), 5.0 );","			pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","		}","	#endif","	#if MAX_SPOT_LIGHTS > 0","		vec3 spotDiffuse = vec3( 0.0 );","		vec3 spotSpecular = vec3( 0.0 );","		for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","			vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","			vec3 spotVector = lPosition.xyz + vViewPosition.xyz;","			float spotDistance = 1.0;","			if ( spotLightDistance[ i ] > 0.0 )","				spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","			spotVector = normalize( spotVector );","			float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","			if ( spotEffect > spotLightAngleCos[ i ] ) {","				spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );","				#ifdef WRAP_AROUND","					float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","					float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","					vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","				#else","					float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","				#endif","				spotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;","				vec3 spotHalfVector = normalize( spotVector + viewPosition );","				float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","				float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );","				float specularNormalization = ( shininess + 2.0 ) / 8.0;","				vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( spotVector, spotHalfVector ), 0.0 ), 5.0 );","				spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","			}","		}","	#endif","	#if MAX_DIR_LIGHTS > 0","		vec3 dirDiffuse = vec3( 0.0 );","		vec3 dirSpecular = vec3( 0.0 );","		for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","			vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","			vec3 dirVector = normalize( lDirection.xyz );","			#ifdef WRAP_AROUND","				float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","				float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","				vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","			#else","				float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","			#endif","			dirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;","			vec3 dirHalfVector = normalize( dirVector + viewPosition );","			float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","			float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );","			float specularNormalization = ( shininess + 2.0 ) / 8.0;","			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );","			dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","		}","	#endif","	#if MAX_HEMI_LIGHTS > 0","		vec3 hemiDiffuse = vec3( 0.0 );","		vec3 hemiSpecular = vec3( 0.0 );","		for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","			vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","			vec3 lVector = normalize( lDirection.xyz );","			float dotProduct = dot( normal, lVector );","			float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","			vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","			hemiDiffuse += diffuse * hemiColor;","			vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","			float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","			float hemiSpecularWeightSky = specularTex.r * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );","			vec3 lVectorGround = -lVector;","			vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","			float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","			float hemiSpecularWeightGround = specularTex.r * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );","			float dotProductGround = dot( normal, lVectorGround );","			float specularNormalization = ( shininess + 2.0 ) / 8.0;","			vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );","			vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );","			hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","		}","	#endif","	vec3 totalDiffuse = vec3( 0.0 );","	vec3 totalSpecular = vec3( 0.0 );","	#if MAX_DIR_LIGHTS > 0","		totalDiffuse += dirDiffuse;","		totalSpecular += dirSpecular;","	#endif","	#if MAX_HEMI_LIGHTS > 0","		totalDiffuse += hemiDiffuse;","		totalSpecular += hemiSpecular;","	#endif","	#if MAX_POINT_LIGHTS > 0","		totalDiffuse += pointDiffuse;","		totalSpecular += pointSpecular;","	#endif","	#if MAX_SPOT_LIGHTS > 0","		totalDiffuse += spotDiffuse;","		totalSpecular += spotSpecular;","	#endif","	#ifdef METAL","		gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );","	#else","		gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","	#endif","	if ( enableReflection ) {","		vec3 vReflect;","		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","		if ( useRefract ) {","			vReflect = refract( cameraToVertex, normal, refractionRatio );","		} else {","			vReflect = reflect( cameraToVertex, normal );","		}","		vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","		#ifdef GAMMA_INPUT","			cubeColor.xyz *= cubeColor.xyz;","		#endif","		gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );","	}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","	uniform sampler2D tDisplacement;","	uniform float uDisplacementScale;","	uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"	#ifdef USE_SKINNING","		vNormal = normalize( normalMatrix * skinnedNormal.xyz );","		vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","		vTangent = normalize( normalMatrix * skinnedTangent.xyz );","	#else","		vNormal = normalize( normalMatrix * normal );","		vTangent = normalize( normalMatrix * tangent.xyz );","	#endif","	vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","	vUv = uv * uRepeat + uOffset;","	vec3 displacedPosition;","	#ifdef VERTEX_TEXTURES","		if ( enableDisplacement ) {","			vec3 dv = texture2D( tDisplacement, uv ).xyz;","			float df = uDisplacementScale * dv.x + uDisplacementBias;","			displacedPosition = position + normalize( normal ) * df;","		} else {","			#ifdef USE_SKINNING","				vec4 skinVertex = bindMatrix * vec4( position, 1.0 );","				vec4 skinned = vec4( 0.0 );","				skinned += boneMatX * skinVertex * skinWeight.x;","				skinned += boneMatY * skinVertex * skinWeight.y;","				skinned += boneMatZ * skinVertex * skinWeight.z;","				skinned += boneMatW * skinVertex * skinWeight.w;","				skinned  = bindMatrixInverse * skinned;","				displacedPosition = skinned.xyz;","			#else","				displacedPosition = position;","			#endif","		}","	#else","		#ifdef USE_SKINNING","			vec4 skinVertex = bindMatrix * vec4( position, 1.0 );","			vec4 skinned = vec4( 0.0 );","			skinned += boneMatX * skinVertex * skinWeight.x;","			skinned += boneMatY * skinVertex * skinWeight.y;","			skinned += boneMatZ * skinVertex * skinWeight.z;","			skinned += boneMatW * skinVertex * skinWeight.w;","			skinned  = bindMatrixInverse * skinned;","			displacedPosition = skinned.xyz;","		#else","			displacedPosition = position;","		#endif","	#endif","	vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","	vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"	vWorldPosition = worldPosition.xyz;","	vViewPosition = -mvPosition.xyz;","	#ifdef USE_SHADOWMAP","		for( int i = 0; i < MAX_SHADOWS; i ++ ) {","			vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","		}","	#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","	vWorldPosition = worldPosition.xyz;","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {","	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","	const vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );","	res -= res.xxyz * bit_mask;","	return res;","}","void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT","		gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );","	#else","		gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","	#endif","}"].join("\n")}},THREE.WebGLRenderer=function(e){function t(e){e.__webglVertexBuffer=gt.createBuffer(),e.__webglColorBuffer=gt.createBuffer(),ze.info.memory.geometries++}function r(e){e.__webglVertexBuffer=gt.createBuffer(),e.__webglColorBuffer=gt.createBuffer(),e.__webglLineDistanceBuffer=gt.createBuffer(),ze.info.memory.geometries++}function i(e){e.__webglVertexBuffer=gt.createBuffer(),e.__webglNormalBuffer=gt.createBuffer(),e.__webglTangentBuffer=gt.createBuffer(),e.__webglColorBuffer=gt.createBuffer(),e.__webglUVBuffer=gt.createBuffer(),e.__webglUV2Buffer=gt.createBuffer(),e.__webglSkinIndicesBuffer=gt.createBuffer(),e.__webglSkinWeightsBuffer=gt.createBuffer(),e.__webglFaceBuffer=gt.createBuffer(),e.__webglLineBuffer=gt.createBuffer();var t,r;if(e.numMorphTargets)for(e.__webglMorphTargetsBuffers=[],t=0,r=e.numMorphTargets;r>t;t++)e.__webglMorphTargetsBuffers.push(gt.createBuffer());if(e.numMorphNormals)for(e.__webglMorphNormalsBuffers=[],t=0,r=e.numMorphNormals;r>t;t++)e.__webglMorphNormalsBuffers.push(gt.createBuffer());ze.info.memory.geometries++}function n(e,t){var r=e.vertices.length,i=t.material;if(i.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var n in i.attributes){var a=i.attributes[n];if(!a.__webglInitialized||a.createUniqueBuffers){a.__webglInitialized=!0;var o=1;"v2"===a.type?o=2:"v3"===a.type?o=3:"v4"===a.type?o=4:"c"===a.type&&(o=3),a.size=o,a.array=new Float32Array(r*o),a.buffer=gt.createBuffer(),a.buffer.belongsToAttribute=n,a.needsUpdate=!0}e.__webglCustomAttributesList.push(a)}}}function a(e,t){var r=e.vertices.length;e.__vertexArray=new Float32Array(3*r),e.__colorArray=new Float32Array(3*r),e.__sortArray=[],e.__webglParticleCount=r,n(e,t)}function o(e,t){var r=e.vertices.length;e.__vertexArray=new Float32Array(3*r),e.__colorArray=new Float32Array(3*r),e.__lineDistanceArray=new Float32Array(1*r),e.__webglLineCount=r,n(e,t)}function s(e,t){var r=t.geometry,i=e.faces3,n=3*i.length,a=1*i.length,o=3*i.length,s=h(t,e),l=f(s),E=c(s),p=u(s);e.__vertexArray=new Float32Array(3*n),E&&(e.__normalArray=new Float32Array(3*n)),r.hasTangents&&(e.__tangentArray=new Float32Array(4*n)),p&&(e.__colorArray=new Float32Array(3*n)),l&&(r.faceVertexUvs.length>0&&(e.__uvArray=new Float32Array(2*n)),r.faceVertexUvs.length>1&&(e.__uv2Array=new Float32Array(2*n))),t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*n),e.__skinWeightArray=new Float32Array(4*n));var d=null!==bt&&a>21845?Uint32Array:Uint16Array;e.__typeArray=d,e.__faceArray=new d(3*a),e.__lineArray=new d(2*o);var m,v;if(e.numMorphTargets)for(e.__morphTargetsArrays=[],m=0,v=e.numMorphTargets;v>m;m++)e.__morphTargetsArrays.push(new Float32Array(3*n));if(e.numMorphNormals)for(e.__morphNormalsArrays=[],m=0,v=e.numMorphNormals;v>m;m++)e.__morphNormalsArrays.push(new Float32Array(3*n));if(e.__webglFaceCount=3*a,e.__webglLineCount=2*o,s.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var g in s.attributes){var T=s.attributes[g],y={};for(var R in T)y[R]=T[R];if(!y.__webglInitialized||y.createUniqueBuffers){y.__webglInitialized=!0;var x=1;"v2"===y.type?x=2:"v3"===y.type?x=3:"v4"===y.type?x=4:"c"===y.type&&(x=3),y.size=x,y.array=new Float32Array(n*x),y.buffer=gt.createBuffer(),y.buffer.belongsToAttribute=g,T.needsUpdate=!0,y.__original=T}e.__webglCustomAttributesList.push(y)}}e.__inittedArrays=!0}function h(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function l(e){return e&&void 0!==e.shading&&e.shading===THREE.SmoothShading}function c(e){return e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial?!1:l(e)?THREE.SmoothShading:THREE.FlatShading}function u(e){return e.vertexColors?e.vertexColors:!1}function f(e){return e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e instanceof THREE.ShaderMaterial?!0:!1}function E(e){for(var t in e.attributes){var r="index"===t?gt.ELEMENT_ARRAY_BUFFER:gt.ARRAY_BUFFER,i=e.attributes[t];i.buffer=gt.createBuffer(),gt.bindBuffer(r,i.buffer),gt.bufferData(r,i.array,gt.STATIC_DRAW)}}function p(e,t,r){var i,n,a,o,s,h,l=e.vertices,c=l.length,u=e.colors,f=u.length,E=e.__vertexArray,p=e.__colorArray,d=e.__sortArray,m=e.verticesNeedUpdate,v=e.elementsNeedUpdate,g=e.colorsNeedUpdate,T=e.__webglCustomAttributesList,y,R,x,H,b,w,M;if(r.sortParticles){for(Et.copy(ft),Et.multiply(r.matrixWorld),i=0;c>i;i++)a=l[i],pt.copy(a),pt.applyProjection(Et),d[i]=[pt.z,i];for(d.sort(_),i=0;c>i;i++)a=l[d[i][1]],o=3*i,E[o]=a.x,E[o+1]=a.y,E[o+2]=a.z;for(n=0;f>n;n++)o=3*n,h=u[d[n][1]],p[o]=h.r,p[o+1]=h.g,p[o+2]=h.b;if(T)for(y=0,R=T.length;R>y;y++)if(M=T[y],void 0===M.boundTo||"vertices"===M.boundTo)if(o=0,b=M.value.length,1===M.size)for(H=0;b>H;H++)s=d[H][1],M.array[H]=M.value[s];else if(2===M.size)for(H=0;b>H;H++)s=d[H][1],w=M.value[s],M.array[o]=w.x,M.array[o+1]=w.y,o+=2;else if(3===M.size)if("c"===M.type)for(H=0;b>H;H++)s=d[H][1],w=M.value[s],M.array[o]=w.r,M.array[o+1]=w.g,M.array[o+2]=w.b,o+=3;else for(H=0;b>H;H++)s=d[H][1],w=M.value[s],M.array[o]=w.x,M.array[o+1]=w.y,M.array[o+2]=w.z,o+=3;else if(4===M.size)for(H=0;b>H;H++)s=d[H][1],w=M.value[s],M.array[o]=w.x,M.array[o+1]=w.y,M.array[o+2]=w.z,M.array[o+3]=w.w,o+=4}else{if(m)for(i=0;c>i;i++)a=l[i],o=3*i,E[o]=a.x,E[o+1]=a.y,E[o+2]=a.z;if(g)for(n=0;f>n;n++)h=u[n],o=3*n,p[o]=h.r,p[o+1]=h.g,p[o+2]=h.b;if(T)for(y=0,R=T.length;R>y;y++)if(M=T[y],M.needsUpdate&&(void 0===M.boundTo||"vertices"===M.boundTo))if(b=M.value.length,o=0,1===M.size)for(H=0;b>H;H++)M.array[H]=M.value[H];else if(2===M.size)for(H=0;b>H;H++)w=M.value[H],M.array[o]=w.x,M.array[o+1]=w.y,o+=2;else if(3===M.size)if("c"===M.type)for(H=0;b>H;H++)w=M.value[H],M.array[o]=w.r,M.array[o+1]=w.g,M.array[o+2]=w.b,o+=3;else for(H=0;b>H;H++)w=M.value[H],M.array[o]=w.x,M.array[o+1]=w.y,M.array[o+2]=w.z,o+=3;else if(4===M.size)for(H=0;b>H;H++)w=M.value[H],M.array[o]=w.x,M.array[o+1]=w.y,M.array[o+2]=w.z,M.array[o+3]=w.w,o+=4}if((m||r.sortParticles)&&(gt.bindBuffer(gt.ARRAY_BUFFER,e.__webglVertexBuffer),gt.bufferData(gt.ARRAY_BUFFER,E,t)),(g||r.sortParticles)&&(gt.bindBuffer(gt.ARRAY_BUFFER,e.__webglColorBuffer),gt.bufferData(gt.ARRAY_BUFFER,p,t)),T)for(y=0,R=T.length;R>y;y++)M=T[y],(M.needsUpdate||r.sortParticles)&&(gt.bindBuffer(gt.ARRAY_BUFFER,M.buffer),gt.bufferData(gt.ARRAY_BUFFER,M.array,t))}function d(e,t){var r,i,n,a,o,s,h=e.vertices,l=e.colors,c=e.lineDistances,u=h.length,f=l.length,E=c.length,p=e.__vertexArray,d=e.__colorArray,m=e.__lineDistanceArray,v=e.verticesNeedUpdate,g=e.colorsNeedUpdate,T=e.lineDistancesNeedUpdate,y=e.__webglCustomAttributesList,R,x,H,b,_,w,M;if(v){for(r=0;u>r;r++)a=h[r],o=3*r,p[o]=a.x,p[o+1]=a.y,p[o+2]=a.z;gt.bindBuffer(gt.ARRAY_BUFFER,e.__webglVertexBuffer),gt.bufferData(gt.ARRAY_BUFFER,p,t)}if(g){for(i=0;f>i;i++)s=l[i],o=3*i,d[o]=s.r,d[o+1]=s.g,d[o+2]=s.b;gt.bindBuffer(gt.ARRAY_BUFFER,e.__webglColorBuffer),gt.bufferData(gt.ARRAY_BUFFER,d,t)}if(T){for(n=0;E>n;n++)m[n]=c[n];gt.bindBuffer(gt.ARRAY_BUFFER,e.__webglLineDistanceBuffer),gt.bufferData(gt.ARRAY_BUFFER,m,t)}if(y)for(R=0,x=y.length;x>R;R++)if(M=y[R],M.needsUpdate&&(void 0===M.boundTo||"vertices"===M.boundTo)){if(o=0,_=M.value.length,1===M.size)for(b=0;_>b;b++)M.array[b]=M.value[b];else if(2===M.size)for(b=0;_>b;b++)w=M.value[b],M.array[o]=w.x,M.array[o+1]=w.y,o+=2;else if(3===M.size)if("c"===M.type)for(b=0;_>b;b++)w=M.value[b],M.array[o]=w.r,M.array[o+1]=w.g,M.array[o+2]=w.b,o+=3;else for(b=0;_>b;b++)w=M.value[b],M.array[o]=w.x,M.array[o+1]=w.y,M.array[o+2]=w.z,o+=3;else if(4===M.size)for(b=0;_>b;b++)w=M.value[b],M.array[o]=w.x,M.array[o+1]=w.y,M.array[o+2]=w.z,M.array[o+3]=w.w,o+=4;gt.bindBuffer(gt.ARRAY_BUFFER,M.buffer),gt.bufferData(gt.ARRAY_BUFFER,M.array,t)}}function m(e,t,r,i,n){if(e.__inittedArrays){var a=c(n),o=u(n),s=f(n),h=a===THREE.SmoothShading,l,E,p,d,m,v,g,T,y,R,x,H,b,_,w,M,S,C,A,L,P,F,D,U,V,z,B,k,N,O,I,G,W,j,X,Y,q,K,Z,Q,J,ee,te,re,ie,ne,ae,oe,se,he,le,ce,ue,fe,Ee,pe,de,me=0,ve=0,ge=0,Te=0,ye=0,Re=0,xe=0,He=0,be=0,_e=0,we=0,Me=0,Se=0,Ce,Ae=e.__vertexArray,Le=e.__uvArray,Pe=e.__uv2Array,Fe=e.__normalArray,De=e.__tangentArray,Ue=e.__colorArray,Ve=e.__skinIndexArray,ze=e.__skinWeightArray,Be=e.__morphTargetsArrays,ke=e.__morphNormalsArrays,Ne=e.__webglCustomAttributesList,Oe,Ie=e.__faceArray,Ge=e.__lineArray,We=t.geometry,je=We.verticesNeedUpdate,Xe=We.elementsNeedUpdate,Ye=We.uvsNeedUpdate,qe=We.normalsNeedUpdate,Ke=We.tangentsNeedUpdate,Ze=We.colorsNeedUpdate,Qe=We.morphTargetsNeedUpdate,Je=We.vertices,$e=e.faces3,et=We.faces,tt=We.faceVertexUvs[0],rt=We.faceVertexUvs[1],it=We.colors,nt=We.skinIndices,at=We.skinWeights,ot=We.morphTargets,st=We.morphNormals;if(je){for(l=0,E=$e.length;E>l;l++)d=et[$e[l]],b=Je[d.a],_=Je[d.b],w=Je[d.c],Ae[ve]=b.x,Ae[ve+1]=b.y,Ae[ve+2]=b.z,Ae[ve+3]=_.x,Ae[ve+4]=_.y,Ae[ve+5]=_.z,Ae[ve+6]=w.x,Ae[ve+7]=w.y,Ae[ve+8]=w.z,ve+=9;gt.bindBuffer(gt.ARRAY_BUFFER,e.__webglVertexBuffer),gt.bufferData(gt.ARRAY_BUFFER,Ae,r)}if(Qe)for(le=0,ce=ot.length;ce>le;le++){for(we=0,l=0,E=$e.length;E>l;l++)Ee=$e[l],d=et[Ee],b=ot[le].vertices[d.a],_=ot[le].vertices[d.b],w=ot[le].vertices[d.c],ue=Be[le],ue[we]=b.x,ue[we+1]=b.y,ue[we+2]=b.z,ue[we+3]=_.x,ue[we+4]=_.y,ue[we+5]=_.z,ue[we+6]=w.x,ue[we+7]=w.y,ue[we+8]=w.z,n.morphNormals&&(h?(pe=st[le].vertexNormals[Ee],P=pe.a,F=pe.b,D=pe.c):(P=st[le].faceNormals[Ee],F=P,D=P),fe=ke[le],fe[we]=P.x,fe[we+1]=P.y,fe[we+2]=P.z,fe[we+3]=F.x,fe[we+4]=F.y,fe[we+5]=F.z,fe[we+6]=D.x,fe[we+7]=D.y,fe[we+8]=D.z),we+=9;gt.bindBuffer(gt.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[le]),gt.bufferData(gt.ARRAY_BUFFER,Be[le],r),n.morphNormals&&(gt.bindBuffer(gt.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[le]),gt.bufferData(gt.ARRAY_BUFFER,ke[le],r))}if(at.length){for(l=0,E=$e.length;E>l;l++)d=et[$e[l]],k=at[d.a],N=at[d.b],O=at[d.c],ze[_e]=k.x,ze[_e+1]=k.y,ze[_e+2]=k.z,ze[_e+3]=k.w,ze[_e+4]=N.x,ze[_e+5]=N.y,ze[_e+6]=N.z,ze[_e+7]=N.w,ze[_e+8]=O.x,ze[_e+9]=O.y,ze[_e+10]=O.z,ze[_e+11]=O.w,G=nt[d.a],W=nt[d.b],j=nt[d.c],Ve[_e]=G.x,Ve[_e+1]=G.y,Ve[_e+2]=G.z,Ve[_e+3]=G.w,Ve[_e+4]=W.x,Ve[_e+5]=W.y,Ve[_e+6]=W.z,Ve[_e+7]=W.w,Ve[_e+8]=j.x,Ve[_e+9]=j.y,Ve[_e+10]=j.z,Ve[_e+11]=j.w,_e+=12;_e>0&&(gt.bindBuffer(gt.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),gt.bufferData(gt.ARRAY_BUFFER,Ve,r),gt.bindBuffer(gt.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),gt.bufferData(gt.ARRAY_BUFFER,ze,r))}if(Ze&&o){for(l=0,E=$e.length;E>l;l++)d=et[$e[l]],T=d.vertexColors,y=d.color,3===T.length&&o===THREE.VertexColors?(V=T[0],z=T[1],B=T[2]):(V=y,z=y,B=y),Ue[be]=V.r,Ue[be+1]=V.g,Ue[be+2]=V.b,Ue[be+3]=z.r,Ue[be+4]=z.g,Ue[be+5]=z.b,Ue[be+6]=B.r,Ue[be+7]=B.g,Ue[be+8]=B.b,be+=9;be>0&&(gt.bindBuffer(gt.ARRAY_BUFFER,e.__webglColorBuffer),gt.bufferData(gt.ARRAY_BUFFER,Ue,r))}if(Ke&&We.hasTangents){for(l=0,E=$e.length;E>l;l++)d=et[$e[l]],R=d.vertexTangents,S=R[0],C=R[1],A=R[2],De[xe]=S.x,De[xe+1]=S.y,De[xe+2]=S.z,De[xe+3]=S.w,De[xe+4]=C.x,De[xe+5]=C.y,De[xe+6]=C.z,De[xe+7]=C.w,De[xe+8]=A.x,De[xe+9]=A.y,De[xe+10]=A.z,De[xe+11]=A.w,xe+=12;gt.bindBuffer(gt.ARRAY_BUFFER,e.__webglTangentBuffer),gt.bufferData(gt.ARRAY_BUFFER,De,r)}if(qe&&a){for(l=0,E=$e.length;E>l;l++)if(d=et[$e[l]],m=d.vertexNormals,v=d.normal,3===m.length&&h)for(ne=0;3>ne;ne++)oe=m[ne],Fe[Re]=oe.x,Fe[Re+1]=oe.y,Fe[Re+2]=oe.z,Re+=3;else for(ne=0;3>ne;ne++)Fe[Re]=v.x,Fe[Re+1]=v.y,Fe[Re+2]=v.z,Re+=3;gt.bindBuffer(gt.ARRAY_BUFFER,e.__webglNormalBuffer),gt.bufferData(gt.ARRAY_BUFFER,Fe,r)}if(Ye&&tt&&s){for(l=0,E=$e.length;E>l;l++)if(p=$e[l],x=tt[p],void 0!==x)for(ne=0;3>ne;ne++)se=x[ne],Le[ge]=se.x,Le[ge+1]=se.y,ge+=2;ge>0&&(gt.bindBuffer(gt.ARRAY_BUFFER,e.__webglUVBuffer),gt.bufferData(gt.ARRAY_BUFFER,Le,r))}if(Ye&&rt&&s){for(l=0,E=$e.length;E>l;l++)if(p=$e[l],H=rt[p],void 0!==H)for(ne=0;3>ne;ne++)he=H[ne],Pe[Te]=he.x,Pe[Te+1]=he.y,Te+=2;Te>0&&(gt.bindBuffer(gt.ARRAY_BUFFER,e.__webglUV2Buffer),
gt.bufferData(gt.ARRAY_BUFFER,Pe,r))}if(Xe){for(l=0,E=$e.length;E>l;l++)Ie[ye]=me,Ie[ye+1]=me+1,Ie[ye+2]=me+2,ye+=3,Ge[He]=me,Ge[He+1]=me+1,Ge[He+2]=me,Ge[He+3]=me+2,Ge[He+4]=me+1,Ge[He+5]=me+2,He+=6,me+=3;gt.bindBuffer(gt.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),gt.bufferData(gt.ELEMENT_ARRAY_BUFFER,Ie,r),gt.bindBuffer(gt.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),gt.bufferData(gt.ELEMENT_ARRAY_BUFFER,Ge,r)}if(Ne)for(ne=0,ae=Ne.length;ae>ne;ne++)if(Oe=Ne[ne],Oe.__original.needsUpdate){if(Me=0,Se=0,1===Oe.size){if(void 0===Oe.boundTo||"vertices"===Oe.boundTo)for(l=0,E=$e.length;E>l;l++)d=et[$e[l]],Oe.array[Me]=Oe.value[d.a],Oe.array[Me+1]=Oe.value[d.b],Oe.array[Me+2]=Oe.value[d.c],Me+=3;else if("faces"===Oe.boundTo)for(l=0,E=$e.length;E>l;l++)Ce=Oe.value[$e[l]],Oe.array[Me]=Ce,Oe.array[Me+1]=Ce,Oe.array[Me+2]=Ce,Me+=3}else if(2===Oe.size){if(void 0===Oe.boundTo||"vertices"===Oe.boundTo)for(l=0,E=$e.length;E>l;l++)d=et[$e[l]],b=Oe.value[d.a],_=Oe.value[d.b],w=Oe.value[d.c],Oe.array[Me]=b.x,Oe.array[Me+1]=b.y,Oe.array[Me+2]=_.x,Oe.array[Me+3]=_.y,Oe.array[Me+4]=w.x,Oe.array[Me+5]=w.y,Me+=6;else if("faces"===Oe.boundTo)for(l=0,E=$e.length;E>l;l++)Ce=Oe.value[$e[l]],b=Ce,_=Ce,w=Ce,Oe.array[Me]=b.x,Oe.array[Me+1]=b.y,Oe.array[Me+2]=_.x,Oe.array[Me+3]=_.y,Oe.array[Me+4]=w.x,Oe.array[Me+5]=w.y,Me+=6}else if(3===Oe.size){var ht;if(ht="c"===Oe.type?["r","g","b"]:["x","y","z"],void 0===Oe.boundTo||"vertices"===Oe.boundTo)for(l=0,E=$e.length;E>l;l++)d=et[$e[l]],b=Oe.value[d.a],_=Oe.value[d.b],w=Oe.value[d.c],Oe.array[Me]=b[ht[0]],Oe.array[Me+1]=b[ht[1]],Oe.array[Me+2]=b[ht[2]],Oe.array[Me+3]=_[ht[0]],Oe.array[Me+4]=_[ht[1]],Oe.array[Me+5]=_[ht[2]],Oe.array[Me+6]=w[ht[0]],Oe.array[Me+7]=w[ht[1]],Oe.array[Me+8]=w[ht[2]],Me+=9;else if("faces"===Oe.boundTo)for(l=0,E=$e.length;E>l;l++)Ce=Oe.value[$e[l]],b=Ce,_=Ce,w=Ce,Oe.array[Me]=b[ht[0]],Oe.array[Me+1]=b[ht[1]],Oe.array[Me+2]=b[ht[2]],Oe.array[Me+3]=_[ht[0]],Oe.array[Me+4]=_[ht[1]],Oe.array[Me+5]=_[ht[2]],Oe.array[Me+6]=w[ht[0]],Oe.array[Me+7]=w[ht[1]],Oe.array[Me+8]=w[ht[2]],Me+=9;else if("faceVertices"===Oe.boundTo)for(l=0,E=$e.length;E>l;l++)Ce=Oe.value[$e[l]],b=Ce[0],_=Ce[1],w=Ce[2],Oe.array[Me]=b[ht[0]],Oe.array[Me+1]=b[ht[1]],Oe.array[Me+2]=b[ht[2]],Oe.array[Me+3]=_[ht[0]],Oe.array[Me+4]=_[ht[1]],Oe.array[Me+5]=_[ht[2]],Oe.array[Me+6]=w[ht[0]],Oe.array[Me+7]=w[ht[1]],Oe.array[Me+8]=w[ht[2]],Me+=9}else if(4===Oe.size)if(void 0===Oe.boundTo||"vertices"===Oe.boundTo)for(l=0,E=$e.length;E>l;l++)d=et[$e[l]],b=Oe.value[d.a],_=Oe.value[d.b],w=Oe.value[d.c],Oe.array[Me]=b.x,Oe.array[Me+1]=b.y,Oe.array[Me+2]=b.z,Oe.array[Me+3]=b.w,Oe.array[Me+4]=_.x,Oe.array[Me+5]=_.y,Oe.array[Me+6]=_.z,Oe.array[Me+7]=_.w,Oe.array[Me+8]=w.x,Oe.array[Me+9]=w.y,Oe.array[Me+10]=w.z,Oe.array[Me+11]=w.w,Me+=12;else if("faces"===Oe.boundTo)for(l=0,E=$e.length;E>l;l++)Ce=Oe.value[$e[l]],b=Ce,_=Ce,w=Ce,Oe.array[Me]=b.x,Oe.array[Me+1]=b.y,Oe.array[Me+2]=b.z,Oe.array[Me+3]=b.w,Oe.array[Me+4]=_.x,Oe.array[Me+5]=_.y,Oe.array[Me+6]=_.z,Oe.array[Me+7]=_.w,Oe.array[Me+8]=w.x,Oe.array[Me+9]=w.y,Oe.array[Me+10]=w.z,Oe.array[Me+11]=w.w,Me+=12;else if("faceVertices"===Oe.boundTo)for(l=0,E=$e.length;E>l;l++)Ce=Oe.value[$e[l]],b=Ce[0],_=Ce[1],w=Ce[2],Oe.array[Me]=b.x,Oe.array[Me+1]=b.y,Oe.array[Me+2]=b.z,Oe.array[Me+3]=b.w,Oe.array[Me+4]=_.x,Oe.array[Me+5]=_.y,Oe.array[Me+6]=_.z,Oe.array[Me+7]=_.w,Oe.array[Me+8]=w.x,Oe.array[Me+9]=w.y,Oe.array[Me+10]=w.z,Oe.array[Me+11]=w.w,Me+=12;gt.bindBuffer(gt.ARRAY_BUFFER,Oe.buffer),gt.bufferData(gt.ARRAY_BUFFER,Oe.array,r)}i&&(delete e.__inittedArrays,delete e.__colorArray,delete e.__normalArray,delete e.__tangentArray,delete e.__uvArray,delete e.__uv2Array,delete e.__faceArray,delete e.__vertexArray,delete e.__lineArray,delete e.__skinIndexArray,delete e.__skinWeightArray)}}function v(e,t){var r=e.attributes,i,n;for(i in r)n=r[i],n.needsUpdate&&("index"===i?(gt.bindBuffer(gt.ELEMENT_ARRAY_BUFFER,n.buffer),gt.bufferData(gt.ELEMENT_ARRAY_BUFFER,n.array,t)):(gt.bindBuffer(gt.ARRAY_BUFFER,n.buffer),gt.bufferData(gt.ARRAY_BUFFER,n.array,t)),n.needsUpdate=!1)}function g(e,t,r,i){for(var n in t){var a=t[n],o=r[n];if(a>=0)if(o){var s=o.itemSize;gt.bindBuffer(gt.ARRAY_BUFFER,o.buffer),y(a),gt.vertexAttribPointer(a,s,gt.FLOAT,!1,0,i*s*4)}else e.defaultAttributeValues&&(2===e.defaultAttributeValues[n].length?gt.vertexAttrib2fv(a,e.defaultAttributeValues[n]):3===e.defaultAttributeValues[n].length&&gt.vertexAttrib3fv(a,e.defaultAttributeValues[n]))}R()}function T(){for(var e=0,t=lt.length;t>e;e++)lt[e]=0}function y(e){lt[e]=1,0===ct[e]&&(gt.enableVertexAttribArray(e),ct[e]=1)}function R(){for(var e=0,t=ct.length;t>e;e++)ct[e]!==lt[e]&&(gt.disableVertexAttribArray(e),ct[e]=0)}function x(e,t,r){var i=e.program.attributes;if(-1!==r.morphTargetBase&&i.position>=0?(gt.bindBuffer(gt.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[r.morphTargetBase]),y(i.position),gt.vertexAttribPointer(i.position,3,gt.FLOAT,!1,0,0)):i.position>=0&&(gt.bindBuffer(gt.ARRAY_BUFFER,t.__webglVertexBuffer),y(i.position),gt.vertexAttribPointer(i.position,3,gt.FLOAT,!1,0,0)),r.morphTargetForcedOrder.length)for(var n=0,a=r.morphTargetForcedOrder,o=r.morphTargetInfluences;n<e.numSupportedMorphTargets&&n<a.length;)i["morphTarget"+n]>=0&&(gt.bindBuffer(gt.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[a[n]]),y(i["morphTarget"+n]),gt.vertexAttribPointer(i["morphTarget"+n],3,gt.FLOAT,!1,0,0)),i["morphNormal"+n]>=0&&e.morphNormals&&(gt.bindBuffer(gt.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[a[n]]),y(i["morphNormal"+n]),gt.vertexAttribPointer(i["morphNormal"+n],3,gt.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[n]=o[a[n]],n++;else{var s,h=[],o=r.morphTargetInfluences,l,c=o.length;for(l=0;c>l;l++)s=o[l],s>0&&h.push([s,l]);h.length>e.numSupportedMorphTargets?(h.sort(_),h.length=e.numSupportedMorphTargets):h.length>e.numSupportedMorphNormals?h.sort(_):0===h.length&&h.push([0,0]);for(var u,n=0;n<e.numSupportedMorphTargets;)h[n]?(u=h[n][1],i["morphTarget"+n]>=0&&(gt.bindBuffer(gt.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[u]),y(i["morphTarget"+n]),gt.vertexAttribPointer(i["morphTarget"+n],3,gt.FLOAT,!1,0,0)),i["morphNormal"+n]>=0&&e.morphNormals&&(gt.bindBuffer(gt.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[u]),y(i["morphNormal"+n]),gt.vertexAttribPointer(i["morphNormal"+n],3,gt.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[n]=o[u]):r.__webglMorphTargetInfluences[n]=0,n++}null!==e.program.uniforms.morphTargetInfluences&&gt.uniform1fv(e.program.uniforms.morphTargetInfluences,r.__webglMorphTargetInfluences)}function H(e,t){return e.z!==t.z?t.z-e.z:e.id-t.id}function b(e,t){return e.z!==t.z?e.z-t.z:e.id-t.id}function _(e,t){return t[0]-e[0]}function w(e,t,r){if(t.visible!==!1){var i=e.__webglObjects[t.id];if(i&&(t.frustumCulled===!1||ut.intersectsObject(t)===!0)){V(e,t);for(var n=0,a=i.length;a>n;n++){var o=i[n];L(o),o.render=!0,ze.sortObjects===!0&&(null!==t.renderDepth?o.z=t.renderDepth:(pt.setFromMatrixPosition(t.matrixWorld),pt.applyProjection(ft),o.z=pt.z))}}for(var n=0,a=t.children.length;a>n;n++)w(e,t.children[n],r)}}function M(e,t,r){if(0!==e.length)for(var i=0,n=e.length;n>i;i++)ke=null,Ge=null,Ye=-1,Qe=-1,Je=-1,je=-1,Xe=-1,Ie=-1,Oe=-1,mt=!0,e[i].render(t,r,st,ht),ke=null,Ge=null,Ye=-1,Qe=-1,Je=-1,je=-1,Xe=-1,Ie=-1,Oe=-1,mt=!0}function S(e,t,r,i,n,a){for(var o,s,h,l,c=e.length-1;-1!==c;c--){if(o=e[c],s=o.object,h=o.buffer,ie(s,t),a)l=a;else{if(l=o.material,!l)continue;n&&ze.setBlending(l.blending,l.blendEquation,l.blendSrc,l.blendDst),ze.setDepthTest(l.depthTest),ze.setDepthWrite(l.depthWrite),he(l.polygonOffset,l.polygonOffsetFactor,l.polygonOffsetUnits)}ze.setMaterialFaces(l),h instanceof THREE.BufferGeometry?ze.renderBufferDirect(t,r,i,l,h,s):ze.renderBuffer(t,r,i,l,h,s)}}function C(e,t,r,i,n,a,o){for(var s,h,l,c,u=0,f=e.length;f>u;u++)if(s=e[u],h=s.object,h.visible){if(o)l=o;else{if(l=s[t],!l)continue;a&&ze.setBlending(l.blending,l.blendEquation,l.blendSrc,l.blendDst),ze.setDepthTest(l.depthTest),ze.setDepthWrite(l.depthWrite),he(l.polygonOffset,l.polygonOffsetFactor,l.polygonOffsetUnits)}ze.renderImmediateObject(r,i,n,l,h)}}function A(e){var t=e.object,r=t.material;r.transparent?(e.transparent=r,e.opaque=null):(e.opaque=r,e.transparent=null)}function L(e){var t=e.object,r=e.buffer,i=t.geometry,n=t.material;if(n instanceof THREE.MeshFaceMaterial){var a=i instanceof THREE.BufferGeometry?0:r.materialIndex;n=n.materials[a],n.transparent?(e.material=n,Ve.push(e)):(e.material=n,Ue.push(e))}else n&&(n.transparent?(e.material=n,Ve.push(e)):(e.material=n,Ue.push(e)))}function P(e,i){var n,s,h;if(void 0===e.__webglInit&&(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrix=new THREE.Matrix3),s=e.geometry,void 0===s||void 0===s.__webglInit&&(s.__webglInit=!0,s.addEventListener("dispose",It),s instanceof THREE.BufferGeometry?E(s):e instanceof THREE.Mesh?(void 0!==e.__webglActive&&k(e,i),F(i,e,s)):e instanceof THREE.Line?s.__webglVertexBuffer||(r(s),o(s,e),s.verticesNeedUpdate=!0,s.colorsNeedUpdate=!0,s.lineDistancesNeedUpdate=!0):e instanceof THREE.PointCloud&&(s.__webglVertexBuffer||(t(s),a(s,e),s.verticesNeedUpdate=!0,s.colorsNeedUpdate=!0))),void 0===e.__webglActive){if(e instanceof THREE.Mesh){if(s=e.geometry,s instanceof THREE.BufferGeometry)D(i.__webglObjects,s,e);else if(s instanceof THREE.Geometry)for(var l=0,c=s.geometryGroupsList.length;c>l;l++)h=s.geometryGroupsList[l],D(i.__webglObjects,h,e)}else e instanceof THREE.Line||e instanceof THREE.PointCloud?(s=e.geometry,D(i.__webglObjects,s,e)):(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&U(i.__webglObjectsImmediate,e);e.__webglActive=!0}}function F(e,t,r){var n,a,o,h=!1;o=t.material,(void 0===r.geometryGroups||r.groupsNeedUpdate)&&(delete e.__webglObjects[t.id],r.makeGroups(o instanceof THREE.MeshFaceMaterial,bt?4294967296:65535),r.groupsNeedUpdate=!1);for(var l=0,c=r.geometryGroupsList.length;c>l;l++)a=r.geometryGroupsList[l],a.__webglVertexBuffer?h=!1:(i(a),s(a,t),r.verticesNeedUpdate=!0,r.morphTargetsNeedUpdate=!0,r.elementsNeedUpdate=!0,r.uvsNeedUpdate=!0,r.normalsNeedUpdate=!0,r.tangentsNeedUpdate=!0,r.colorsNeedUpdate=!0,h=!0),(h||void 0===t.__webglActive)&&D(e.__webglObjects,a,t);t.__webglActive=!0}function D(e,t,r){var i=r.id;e[i]=e[i]||[],e[i].push({id:i,buffer:t,object:r,material:null,z:0})}function U(e,t){e.push({id:null,object:t,opaque:null,transparent:null,z:0})}function V(e,t){var r=t.geometry,i,n,a;if(r instanceof THREE.BufferGeometry)v(r,gt.DYNAMIC_DRAW);else if(t instanceof THREE.Mesh){(r.buffersNeedUpdate||r.groupsNeedUpdate)&&(r instanceof THREE.BufferGeometry?E(r):t instanceof THREE.Mesh&&F(e,t,r));for(var o=0,l=r.geometryGroupsList.length;l>o;o++)i=r.geometryGroupsList[o],a=h(t,i),(r.buffersNeedUpdate||r.groupsNeedUpdate)&&s(i,t),n=a.attributes&&z(a),(r.verticesNeedUpdate||r.morphTargetsNeedUpdate||r.elementsNeedUpdate||r.uvsNeedUpdate||r.normalsNeedUpdate||r.colorsNeedUpdate||r.tangentsNeedUpdate||n)&&m(i,t,gt.DYNAMIC_DRAW,!r.dynamic,a);r.verticesNeedUpdate=!1,r.morphTargetsNeedUpdate=!1,r.elementsNeedUpdate=!1,r.uvsNeedUpdate=!1,r.normalsNeedUpdate=!1,r.colorsNeedUpdate=!1,r.tangentsNeedUpdate=!1,r.buffersNeedUpdate=!1,a.attributes&&B(a)}else t instanceof THREE.Line?(a=h(t,r),n=a.attributes&&z(a),(r.verticesNeedUpdate||r.colorsNeedUpdate||r.lineDistancesNeedUpdate||n)&&d(r,gt.DYNAMIC_DRAW),r.verticesNeedUpdate=!1,r.colorsNeedUpdate=!1,r.lineDistancesNeedUpdate=!1,a.attributes&&B(a)):t instanceof THREE.PointCloud&&(a=h(t,r),n=a.attributes&&z(a),(r.verticesNeedUpdate||r.colorsNeedUpdate||t.sortParticles||n)&&p(r,gt.DYNAMIC_DRAW,t),r.verticesNeedUpdate=!1,r.colorsNeedUpdate=!1,a.attributes&&B(a))}function z(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function B(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function k(e,t){e instanceof THREE.Mesh||e instanceof THREE.PointCloud||e instanceof THREE.Line?N(t.__webglObjects,e):(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&O(t.__webglObjectsImmediate,e),delete e.__webglActive}function N(e,t){delete e[t.id]}function O(e,t){for(var r=e.length-1;r>=0;r--)e[r].object===t&&e.splice(r,1)}function I(e,t,r,i,n){We=0,i.needsUpdate&&(i.program&&Zt(i),ze.initMaterial(i,t,r,n),i.needsUpdate=!1),i.morphTargets&&(n.__webglMorphTargetInfluences||(n.__webglMorphTargetInfluences=new Float32Array(ze.maxMorphTargets)));var a=!1,o=!1,s=!1,h=i.program,l=h.uniforms,c=i.__webglShader.uniforms;if(h.id!==ke&&(gt.useProgram(h.program),ke=h.id,a=!0,o=!0,s=!0),i.id!==Oe&&(-1===Oe&&(s=!0),Oe=i.id,o=!0),(a||e!==Ge)&&(gt.uniformMatrix4fv(l.projectionMatrix,!1,e.projectionMatrix.elements),Pe&&gt.uniform1f(l.logDepthBufFC,2/(Math.log(e.far+1)/Math.LN2)),e!==Ge&&(Ge=e),(i instanceof THREE.ShaderMaterial||i instanceof THREE.MeshPhongMaterial||i.envMap)&&null!==l.cameraPosition&&(pt.setFromMatrixPosition(e.matrixWorld),gt.uniform3f(l.cameraPosition,pt.x,pt.y,pt.z)),(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.ShaderMaterial||i.skinning)&&null!==l.viewMatrix&&gt.uniformMatrix4fv(l.viewMatrix,!1,e.matrixWorldInverse.elements)),i.skinning)if(n.bindMatrix&&null!==l.bindMatrix&&gt.uniformMatrix4fv(l.bindMatrix,!1,n.bindMatrix.elements),n.bindMatrixInverse&&null!==l.bindMatrixInverse&&gt.uniformMatrix4fv(l.bindMatrixInverse,!1,n.bindMatrixInverse.elements),Pt&&n.skeleton&&n.skeleton.useVertexTexture){if(null!==l.boneTexture){var u=te();gt.uniform1i(l.boneTexture,u),ze.setTexture(n.skeleton.boneTexture,u)}null!==l.boneTextureWidth&&gt.uniform1i(l.boneTextureWidth,n.skeleton.boneTextureWidth),null!==l.boneTextureHeight&&gt.uniform1i(l.boneTextureHeight,n.skeleton.boneTextureHeight)}else n.skeleton&&n.skeleton.boneMatrices&&null!==l.boneGlobalMatrices&&gt.uniformMatrix4fv(l.boneGlobalMatrices,!1,n.skeleton.boneMatrices);return o&&(r&&i.fog&&Y(c,r),(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i.lights)&&(mt&&(s=!0,oe(t),mt=!1),s?(Z(c,vt),Q(c,!0)):Q(c,!1)),(i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshPhongMaterial)&&G(c,i),i instanceof THREE.LineBasicMaterial?W(c,i):i instanceof THREE.LineDashedMaterial?(W(c,i),j(c,i)):i instanceof THREE.PointCloudMaterial?X(c,i):i instanceof THREE.MeshPhongMaterial?q(c,i):i instanceof THREE.MeshLambertMaterial?K(c,i):i instanceof THREE.MeshDepthMaterial?(c.mNear.value=e.near,c.mFar.value=e.far,c.opacity.value=i.opacity):i instanceof THREE.MeshNormalMaterial&&(c.opacity.value=i.opacity),n.receiveShadow&&!i._shadowPass&&J(c,t),re(i.uniformsList)),ee(l,n),null!==l.modelMatrix&&gt.uniformMatrix4fv(l.modelMatrix,!1,n.matrixWorld.elements),h}function G(e,t){e.opacity.value=t.opacity,ze.gammaInput?e.diffuse.value.copyGammaToLinear(t.color):e.diffuse.value=t.color,e.map.value=t.map,e.lightMap.value=t.lightMap,e.specularMap.value=t.specularMap,e.alphaMap.value=t.alphaMap,t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale));var r;if(t.map?r=t.map:t.specularMap?r=t.specularMap:t.normalMap?r=t.normalMap:t.bumpMap?r=t.bumpMap:t.alphaMap&&(r=t.alphaMap),void 0!==r){var i=r.offset,n=r.repeat;e.offsetRepeat.value.set(i.x,i.y,n.x,n.y)}e.envMap.value=t.envMap,e.flipEnvMap.value=t.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,ze.gammaInput?e.reflectivity.value=t.reflectivity:e.reflectivity.value=t.reflectivity,e.refractionRatio.value=t.refractionRatio,e.combine.value=t.combine,e.useRefract.value=t.envMap&&t.envMap.mapping instanceof THREE.CubeRefractionMapping}function W(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}function j(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}function X(e,t){e.psColor.value=t.color,e.opacity.value=t.opacity,e.size.value=t.size,e.scale.value=He.height/2,e.map.value=t.map}function Y(e,t){e.fogColor.value=t.color,t instanceof THREE.Fog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t instanceof THREE.FogExp2&&(e.fogDensity.value=t.density)}function q(e,t){e.shininess.value=t.shininess,ze.gammaInput?(e.ambient.value.copyGammaToLinear(t.ambient),e.emissive.value.copyGammaToLinear(t.emissive),e.specular.value.copyGammaToLinear(t.specular)):(e.ambient.value=t.ambient,e.emissive.value=t.emissive,e.specular.value=t.specular),t.wrapAround&&e.wrapRGB.value.copy(t.wrapRGB)}function K(e,t){ze.gammaInput?(e.ambient.value.copyGammaToLinear(t.ambient),e.emissive.value.copyGammaToLinear(t.emissive)):(e.ambient.value=t.ambient,e.emissive.value=t.emissive),t.wrapAround&&e.wrapRGB.value.copy(t.wrapRGB)}function Z(e,t){e.ambientLightColor.value=t.ambient,e.directionalLightColor.value=t.directional.colors,e.directionalLightDirection.value=t.directional.positions,e.pointLightColor.value=t.point.colors,e.pointLightPosition.value=t.point.positions,e.pointLightDistance.value=t.point.distances,e.spotLightColor.value=t.spot.colors,e.spotLightPosition.value=t.spot.positions,e.spotLightDistance.value=t.spot.distances,e.spotLightDirection.value=t.spot.directions,e.spotLightAngleCos.value=t.spot.anglesCos,e.spotLightExponent.value=t.spot.exponents,e.hemisphereLightSkyColor.value=t.hemi.skyColors,e.hemisphereLightGroundColor.value=t.hemi.groundColors,e.hemisphereLightDirection.value=t.hemi.positions}function Q(e,t){e.ambientLightColor.needsUpdate=t,e.directionalLightColor.needsUpdate=t,e.directionalLightDirection.needsUpdate=t,e.pointLightColor.needsUpdate=t,e.pointLightPosition.needsUpdate=t,e.pointLightDistance.needsUpdate=t,e.spotLightColor.needsUpdate=t,e.spotLightPosition.needsUpdate=t,e.spotLightDistance.needsUpdate=t,e.spotLightDirection.needsUpdate=t,e.spotLightAngleCos.needsUpdate=t,e.spotLightExponent.needsUpdate=t,e.hemisphereLightSkyColor.needsUpdate=t,e.hemisphereLightGroundColor.needsUpdate=t,e.hemisphereLightDirection.needsUpdate=t}function J(e,t){if(e.shadowMatrix)for(var r=0,i=0,n=t.length;n>i;i++){var a=t[i];a.castShadow&&(a instanceof THREE.SpotLight||a instanceof THREE.DirectionalLight&&!a.shadowCascade)&&(e.shadowMap.value[r]=a.shadowMap,e.shadowMapSize.value[r]=a.shadowMapSize,e.shadowMatrix.value[r]=a.shadowMatrix,e.shadowDarkness.value[r]=a.shadowDarkness,e.shadowBias.value[r]=a.shadowBias,r++)}}function ee(e,t){gt.uniformMatrix4fv(e.modelViewMatrix,!1,t._modelViewMatrix.elements),e.normalMatrix&&gt.uniformMatrix3fv(e.normalMatrix,!1,t._normalMatrix.elements)}function te(){var e=We;return e>=wt&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+wt),We+=1,e}function re(e){for(var t,r,i,n=0,a=e.length;a>n;n++){var o=e[n][0];if(o.needsUpdate!==!1){var s=o.type,h=o.value,l=e[n][1];switch(s){case"1i":gt.uniform1i(l,h);break;case"1f":gt.uniform1f(l,h);break;case"2f":gt.uniform2f(l,h[0],h[1]);break;case"3f":gt.uniform3f(l,h[0],h[1],h[2]);break;case"4f":gt.uniform4f(l,h[0],h[1],h[2],h[3]);break;case"1iv":gt.uniform1iv(l,h);break;case"3iv":gt.uniform3iv(l,h);break;case"1fv":gt.uniform1fv(l,h);break;case"2fv":gt.uniform2fv(l,h);break;case"3fv":gt.uniform3fv(l,h);break;case"4fv":gt.uniform4fv(l,h);break;case"Matrix3fv":gt.uniformMatrix3fv(l,!1,h);break;case"Matrix4fv":gt.uniformMatrix4fv(l,!1,h);break;case"i":gt.uniform1i(l,h);break;case"f":gt.uniform1f(l,h);break;case"v2":gt.uniform2f(l,h.x,h.y);break;case"v3":gt.uniform3f(l,h.x,h.y,h.z);break;case"v4":gt.uniform4f(l,h.x,h.y,h.z,h.w);break;case"c":gt.uniform3f(l,h.r,h.g,h.b);break;case"iv1":gt.uniform1iv(l,h);break;case"iv":gt.uniform3iv(l,h);break;case"fv1":gt.uniform1fv(l,h);break;case"fv":gt.uniform3fv(l,h);break;case"v2v":void 0===o._array&&(o._array=new Float32Array(2*h.length));for(var c=0,u=h.length;u>c;c++)i=2*c,o._array[i]=h[c].x,o._array[i+1]=h[c].y;gt.uniform2fv(l,o._array);break;case"v3v":void 0===o._array&&(o._array=new Float32Array(3*h.length));for(var c=0,u=h.length;u>c;c++)i=3*c,o._array[i]=h[c].x,o._array[i+1]=h[c].y,o._array[i+2]=h[c].z;gt.uniform3fv(l,o._array);break;case"v4v":void 0===o._array&&(o._array=new Float32Array(4*h.length));for(var c=0,u=h.length;u>c;c++)i=4*c,o._array[i]=h[c].x,o._array[i+1]=h[c].y,o._array[i+2]=h[c].z,o._array[i+3]=h[c].w;gt.uniform4fv(l,o._array);break;case"m3":gt.uniformMatrix3fv(l,!1,h.elements);break;case"m3v":void 0===o._array&&(o._array=new Float32Array(9*h.length));for(var c=0,u=h.length;u>c;c++)h[c].flattenToArrayOffset(o._array,9*c);gt.uniformMatrix3fv(l,!1,o._array);break;case"m4":gt.uniformMatrix4fv(l,!1,h.elements);break;case"m4v":void 0===o._array&&(o._array=new Float32Array(16*h.length));for(var c=0,u=h.length;u>c;c++)h[c].flattenToArrayOffset(o._array,16*c);gt.uniformMatrix4fv(l,!1,o._array);break;case"t":if(t=h,r=te(),gt.uniform1i(l,r),!t)continue;t instanceof THREE.CubeTexture||t.image instanceof Array&&6===t.image.length?ue(t,r):t instanceof THREE.WebGLRenderTargetCube?fe(t,r):ze.setTexture(t,r);break;case"tv":void 0===o._array&&(o._array=[]);for(var c=0,u=o.value.length;u>c;c++)o._array[c]=te();gt.uniform1iv(l,o._array);for(var c=0,u=o.value.length;u>c;c++)t=o.value[c],r=o._array[c],t&&ze.setTexture(t,r);break;default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+s)}}}}function ie(e,t){e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getNormalMatrix(e._modelViewMatrix)}function ne(e,t,r,i){e[t]=r.r*r.r*i,e[t+1]=r.g*r.g*i,e[t+2]=r.b*r.b*i}function ae(e,t,r,i){e[t]=r.r*i,e[t+1]=r.g*i,e[t+2]=r.b*i}function oe(e){var t,r,i,n,a=0,o=0,s=0,h,l,c,u,f,E,p,d=vt,m=d.directional.colors,v=d.directional.positions,g=d.point.colors,T=d.point.positions,y=d.point.distances,R=d.spot.colors,x=d.spot.positions,H=d.spot.distances,b=d.spot.directions,_=d.spot.anglesCos,w=d.spot.exponents,M=d.hemi.skyColors,S=d.hemi.groundColors,C=d.hemi.positions,A=0,L=0,P=0,F=0,D=0,U=0,V=0,z=0,B=0,k=0,N=0,O=0;for(t=0,r=e.length;r>t;t++)if(i=e[t],!i.onlyShadow)if(h=i.color,u=i.intensity,p=i.distance,i instanceof THREE.AmbientLight){if(!i.visible)continue;ze.gammaInput?(a+=h.r*h.r,o+=h.g*h.g,s+=h.b*h.b):(a+=h.r,o+=h.g,s+=h.b)}else if(i instanceof THREE.DirectionalLight){if(D+=1,!i.visible)continue;dt.setFromMatrixPosition(i.matrixWorld),pt.setFromMatrixPosition(i.target.matrixWorld),dt.sub(pt),dt.normalize(),B=3*A,v[B]=dt.x,v[B+1]=dt.y,v[B+2]=dt.z,ze.gammaInput?ne(m,B,h,u*u):ae(m,B,h,u),A+=1}else if(i instanceof THREE.PointLight){if(U+=1,!i.visible)continue;k=3*L,ze.gammaInput?ne(g,k,h,u*u):ae(g,k,h,u),pt.setFromMatrixPosition(i.matrixWorld),T[k]=pt.x,T[k+1]=pt.y,T[k+2]=pt.z,y[L]=p,L+=1}else if(i instanceof THREE.SpotLight){if(V+=1,!i.visible)continue;N=3*P,ze.gammaInput?ne(R,N,h,u*u):ae(R,N,h,u),pt.setFromMatrixPosition(i.matrixWorld),x[N]=pt.x,x[N+1]=pt.y,x[N+2]=pt.z,H[P]=p,dt.copy(pt),pt.setFromMatrixPosition(i.target.matrixWorld),dt.sub(pt),dt.normalize(),b[N]=dt.x,b[N+1]=dt.y,b[N+2]=dt.z,_[P]=Math.cos(i.angle),w[P]=i.exponent,P+=1}else if(i instanceof THREE.HemisphereLight){if(z+=1,!i.visible)continue;dt.setFromMatrixPosition(i.matrixWorld),dt.normalize(),O=3*F,C[O]=dt.x,C[O+1]=dt.y,C[O+2]=dt.z,l=i.color,c=i.groundColor,ze.gammaInput?(f=u*u,ne(M,O,l,f),ne(S,O,c,f)):(ae(M,O,l,u),ae(S,O,c,u)),F+=1}for(t=3*A,r=Math.max(m.length,3*D);r>t;t++)m[t]=0;for(t=3*L,r=Math.max(g.length,3*U);r>t;t++)g[t]=0;for(t=3*P,r=Math.max(R.length,3*V);r>t;t++)R[t]=0;for(t=3*F,r=Math.max(M.length,3*z);r>t;t++)M[t]=0;for(t=3*F,r=Math.max(S.length,3*z);r>t;t++)S[t]=0;d.directional.length=A,d.point.length=L,d.spot.length=P,d.hemi.length=F,d.ambient[0]=a,d.ambient[1]=o,d.ambient[2]=s}function se(e){e!==rt&&(gt.lineWidth(e),rt=e)}function he(e,t,r){$e!==e&&(e?gt.enable(gt.POLYGON_OFFSET_FILL):gt.disable(gt.POLYGON_OFFSET_FILL),$e=e),!e||et===t&&tt===r||(gt.polygonOffset(t,r),et=t,tt=r)}function le(e,t,r){r?(gt.texParameteri(e,gt.TEXTURE_WRAP_S,ve(t.wrapS)),gt.texParameteri(e,gt.TEXTURE_WRAP_T,ve(t.wrapT)),gt.texParameteri(e,gt.TEXTURE_MAG_FILTER,ve(t.magFilter)),gt.texParameteri(e,gt.TEXTURE_MIN_FILTER,ve(t.minFilter))):(gt.texParameteri(e,gt.TEXTURE_WRAP_S,gt.CLAMP_TO_EDGE),gt.texParameteri(e,gt.TEXTURE_WRAP_T,gt.CLAMP_TO_EDGE),gt.texParameteri(e,gt.TEXTURE_MAG_FILTER,me(t.magFilter)),gt.texParameteri(e,gt.TEXTURE_MIN_FILTER,me(t.minFilter))),xt&&t.type!==THREE.FloatType&&(t.anisotropy>1||t.__oldAnisotropy)&&(gt.texParameterf(e,xt.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,At)),t.__oldAnisotropy=t.anisotropy)}function ce(e,t){if(e.width<=t&&e.height<=t)return e;var r=Math.max(e.width,e.height),i=Math.floor(e.width*t/r),n=Math.floor(e.height*t/r),a=document.createElement("canvas");a.width=i,a.height=n;var o=a.getContext("2d");return o.drawImage(e,0,0,e.width,e.height,0,0,i,n),a}function ue(e,t){if(6===e.image.length)if(e.needsUpdate){e.image.__webglTextureCube||(e.addEventListener("dispose",Gt),e.image.__webglTextureCube=gt.createTexture(),ze.info.memory.textures++),gt.activeTexture(gt.TEXTURE0+t),gt.bindTexture(gt.TEXTURE_CUBE_MAP,e.image.__webglTextureCube),gt.pixelStorei(gt.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var r=e instanceof THREE.CompressedTexture,i=[],n=0;6>n;n++)ze.autoScaleCubemaps&&!r?i[n]=ce(e.image[n],Ct):i[n]=e.image[n];var a=i[0],o=THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height),s=ve(e.format),h=ve(e.type);le(gt.TEXTURE_CUBE_MAP,e,o);for(var n=0;6>n;n++)if(r)for(var l,c=i[n].mipmaps,u=0,f=c.length;f>u;u++)l=c[u],e.format!==THREE.RGBAFormat?gt.compressedTexImage2D(gt.TEXTURE_CUBE_MAP_POSITIVE_X+n,u,s,l.width,l.height,0,l.data):gt.texImage2D(gt.TEXTURE_CUBE_MAP_POSITIVE_X+n,u,s,l.width,l.height,0,s,h,l.data);else gt.texImage2D(gt.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,s,s,h,i[n]);e.generateMipmaps&&o&&gt.generateMipmap(gt.TEXTURE_CUBE_MAP),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else gt.activeTexture(gt.TEXTURE0+t),gt.bindTexture(gt.TEXTURE_CUBE_MAP,e.image.__webglTextureCube)}function fe(e,t){gt.activeTexture(gt.TEXTURE0+t),gt.bindTexture(gt.TEXTURE_CUBE_MAP,e.__webglTexture)}function Ee(e,t,r){gt.bindFramebuffer(gt.FRAMEBUFFER,e),gt.framebufferTexture2D(gt.FRAMEBUFFER,gt.COLOR_ATTACHMENT0,r,t.__webglTexture,0)}function pe(e,t){gt.bindRenderbuffer(gt.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(gt.renderbufferStorage(gt.RENDERBUFFER,gt.DEPTH_COMPONENT16,t.width,t.height),gt.framebufferRenderbuffer(gt.FRAMEBUFFER,gt.DEPTH_ATTACHMENT,gt.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(gt.renderbufferStorage(gt.RENDERBUFFER,gt.DEPTH_STENCIL,t.width,t.height),gt.framebufferRenderbuffer(gt.FRAMEBUFFER,gt.DEPTH_STENCIL_ATTACHMENT,gt.RENDERBUFFER,e)):gt.renderbufferStorage(gt.RENDERBUFFER,gt.RGBA4,t.width,t.height)}function de(e){e instanceof THREE.WebGLRenderTargetCube?(gt.bindTexture(gt.TEXTURE_CUBE_MAP,e.__webglTexture),gt.generateMipmap(gt.TEXTURE_CUBE_MAP),gt.bindTexture(gt.TEXTURE_CUBE_MAP,null)):(gt.bindTexture(gt.TEXTURE_2D,e.__webglTexture),gt.generateMipmap(gt.TEXTURE_2D),gt.bindTexture(gt.TEXTURE_2D,null))}function me(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?gt.NEAREST:gt.LINEAR}function ve(e){if(e===THREE.RepeatWrapping)return gt.REPEAT;if(e===THREE.ClampToEdgeWrapping)return gt.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return gt.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return gt.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return gt.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return gt.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return gt.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return gt.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return gt.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return gt.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return gt.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return gt.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return gt.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return gt.BYTE;if(e===THREE.ShortType)return gt.SHORT;if(e===THREE.UnsignedShortType)return gt.UNSIGNED_SHORT;if(e===THREE.IntType)return gt.INT;if(e===THREE.UnsignedIntType)return gt.UNSIGNED_INT;if(e===THREE.FloatType)return gt.FLOAT;if(e===THREE.AlphaFormat)return gt.ALPHA;if(e===THREE.RGBFormat)return gt.RGB;if(e===THREE.RGBAFormat)return gt.RGBA;if(e===THREE.LuminanceFormat)return gt.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return gt.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return gt.FUNC_ADD;if(e===THREE.SubtractEquation)return gt.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return gt.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return gt.ZERO;if(e===THREE.OneFactor)return gt.ONE;if(e===THREE.SrcColorFactor)return gt.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return gt.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return gt.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return gt.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return gt.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return gt.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return gt.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return gt.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return gt.SRC_ALPHA_SATURATE;if(void 0!==Ht){if(e===THREE.RGB_S3TC_DXT1_Format)return Ht.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return Ht.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return Ht.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return Ht.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}function ge(e){if(Pt&&e&&e.skeleton&&e.skeleton.useVertexTexture)return 1024;var t=gt.getParameter(gt.MAX_VERTEX_UNIFORM_VECTORS),r=Math.floor((t-20)/4),i=r;return void 0!==e&&e instanceof THREE.SkinnedMesh&&(i=Math.min(e.skeleton.bones.length,i),i<e.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+e.skeleton.bones.length+", this GPU supports just "+i+" (try OpenGL instead of ANGLE)")),i}function Te(e){for(var t=0,r=0,i=0,n=0,a=0,o=e.length;o>a;a++){var s=e[a];s.onlyShadow||s.visible===!1||(s instanceof THREE.DirectionalLight&&t++,s instanceof THREE.PointLight&&r++,s instanceof THREE.SpotLight&&i++,s instanceof THREE.HemisphereLight&&n++)}return{directional:t,point:r,spot:i,hemi:n}}function ye(e){for(var t=0,r=0,i=e.length;i>r;r++){var n=e[r];n.castShadow&&(n instanceof THREE.SpotLight&&t++,n instanceof THREE.DirectionalLight&&!n.shadowCascade&&t++)}return t}function Re(){try{var e={alpha:we,depth:Me,stencil:Se,antialias:Ce,premultipliedAlpha:Ae,preserveDrawingBuffer:Le};if(gt=be||He.getContext("webgl",e)||He.getContext("experimental-webgl",e),null===gt)throw"Error creating WebGL context."}catch(t){console.error(t)}Tt=gt.getExtension("OES_texture_float"),yt=gt.getExtension("OES_texture_float_linear"),Rt=gt.getExtension("OES_standard_derivatives"),xt=gt.getExtension("EXT_texture_filter_anisotropic")||gt.getExtension("MOZ_EXT_texture_filter_anisotropic")||gt.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),Ht=gt.getExtension("WEBGL_compressed_texture_s3tc")||gt.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||gt.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),bt=gt.getExtension("OES_element_index_uint"),null===Tt&&console.log("THREE.WebGLRenderer: Float textures not supported."),null===Rt&&console.log("THREE.WebGLRenderer: Standard derivatives not supported."),null===xt&&console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),null===Ht&&console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),null===bt&&console.log("THREE.WebGLRenderer: elementindex as unsigned integer not supported."),void 0===gt.getShaderPrecisionFormat&&(gt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),Pe&&(_t=gt.getExtension("EXT_frag_depth"))}function xe(){gt.clearColor(0,0,0,1),gt.clearDepth(1),gt.clearStencil(0),gt.enable(gt.DEPTH_TEST),gt.depthFunc(gt.LEQUAL),gt.frontFace(gt.CCW),gt.cullFace(gt.BACK),gt.enable(gt.CULL_FACE),gt.enable(gt.BLEND),gt.blendEquation(gt.FUNC_ADD),gt.blendFunc(gt.SRC_ALPHA,gt.ONE_MINUS_SRC_ALPHA),gt.viewport(it,nt,at,ot),gt.clearColor(Fe.r,Fe.g,Fe.b,De)}console.log("THREE.WebGLRenderer",THREE.REVISION),e=e||{};var He=void 0!==e.canvas?e.canvas:document.createElement("canvas"),be=void 0!==e.context?e.context:null,_e=void 0!==e.precision?e.precision:"highp",we=void 0!==e.alpha?e.alpha:!1,Me=void 0!==e.depth?e.depth:!0,Se=void 0!==e.stencil?e.stencil:!0,Ce=void 0!==e.antialias?e.antialias:!1,Ae=void 0!==e.premultipliedAlpha?e.premultipliedAlpha:!0,Le=void 0!==e.preserveDrawingBuffer?e.preserveDrawingBuffer:!1,Pe=void 0!==e.logarithmicDepthBuffer?e.logarithmicDepthBuffer:!1,Fe=new THREE.Color(0),De=0,Ue=[],Ve=[];
this.domElement=He,this.context=null,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.gammaInput=!1,this.gammaOutput=!1,this.shadowMapEnabled=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var ze=this,Be=[],ke=null,Ne=null,Oe=-1,Ie=null,Ge=null,We=0,je=-1,Xe=-1,Ye=-1,qe=-1,Ke=-1,Ze=-1,Qe=-1,Je=-1,$e=null,et=null,tt=null,rt=null,it=0,nt=0,at=He.width,ot=He.height,st=0,ht=0,lt=new Uint8Array(16),ct=new Uint8Array(16),ut=new THREE.Frustum,ft=new THREE.Matrix4,Et=new THREE.Matrix4,pt=new THREE.Vector3,dt=new THREE.Vector3,mt=!0,vt={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},gt,Tt,yt,Rt,xt,Ht,bt,_t;Re(),xe(),this.context=gt;var wt=gt.getParameter(gt.MAX_TEXTURE_IMAGE_UNITS),Mt=gt.getParameter(gt.MAX_VERTEX_TEXTURE_IMAGE_UNITS),St=gt.getParameter(gt.MAX_TEXTURE_SIZE),Ct=gt.getParameter(gt.MAX_CUBE_MAP_TEXTURE_SIZE),At=xt?gt.getParameter(xt.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Lt=Mt>0,Pt=Lt&&Tt,Ft=Ht?gt.getParameter(gt.COMPRESSED_TEXTURE_FORMATS):[],Dt=gt.getShaderPrecisionFormat(gt.VERTEX_SHADER,gt.HIGH_FLOAT),Ut=gt.getShaderPrecisionFormat(gt.VERTEX_SHADER,gt.MEDIUM_FLOAT),Vt=gt.getShaderPrecisionFormat(gt.VERTEX_SHADER,gt.LOW_FLOAT),zt=gt.getShaderPrecisionFormat(gt.FRAGMENT_SHADER,gt.HIGH_FLOAT),Bt=gt.getShaderPrecisionFormat(gt.FRAGMENT_SHADER,gt.MEDIUM_FLOAT),kt=gt.getShaderPrecisionFormat(gt.FRAGMENT_SHADER,gt.LOW_FLOAT),Nt=Dt.precision>0&&zt.precision>0,Ot=Ut.precision>0&&Bt.precision>0;"highp"!==_e||Nt||(Ot?(_e="mediump",console.warn("THREE.WebGLRenderer: highp not supported, using mediump.")):(_e="lowp",console.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp."))),"mediump"!==_e||Ot||(_e="lowp",console.warn("THREE.WebGLRenderer: mediump not supported, using lowp.")),this.getContext=function(){return gt},this.supportsVertexTextures=function(){return Lt},this.supportsFloatTextures=function(){return Tt},this.supportsStandardDerivatives=function(){return Rt},this.supportsCompressedTextureS3TC=function(){return Ht},this.getMaxAnisotropy=function(){return At},this.getPrecision=function(){return _e},this.setSize=function(e,t,r){He.width=e*this.devicePixelRatio,He.height=t*this.devicePixelRatio,r!==!1&&(He.style.width=e+"px",He.style.height=t+"px"),this.setViewport(0,0,e,t)},this.setViewport=function(e,t,r,i){it=e*this.devicePixelRatio,nt=t*this.devicePixelRatio,at=r*this.devicePixelRatio,ot=i*this.devicePixelRatio,gt.viewport(it,nt,at,ot)},this.setScissor=function(e,t,r,i){gt.scissor(e*this.devicePixelRatio,t*this.devicePixelRatio,r*this.devicePixelRatio,i*this.devicePixelRatio)},this.enableScissorTest=function(e){e?gt.enable(gt.SCISSOR_TEST):gt.disable(gt.SCISSOR_TEST)},this.setClearColor=function(e,t){Fe.set(e),De=void 0!==t?t:1,gt.clearColor(Fe.r,Fe.g,Fe.b,De)},this.setClearColorHex=function(e,t){console.warn("THREE.WebGLRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(e,t)},this.getClearColor=function(){return Fe},this.getClearAlpha=function(){return De},this.clear=function(e,t,r){var i=0;(void 0===e||e)&&(i|=gt.COLOR_BUFFER_BIT),(void 0===t||t)&&(i|=gt.DEPTH_BUFFER_BIT),(void 0===r||r)&&(i|=gt.STENCIL_BUFFER_BIT),gt.clear(i)},this.clearColor=function(){gt.clear(gt.COLOR_BUFFER_BIT)},this.clearDepth=function(){gt.clear(gt.DEPTH_BUFFER_BIT)},this.clearStencil=function(){gt.clear(gt.STENCIL_BUFFER_BIT)},this.clearTarget=function(e,t,r,i){this.setRenderTarget(e),this.clear(t,r,i)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.updateShadowMap=function(e,t){ke=null,Ye=-1,Qe=-1,Je=-1,Ie=-1,Oe=-1,mt=!0,je=-1,Xe=-1,Qt(e),this.shadowMapPlugin.update(e,t)};var It=function(e){var t=e.target;t.removeEventListener("dispose",It),Yt(t)},Gt=function(e){var t=e.target;t.removeEventListener("dispose",Gt),qt(t),ze.info.memory.textures--},Wt=function(e){var t=e.target;t.removeEventListener("dispose",Wt),Kt(t),ze.info.memory.textures--},jt=function(e){var t=e.target;t.removeEventListener("dispose",jt),Zt(t)},Xt=function(e){if(void 0!==e.__webglVertexBuffer&&gt.deleteBuffer(e.__webglVertexBuffer),void 0!==e.__webglNormalBuffer&&gt.deleteBuffer(e.__webglNormalBuffer),void 0!==e.__webglTangentBuffer&&gt.deleteBuffer(e.__webglTangentBuffer),void 0!==e.__webglColorBuffer&&gt.deleteBuffer(e.__webglColorBuffer),void 0!==e.__webglUVBuffer&&gt.deleteBuffer(e.__webglUVBuffer),void 0!==e.__webglUV2Buffer&&gt.deleteBuffer(e.__webglUV2Buffer),void 0!==e.__webglSkinIndicesBuffer&&gt.deleteBuffer(e.__webglSkinIndicesBuffer),void 0!==e.__webglSkinWeightsBuffer&&gt.deleteBuffer(e.__webglSkinWeightsBuffer),void 0!==e.__webglFaceBuffer&&gt.deleteBuffer(e.__webglFaceBuffer),void 0!==e.__webglLineBuffer&&gt.deleteBuffer(e.__webglLineBuffer),void 0!==e.__webglLineDistanceBuffer&&gt.deleteBuffer(e.__webglLineDistanceBuffer),void 0!==e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)gt.deleteBuffer(e.__webglCustomAttributesList[t].buffer);ze.info.memory.geometries--},Yt=function(e){if(e.__webglInit=void 0,e instanceof THREE.BufferGeometry){var t=e.attributes;for(var r in t)void 0!==t[r].buffer&&gt.deleteBuffer(t[r].buffer);ze.info.memory.geometries--}else if(void 0!==e.geometryGroups)for(var i=0,n=e.geometryGroupsList.length;n>i;i++){var a=e.geometryGroupsList[i];if(void 0!==a.numMorphTargets)for(var o=0,s=a.numMorphTargets;s>o;o++)gt.deleteBuffer(a.__webglMorphTargetsBuffers[o]);if(void 0!==a.numMorphNormals)for(var o=0,s=a.numMorphNormals;s>o;o++)gt.deleteBuffer(a.__webglMorphNormalsBuffers[o]);Xt(a)}else Xt(e)},qt=function(e){if(e.image&&e.image.__webglTextureCube)gt.deleteTexture(e.image.__webglTextureCube);else{if(!e.__webglInit)return;e.__webglInit=!1,gt.deleteTexture(e.__webglTexture)}},Kt=function(e){if(e&&e.__webglTexture)if(gt.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;6>t;t++)gt.deleteFramebuffer(e.__webglFramebuffer[t]),gt.deleteRenderbuffer(e.__webglRenderbuffer[t]);else gt.deleteFramebuffer(e.__webglFramebuffer),gt.deleteRenderbuffer(e.__webglRenderbuffer)},Zt=function(e){var t=e.program.program;if(void 0!==t){e.program=void 0;var r,i,n,a=!1;for(r=0,i=Be.length;i>r;r++)if(n=Be[r],n.program===t){n.usedTimes--,0===n.usedTimes&&(a=!0);break}if(a===!0){var o=[];for(r=0,i=Be.length;i>r;r++)n=Be[r],n.program!==t&&o.push(n);Be=o,gt.deleteProgram(t),ze.info.memory.programs--}}};this.renderBufferImmediate=function(e,t,r){if(T(),e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=gt.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=gt.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=gt.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=gt.createBuffer()),e.hasPositions&&(gt.bindBuffer(gt.ARRAY_BUFFER,e.__webglVertexBuffer),gt.bufferData(gt.ARRAY_BUFFER,e.positionArray,gt.DYNAMIC_DRAW),y(t.attributes.position),gt.vertexAttribPointer(t.attributes.position,3,gt.FLOAT,!1,0,0)),e.hasNormals){if(gt.bindBuffer(gt.ARRAY_BUFFER,e.__webglNormalBuffer),r.shading===THREE.FlatShading){var i,n,a,o,s,h,l,c,u,f,E,p,d,m,v=3*e.count;for(m=0;v>m;m+=9)d=e.normalArray,o=d[m],l=d[m+1],f=d[m+2],s=d[m+3],c=d[m+4],E=d[m+5],h=d[m+6],u=d[m+7],p=d[m+8],i=(o+s+h)/3,n=(l+c+u)/3,a=(f+E+p)/3,d[m]=i,d[m+1]=n,d[m+2]=a,d[m+3]=i,d[m+4]=n,d[m+5]=a,d[m+6]=i,d[m+7]=n,d[m+8]=a}gt.bufferData(gt.ARRAY_BUFFER,e.normalArray,gt.DYNAMIC_DRAW),y(t.attributes.normal),gt.vertexAttribPointer(t.attributes.normal,3,gt.FLOAT,!1,0,0)}e.hasUvs&&r.map&&(gt.bindBuffer(gt.ARRAY_BUFFER,e.__webglUvBuffer),gt.bufferData(gt.ARRAY_BUFFER,e.uvArray,gt.DYNAMIC_DRAW),y(t.attributes.uv),gt.vertexAttribPointer(t.attributes.uv,2,gt.FLOAT,!1,0,0)),e.hasColors&&r.vertexColors!==THREE.NoColors&&(gt.bindBuffer(gt.ARRAY_BUFFER,e.__webglColorBuffer),gt.bufferData(gt.ARRAY_BUFFER,e.colorArray,gt.DYNAMIC_DRAW),y(t.attributes.color),gt.vertexAttribPointer(t.attributes.color,3,gt.FLOAT,!1,0,0)),R(),gt.drawArrays(gt.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,r,i,n,a){if(i.visible!==!1){var o,s,h,l,c,u,f,E=I(e,t,r,i,a),p=E.attributes,d=n.attributes,m=!1,v=i.wireframe?1:0,y=16777215*n.id+2*E.id+v;if(y!==Ie&&(Ie=y,m=!0),m&&T(),a instanceof THREE.Mesh){var R=d.index;if(R){var x,H;R.array instanceof Uint32Array?(x=gt.UNSIGNED_INT,H=4):(x=gt.UNSIGNED_SHORT,H=2);var b=n.offsets;if(0===b.length)m&&(g(i,p,d,0),gt.bindBuffer(gt.ELEMENT_ARRAY_BUFFER,R.buffer)),gt.drawElements(gt.TRIANGLES,R.array.length,x,0),ze.info.render.calls++,ze.info.render.vertices+=R.array.length,ze.info.render.faces+=R.array.length/3;else{m=!0;for(var _=0,w=b.length;w>_;_++){var M=b[_].index;m&&(g(i,p,d,M),gt.bindBuffer(gt.ELEMENT_ARRAY_BUFFER,R.buffer)),gt.drawElements(gt.TRIANGLES,b[_].count,x,b[_].start*H),ze.info.render.calls++,ze.info.render.vertices+=b[_].count,ze.info.render.faces+=b[_].count/3}}}else{m&&g(i,p,d,0);var S=n.attributes.position;gt.drawArrays(gt.TRIANGLES,0,S.array.length/3),ze.info.render.calls++,ze.info.render.vertices+=S.array.length/3,ze.info.render.faces+=S.array.length/9}}else if(a instanceof THREE.PointCloud){m&&g(i,p,d,0);var S=d.position;gt.drawArrays(gt.POINTS,0,S.array.length/3),ze.info.render.calls++,ze.info.render.points+=S.array.length/3}else if(a instanceof THREE.Line){var C=a.type===THREE.LineStrip?gt.LINE_STRIP:gt.LINES;se(i.linewidth);var R=d.index;if(R){var x,H;R.array instanceof Uint32Array?(x=gt.UNSIGNED_INT,H=4):(x=gt.UNSIGNED_SHORT,H=2);var b=n.offsets;if(0===b.length)m&&(g(i,p,d,0),gt.bindBuffer(gt.ELEMENT_ARRAY_BUFFER,R.buffer)),gt.drawElements(C,R.array.length,x,0),ze.info.render.calls++,ze.info.render.vertices+=R.array.length;else{b.length>1&&(m=!0);for(var _=0,w=b.length;w>_;_++){var M=b[_].index;m&&(g(i,p,d,M),gt.bindBuffer(gt.ELEMENT_ARRAY_BUFFER,R.buffer)),gt.drawElements(C,b[_].count,x,b[_].start*H),ze.info.render.calls++,ze.info.render.vertices+=b[_].count}}}else{m&&g(i,p,d,0);var S=d.position;gt.drawArrays(C,0,S.array.length/3),ze.info.render.calls++,ze.info.render.points+=S.array.length/3}}}},this.renderBuffer=function(e,t,r,i,n,a){if(i.visible!==!1){var o,s,h,l,c,u=I(e,t,r,i,a),f=u.attributes,E=!1,p=i.wireframe?1:0,d=16777215*n.id+2*u.id+p;if(d!==Ie&&(Ie=d,E=!0),E&&T(),!i.morphTargets&&f.position>=0?E&&(gt.bindBuffer(gt.ARRAY_BUFFER,n.__webglVertexBuffer),y(f.position),gt.vertexAttribPointer(f.position,3,gt.FLOAT,!1,0,0)):a.morphTargetBase&&x(i,n,a),E){if(n.__webglCustomAttributesList)for(l=0,c=n.__webglCustomAttributesList.length;c>l;l++)h=n.__webglCustomAttributesList[l],f[h.buffer.belongsToAttribute]>=0&&(gt.bindBuffer(gt.ARRAY_BUFFER,h.buffer),y(f[h.buffer.belongsToAttribute]),gt.vertexAttribPointer(f[h.buffer.belongsToAttribute],h.size,gt.FLOAT,!1,0,0));f.color>=0&&(a.geometry.colors.length>0||a.geometry.faces.length>0?(gt.bindBuffer(gt.ARRAY_BUFFER,n.__webglColorBuffer),y(f.color),gt.vertexAttribPointer(f.color,3,gt.FLOAT,!1,0,0)):i.defaultAttributeValues&&gt.vertexAttrib3fv(f.color,i.defaultAttributeValues.color)),f.normal>=0&&(gt.bindBuffer(gt.ARRAY_BUFFER,n.__webglNormalBuffer),y(f.normal),gt.vertexAttribPointer(f.normal,3,gt.FLOAT,!1,0,0)),f.tangent>=0&&(gt.bindBuffer(gt.ARRAY_BUFFER,n.__webglTangentBuffer),y(f.tangent),gt.vertexAttribPointer(f.tangent,4,gt.FLOAT,!1,0,0)),f.uv>=0&&(a.geometry.faceVertexUvs[0]?(gt.bindBuffer(gt.ARRAY_BUFFER,n.__webglUVBuffer),y(f.uv),gt.vertexAttribPointer(f.uv,2,gt.FLOAT,!1,0,0)):i.defaultAttributeValues&&gt.vertexAttrib2fv(f.uv,i.defaultAttributeValues.uv)),f.uv2>=0&&(a.geometry.faceVertexUvs[1]?(gt.bindBuffer(gt.ARRAY_BUFFER,n.__webglUV2Buffer),y(f.uv2),gt.vertexAttribPointer(f.uv2,2,gt.FLOAT,!1,0,0)):i.defaultAttributeValues&&gt.vertexAttrib2fv(f.uv2,i.defaultAttributeValues.uv2)),i.skinning&&f.skinIndex>=0&&f.skinWeight>=0&&(gt.bindBuffer(gt.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),y(f.skinIndex),gt.vertexAttribPointer(f.skinIndex,4,gt.FLOAT,!1,0,0),gt.bindBuffer(gt.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),y(f.skinWeight),gt.vertexAttribPointer(f.skinWeight,4,gt.FLOAT,!1,0,0)),f.lineDistance>=0&&(gt.bindBuffer(gt.ARRAY_BUFFER,n.__webglLineDistanceBuffer),y(f.lineDistance),gt.vertexAttribPointer(f.lineDistance,1,gt.FLOAT,!1,0,0))}if(R(),a instanceof THREE.Mesh){var m=n.__typeArray===Uint32Array?gt.UNSIGNED_INT:gt.UNSIGNED_SHORT;i.wireframe?(se(i.wireframeLinewidth),E&&gt.bindBuffer(gt.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer),gt.drawElements(gt.LINES,n.__webglLineCount,m,0)):(E&&gt.bindBuffer(gt.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer),gt.drawElements(gt.TRIANGLES,n.__webglFaceCount,m,0)),ze.info.render.calls++,ze.info.render.vertices+=n.__webglFaceCount,ze.info.render.faces+=n.__webglFaceCount/3}else if(a instanceof THREE.Line){var v=a.type===THREE.LineStrip?gt.LINE_STRIP:gt.LINES;se(i.linewidth),gt.drawArrays(v,0,n.__webglLineCount),ze.info.render.calls++}else a instanceof THREE.PointCloud&&(gt.drawArrays(gt.POINTS,0,n.__webglParticleCount),ze.info.render.calls++,ze.info.render.points+=n.__webglParticleCount)}},this.render=function(e,t,r,i){function n(e){e instanceof THREE.SkinnedMesh&&e.skeleton.update();for(var t=0,r=e.children.length;r>t;t++)n(e.children[t])}if(t instanceof THREE.Camera==!1)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");var a,o,s,h,l,c=e.__lights,u=e.fog;for(Oe=-1,Ge=null,mt=!0,e.autoUpdate===!0&&e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),n(e),t.matrixWorldInverse.getInverse(t.matrixWorld),ft.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),ut.setFromMatrix(ft),Qt(e),Ue.length=0,Ve.length=0,w(e,e,t),ze.sortObjects===!0&&(Ue.sort(H),Ve.sort(b)),M(this.renderPluginsPre,e,t),ze.info.render.calls=0,ze.info.render.vertices=0,ze.info.render.faces=0,ze.info.render.points=0,this.setRenderTarget(r),(this.autoClear||i)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),l=e.__webglObjectsImmediate,a=0,o=l.length;o>a;a++)s=l[a],h=s.object,h.visible&&(ie(h,t),A(s));if(e.overrideMaterial){var f=e.overrideMaterial;this.setBlending(f.blending,f.blendEquation,f.blendSrc,f.blendDst),this.setDepthTest(f.depthTest),this.setDepthWrite(f.depthWrite),he(f.polygonOffset,f.polygonOffsetFactor,f.polygonOffsetUnits),S(Ue,t,c,u,!0,f),S(Ve,t,c,u,!0,f),C(e.__webglObjectsImmediate,"",t,c,u,!1,f)}else{var f=null;this.setBlending(THREE.NoBlending),S(Ue,t,c,u,!1,f),C(e.__webglObjectsImmediate,"opaque",t,c,u,!1,f),S(Ve,t,c,u,!0,f),C(e.__webglObjectsImmediate,"transparent",t,c,u,!0,f)}M(this.renderPluginsPost,e,t),r&&r.generateMipmaps&&r.minFilter!==THREE.NearestFilter&&r.minFilter!==THREE.LinearFilter&&de(r),this.setDepthTest(!0),this.setDepthWrite(!0)},this.renderImmediateObject=function(e,t,r,i,n){var a=I(e,t,r,i,n);Ie=-1,ze.setMaterialFaces(i),n.immediateRenderCallback?n.immediateRenderCallback(a,gt,ut):n.render(function(e){ze.renderBufferImmediate(e,a,i)})};var Qt=function(e){for(e.__webglObjects||(e.__webglObjects={},e.__webglObjectsImmediate=[]);e.__objectsAdded.length;)P(e.__objectsAdded[0],e),e.__objectsAdded.splice(0,1);for(;e.__objectsRemoved.length;)k(e.__objectsRemoved[0],e),e.__objectsRemoved.splice(0,1)};this.initMaterial=function(e,t,r,i){e.addEventListener("dispose",jt);var n,a,o,s,h,l,c,u,f;if(e instanceof THREE.MeshDepthMaterial?f="depth":e instanceof THREE.MeshNormalMaterial?f="normal":e instanceof THREE.MeshBasicMaterial?f="basic":e instanceof THREE.MeshLambertMaterial?f="lambert":e instanceof THREE.MeshPhongMaterial?f="phong":e instanceof THREE.LineBasicMaterial?f="basic":e instanceof THREE.LineDashedMaterial?f="dashed":e instanceof THREE.PointCloudMaterial&&(f="particle_basic"),f){var E=THREE.ShaderLib[f];e.__webglShader={uniforms:THREE.UniformsUtils.clone(E.uniforms),vertexShader:E.vertexShader,fragmentShader:E.fragmentShader}}else e.__webglShader={uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};l=Te(t),u=ye(t),c=ge(i),h={precision:_e,supportsVertexTextures:Lt,map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,vertexColors:e.vertexColors,fog:r,useFog:e.fog,fogExp:r instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:Pe,skinning:e.skinning,maxBones:c,useVertexTexture:Pt&&i&&i.skeleton&&i.skeleton.useVertexTexture,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:l.directional,maxPointLights:l.point,maxSpotLights:l.spot,maxHemiLights:l.hemi,maxShadows:u,shadowMapEnabled:this.shadowMapEnabled&&i.receiveShadow&&u>0,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide};var p=[];f?p.push(f):(p.push(e.fragmentShader),p.push(e.vertexShader));for(var d in e.defines)p.push(d),p.push(e.defines[d]);for(var m in h)p.push(m),p.push(h[m]);for(var v=p.join(),g,m=0,T=Be.length;T>m;m++){var y=Be[m];if(y.code===v){g=y,g.usedTimes++;break}}void 0===g&&(g=new THREE.WebGLProgram(this,v,e,h),Be.push(g),ze.info.memory.programs=Be.length),e.program=g;var R=e.program.attributes;if(e.morphTargets){e.numSupportedMorphTargets=0;var x,H="morphTarget";for(s=0;s<this.maxMorphTargets;s++)x=H+s,R[x]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;var x,H="morphNormal";for(s=0;s<this.maxMorphNormals;s++)x=H+s,R[x]>=0&&e.numSupportedMorphNormals++}e.uniformsList=[];for(n in e.__webglShader.uniforms){var b=e.program.uniforms[n];b&&e.uniformsList.push([e.__webglShader.uniforms[n],b])}},this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?gt.disable(gt.CULL_FACE):(t===THREE.FrontFaceDirectionCW?gt.frontFace(gt.CW):gt.frontFace(gt.CCW),e===THREE.CullFaceBack?gt.cullFace(gt.BACK):e===THREE.CullFaceFront?gt.cullFace(gt.FRONT):gt.cullFace(gt.FRONT_AND_BACK),gt.enable(gt.CULL_FACE))},this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide,r=e.side===THREE.BackSide;je!==t&&(t?gt.disable(gt.CULL_FACE):gt.enable(gt.CULL_FACE),je=t),Xe!==r&&(r?gt.frontFace(gt.CW):gt.frontFace(gt.CCW),Xe=r)},this.setDepthTest=function(e){Qe!==e&&(e?gt.enable(gt.DEPTH_TEST):gt.disable(gt.DEPTH_TEST),Qe=e)},this.setDepthWrite=function(e){Je!==e&&(gt.depthMask(e),Je=e)},this.setBlending=function(e,t,r,i){e!==Ye&&(e===THREE.NoBlending?gt.disable(gt.BLEND):e===THREE.AdditiveBlending?(gt.enable(gt.BLEND),gt.blendEquation(gt.FUNC_ADD),gt.blendFunc(gt.SRC_ALPHA,gt.ONE)):e===THREE.SubtractiveBlending?(gt.enable(gt.BLEND),gt.blendEquation(gt.FUNC_ADD),gt.blendFunc(gt.ZERO,gt.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(gt.enable(gt.BLEND),gt.blendEquation(gt.FUNC_ADD),gt.blendFunc(gt.ZERO,gt.SRC_COLOR)):e===THREE.CustomBlending?gt.enable(gt.BLEND):(gt.enable(gt.BLEND),gt.blendEquationSeparate(gt.FUNC_ADD,gt.FUNC_ADD),gt.blendFuncSeparate(gt.SRC_ALPHA,gt.ONE_MINUS_SRC_ALPHA,gt.ONE,gt.ONE_MINUS_SRC_ALPHA)),Ye=e),e===THREE.CustomBlending?(t!==qe&&(gt.blendEquation(ve(t)),qe=t),(r!==Ke||i!==Ze)&&(gt.blendFunc(ve(r),ve(i)),Ke=r,Ze=i)):(qe=null,Ke=null,Ze=null)},this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.addEventListener("dispose",Gt),e.__webglTexture=gt.createTexture(),ze.info.memory.textures++),gt.activeTexture(gt.TEXTURE0+t),gt.bindTexture(gt.TEXTURE_2D,e.__webglTexture),gt.pixelStorei(gt.UNPACK_FLIP_Y_WEBGL,e.flipY),gt.pixelStorei(gt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),gt.pixelStorei(gt.UNPACK_ALIGNMENT,e.unpackAlignment);var r=e.image,i=THREE.Math.isPowerOfTwo(r.width)&&THREE.Math.isPowerOfTwo(r.height),n=ve(e.format),a=ve(e.type);le(gt.TEXTURE_2D,e,i);var o,s=e.mipmaps;if(e instanceof THREE.DataTexture)if(s.length>0&&i){for(var h=0,l=s.length;l>h;h++)o=s[h],gt.texImage2D(gt.TEXTURE_2D,h,n,o.width,o.height,0,n,a,o.data);e.generateMipmaps=!1}else gt.texImage2D(gt.TEXTURE_2D,0,n,r.width,r.height,0,n,a,r.data);else if(e instanceof THREE.CompressedTexture)for(var h=0,l=s.length;l>h;h++)o=s[h],e.format!==THREE.RGBAFormat?gt.compressedTexImage2D(gt.TEXTURE_2D,h,n,o.width,o.height,0,o.data):gt.texImage2D(gt.TEXTURE_2D,h,n,o.width,o.height,0,n,a,o.data);else if(s.length>0&&i){for(var h=0,l=s.length;l>h;h++)o=s[h],gt.texImage2D(gt.TEXTURE_2D,h,n,n,a,o);e.generateMipmaps=!1}else gt.texImage2D(gt.TEXTURE_2D,0,n,n,a,e.image);e.generateMipmaps&&i&&gt.generateMipmap(gt.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else gt.activeTexture(gt.TEXTURE0+t),gt.bindTexture(gt.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.addEventListener("dispose",Wt),e.__webglTexture=gt.createTexture(),ze.info.memory.textures++;var r=THREE.Math.isPowerOfTwo(e.width)&&THREE.Math.isPowerOfTwo(e.height),i=ve(e.format),n=ve(e.type);if(t){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],gt.bindTexture(gt.TEXTURE_CUBE_MAP,e.__webglTexture),le(gt.TEXTURE_CUBE_MAP,e,r);for(var a=0;6>a;a++)e.__webglFramebuffer[a]=gt.createFramebuffer(),e.__webglRenderbuffer[a]=gt.createRenderbuffer(),gt.texImage2D(gt.TEXTURE_CUBE_MAP_POSITIVE_X+a,0,i,e.width,e.height,0,i,n,null),Ee(e.__webglFramebuffer[a],e,gt.TEXTURE_CUBE_MAP_POSITIVE_X+a),pe(e.__webglRenderbuffer[a],e);r&&gt.generateMipmap(gt.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=gt.createFramebuffer(),e.shareDepthFrom?e.__webglRenderbuffer=e.shareDepthFrom.__webglRenderbuffer:e.__webglRenderbuffer=gt.createRenderbuffer(),gt.bindTexture(gt.TEXTURE_2D,e.__webglTexture),le(gt.TEXTURE_2D,e,r),gt.texImage2D(gt.TEXTURE_2D,0,i,e.width,e.height,0,i,n,null),Ee(e.__webglFramebuffer,e,gt.TEXTURE_2D),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?gt.framebufferRenderbuffer(gt.FRAMEBUFFER,gt.DEPTH_ATTACHMENT,gt.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&gt.framebufferRenderbuffer(gt.FRAMEBUFFER,gt.DEPTH_STENCIL_ATTACHMENT,gt.RENDERBUFFER,e.__webglRenderbuffer):pe(e.__webglRenderbuffer,e),r&&gt.generateMipmap(gt.TEXTURE_2D);t?gt.bindTexture(gt.TEXTURE_CUBE_MAP,null):gt.bindTexture(gt.TEXTURE_2D,null),gt.bindRenderbuffer(gt.RENDERBUFFER,null),gt.bindFramebuffer(gt.FRAMEBUFFER,null)}var o,s,h,l,c;e?(o=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,s=e.width,h=e.height,l=0,c=0):(o=null,s=at,h=ot,l=it,c=nt),o!==Ne&&(gt.bindFramebuffer(gt.FRAMEBUFFER,o),gt.viewport(l,c,s,h),Ne=o),st=s,ht=h},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(e,t,r){this.width=e,this.height=t,r=r||{},this.wrapS=void 0!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==r.magFilter?r.magFilter:THREE.LinearFilter,this.minFilter=void 0!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==r.format?r.format:THREE.RGBAFormat,this.type=void 0!==r.type?r.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==r.depthBuffer?r.depthBuffer:!0,this.stencilBuffer=void 0!==r.stencilBuffer?r.stencilBuffer:!0,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(e,t){this.width=e,this.height=t},clone:function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e.shareDepthFrom=this.shareDepthFrom,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(e,t,r){THREE.WebGLRenderTarget.call(this,e,t,r),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.WebGLProgram=function(){var e=0,t=function(e){var t,r,i=[];for(var n in e)t=e[n],t!==!1&&(r="#define "+n+" "+t,i.push(r));return i.join("\n")},r=function(e,t,r){for(var i={},n=0,a=r.length;a>n;n++){var o=r[n];i[o]=e.getUniformLocation(t,o)}return i},i=function(e,t,r){for(var i={},n=0,a=r.length;a>n;n++){var o=r[n];i[o]=e.getAttribLocation(t,o)}return i};return function(n,a,o,s){var h=n,l=h.context,c=o.defines,u=o.__webglShader.uniforms,f=o.attributes,E=o.__webglShader.vertexShader,p=o.__webglShader.fragmentShader,d=o.index0AttributeName;void 0===d&&s.morphTargets===!0&&(d="position");var m="SHADOWMAP_TYPE_BASIC";s.shadowMapType===THREE.PCFShadowMap?m="SHADOWMAP_TYPE_PCF":s.shadowMapType===THREE.PCFSoftShadowMap&&(m="SHADOWMAP_TYPE_PCF_SOFT");var v=t(c),g=l.createProgram(),T,y;o instanceof THREE.RawShaderMaterial?(T="",y=""):(T=["precision "+s.precision+" float;","precision "+s.precision+" int;",v,s.supportsVertexTextures?"#define VERTEX_TEXTURES":"",h.gammaInput?"#define GAMMA_INPUT":"",h.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,"#define MAX_SPOT_LIGHTS "+s.maxSpotLights,"#define MAX_HEMI_LIGHTS "+s.maxHemiLights,"#define MAX_SHADOWS "+s.maxShadows,"#define MAX_BONES "+s.maxBones,s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.lightMap?"#define USE_LIGHTMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.alphaMap?"#define USE_ALPHAMAP":"",s.vertexColors?"#define USE_COLOR":"",s.skinning?"#define USE_SKINNING":"",s.useVertexTexture?"#define BONE_TEXTURE":"",s.morphTargets?"#define USE_MORPHTARGETS":"",s.morphNormals?"#define USE_MORPHNORMALS":"",s.wrapAround?"#define WRAP_AROUND":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+m:"",s.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",s.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",s.sizeAttenuation?"#define USE_SIZEATTENUATION":"",s.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",""].join("\n"),y=["precision "+s.precision+" float;","precision "+s.precision+" int;",s.bumpMap||s.normalMap?"#extension GL_OES_standard_derivatives : enable":"",v,"#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,"#define MAX_SPOT_LIGHTS "+s.maxSpotLights,"#define MAX_HEMI_LIGHTS "+s.maxHemiLights,"#define MAX_SHADOWS "+s.maxShadows,s.alphaTest?"#define ALPHATEST "+s.alphaTest:"",h.gammaInput?"#define GAMMA_INPUT":"",h.gammaOutput?"#define GAMMA_OUTPUT":"",s.useFog&&s.fog?"#define USE_FOG":"",s.useFog&&s.fogExp?"#define FOG_EXP2":"",s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.lightMap?"#define USE_LIGHTMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.alphaMap?"#define USE_ALPHAMAP":"",s.vertexColors?"#define USE_COLOR":"",s.metal?"#define METAL":"",s.wrapAround?"#define WRAP_AROUND":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+m:"",s.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",s.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",s.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"));var R=new THREE.WebGLShader(l,l.VERTEX_SHADER,T+E),x=new THREE.WebGLShader(l,l.FRAGMENT_SHADER,y+p);l.attachShader(g,R),l.attachShader(g,x),void 0!==d&&l.bindAttribLocation(g,0,d),l.linkProgram(g),l.getProgramParameter(g,l.LINK_STATUS)===!1&&(console.error("THREE.WebGLProgram: Could not initialise shader."),console.error("gl.VALIDATE_STATUS",l.getProgramParameter(g,l.VALIDATE_STATUS)),console.error("gl.getError()",l.getError())),""!==l.getProgramInfoLog(g)&&console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",l.getProgramInfoLog(g)),l.deleteShader(R),l.deleteShader(x);var H=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences","bindMatrix","bindMatrixInverse"];s.useVertexTexture?(H.push("boneTexture"),H.push("boneTextureWidth"),H.push("boneTextureHeight")):H.push("boneGlobalMatrices"),s.logarithmicDepthBuffer&&H.push("logDepthBufFC");for(var b in u)H.push(b);this.uniforms=r(l,g,H),H=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"];for(var _=0;_<s.maxMorphTargets;_++)H.push("morphTarget"+_);for(var _=0;_<s.maxMorphNormals;_++)H.push("morphNormal"+_);for(var w in f)H.push(w);return this.attributes=i(l,g,H),this.id=e++,this.code=a,this.usedTimes=1,this.program=g,this.vertexShader=R,this.fragmentShader=x,this}}(),THREE.WebGLShader=function(){var e=function(e){for(var t=e.split("\n"),r=0;r<t.length;r++)t[r]=r+1+": "+t[r];return t.join("\n")};return function(t,r,i){var n=t.createShader(r);return t.shaderSource(n,i),t.compileShader(n),t.getShaderParameter(n,t.COMPILE_STATUS)===!1&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==t.getShaderInfoLog(n)&&(console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",t.getShaderInfoLog(n)),console.warn(e(i))),n}}(),THREE.RenderableVertex=function(){this.position=new THREE.Vector3,this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableFace=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.normalModel=new THREE.Vector3,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.color=new THREE.Color,this.material=null,this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2],this.z=0},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0},THREE.RenderableSprite=function(){
this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=0,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0},THREE.GeometryUtils={merge:function(e,t,r){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var i;t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),i=t.matrix,t=t.geometry),e.merge(t,i,r)},center:function(e){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),e.center()}},THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(e,t,r,i){var n=new THREE.ImageLoader;n.crossOrigin=this.crossOrigin;var a=new THREE.Texture(void 0,t);return n.load(e,function(e){a.image=e,a.needsUpdate=!0,r&&r(a)},void 0,function(e){i&&i(e)}),a.sourceFile=e,a},loadTextureCube:function(e,t,r,i){var n=[],a=new THREE.ImageLoader;a.crossOrigin=this.crossOrigin;var o=new THREE.CubeTexture(n,t);o.flipY=!1;for(var s=0,h=function(t){a.load(e[t],function(e){o.images[t]=e,s+=1,6===s&&(o.needsUpdate=!0,r&&r(o))})},l=0,c=e.length;c>l;++l)h(l);return o},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},getNormalMap:function(e,t){var r=function(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]},i=function(e,t){return[e[0]-t[0],e[1]-t[1],e[2]-t[2]]},n=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]};t=1|t;var a=e.width,o=e.height,s=document.createElement("canvas");s.width=a,s.height=o;var h=s.getContext("2d");h.drawImage(e,0,0);for(var l=h.getImageData(0,0,a,o).data,c=h.createImageData(a,o),u=c.data,f=0;a>f;f++)for(var E=0;o>E;E++){var p=0>E-1?0:E-1,d=E+1>o-1?o-1:E+1,m=0>f-1?0:f-1,v=f+1>a-1?a-1:f+1,g=[],T=[0,0,l[4*(E*a+f)]/255*t];g.push([-1,0,l[4*(E*a+m)]/255*t]),g.push([-1,-1,l[4*(p*a+m)]/255*t]),g.push([0,-1,l[4*(p*a+f)]/255*t]),g.push([1,-1,l[4*(p*a+v)]/255*t]),g.push([1,0,l[4*(E*a+v)]/255*t]),g.push([1,1,l[4*(d*a+v)]/255*t]),g.push([0,1,l[4*(d*a+f)]/255*t]),g.push([-1,1,l[4*(d*a+m)]/255*t]);for(var y=[],R=g.length,x=0;R>x;x++){var H=g[x],b=g[(x+1)%R];H=i(H,T),b=i(b,T),y.push(n(r(H,b)))}for(var _=[0,0,0],x=0;x<y.length;x++)_[0]+=y[x][0],_[1]+=y[x][1],_[2]+=y[x][2];_[0]/=y.length,_[1]/=y.length,_[2]/=y.length;var w=4*(E*a+f);u[w]=(_[0]+1)/2*255|0,u[w+1]=(_[1]+1)/2*255|0,u[w+2]=255*_[2]|0,u[w+3]=255}return h.putImageData(c,0,0),s},generateDataTexture:function(e,t,r){for(var i=e*t,n=new Uint8Array(3*i),a=Math.floor(255*r.r),o=Math.floor(255*r.g),s=Math.floor(255*r.b),h=0;i>h;h++)n[3*h]=a,n[3*h+1]=o,n[3*h+2]=s;var l=new THREE.DataTexture(n,e,t,THREE.RGBFormat);return l.needsUpdate=!0,l}},THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var r=new THREE.Object3D,i=0,n=t.length;n>i;i++)r.add(new THREE.Mesh(e,t[i]));return r},detach:function(e,t,r){e.applyMatrix(t.matrixWorld),t.remove(e),r.add(e)},attach:function(e,t,r){var i=new THREE.Matrix4;i.getInverse(r.matrixWorld),e.applyMatrix(i),t.remove(e),r.add(e)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){try{return this.faces[this.face][this.weight][this.style]}catch(e){throw"The font "+this.face+" with "+this.weight+" weight and "+this.style+" style is missing."}},loadFace:function(e){var t=e.familyName.toLowerCase(),r=this;r.faces[t]=r.faces[t]||{},r.faces[t][e.cssFontWeight]=r.faces[t][e.cssFontWeight]||{},r.faces[t][e.cssFontWeight][e.cssFontStyle]=e;var i=r.faces[t][e.cssFontWeight][e.cssFontStyle]=e;return e},drawText:function(e){var t=[],r=[],i,n,a=this.getFace(),o=this.size/a.resolution,s=0,h=String(e).split(""),l=h.length,c=[];for(i=0;l>i;i++){var u=new THREE.Path,f=this.extractGlyphPoints(h[i],a,o,s,u);s+=f.offset,c.push(f.path)}var E=s/2;return{paths:c,offset:E}},extractGlyphPoints:function(e,t,r,i,n){var a=[],o,s,h,l,c,u,f,E,p,d,m,v,g,T,y,R,x,H,b,_=t.glyphs[e]||t.glyphs["?"];if(_){if(_.o)for(l=_._cachedOutline||(_._cachedOutline=_.o.split(" ")),u=l.length,f=r,E=r,o=0;u>o;)switch(c=l[o++]){case"m":p=l[o++]*f+i,d=l[o++]*E,n.moveTo(p,d);break;case"l":p=l[o++]*f+i,d=l[o++]*E,n.lineTo(p,d);break;case"q":if(m=l[o++]*f+i,v=l[o++]*E,y=l[o++]*f+i,R=l[o++]*E,n.quadraticCurveTo(y,R,m,v),b=a[a.length-1])for(g=b.x,T=b.y,s=1,h=this.divisions;h>=s;s++)var w=s/h,M=THREE.Shape.Utils.b2(w,g,y,m),S=THREE.Shape.Utils.b2(w,T,R,v);break;case"b":if(m=l[o++]*f+i,v=l[o++]*E,y=l[o++]*f+i,R=l[o++]*E,x=l[o++]*f+i,H=l[o++]*E,n.bezierCurveTo(y,R,x,H,m,v),b=a[a.length-1])for(g=b.x,T=b.y,s=1,h=this.divisions;h>=s;s++)var w=s/h,M=THREE.Shape.Utils.b3(w,g,y,x,m),S=THREE.Shape.Utils.b3(w,T,R,H,v)}return{offset:_.ha*r,path:n}}}},THREE.FontUtils.generateShapes=function(e,t){t=t||{};var r=void 0!==t.size?t.size:100,i=void 0!==t.curveSegments?t.curveSegments:4,n=void 0!==t.font?t.font:"helvetiker",a=void 0!==t.weight?t.weight:"normal",o=void 0!==t.style?t.style:"normal";THREE.FontUtils.size=r,THREE.FontUtils.divisions=i,THREE.FontUtils.face=n,THREE.FontUtils.weight=a,THREE.FontUtils.style=o;for(var s=THREE.FontUtils.drawText(e),h=s.paths,l=[],c=0,u=h.length;u>c;c++)Array.prototype.push.apply(l,h[c].toShapes());return l},function(e){var t=1e-10,r=function(e,t){var r=e.length;if(3>r)return null;var a=[],o=[],s=[],h,l,c;if(i(e)>0)for(l=0;r>l;l++)o[l]=l;else for(l=0;r>l;l++)o[l]=r-1-l;var u=r,f=2*u;for(l=u-1;u>2;){if(f--<=0)return console.log("Warning, unable to triangulate polygon!"),t?s:a;if(h=l,h>=u&&(h=0),l=h+1,l>=u&&(l=0),c=l+1,c>=u&&(c=0),n(e,h,l,c,u,o)){var E,p,d,m,v;for(E=o[h],p=o[l],d=o[c],a.push([e[E],e[p],e[d]]),s.push([o[h],o[l],o[c]]),m=l,v=l+1;u>v;m++,v++)o[m]=o[v];u--,f=2*u}}return t?s:a},i=function(e){for(var t=e.length,r=0,i=t-1,n=0;t>n;i=n++)r+=e[i].x*e[n].y-e[n].x*e[i].y;return.5*r},n=function(e,r,i,n,a,o){var s,h,l,c,u,f,E,p,d;if(h=e[o[r]].x,l=e[o[r]].y,c=e[o[i]].x,u=e[o[i]].y,f=e[o[n]].x,E=e[o[n]].y,t>(c-h)*(E-l)-(u-l)*(f-h))return!1;var m,v,g,T,y,R,x,H,b,_,w,M,S,C,A;for(m=f-c,v=E-u,g=h-f,T=l-E,y=c-h,R=u-l,s=0;a>s;s++)if(p=e[o[s]].x,d=e[o[s]].y,!(p===h&&d===l||p===c&&d===u||p===f&&d===E)&&(x=p-h,H=d-l,b=p-c,_=d-u,w=p-f,M=d-E,A=m*_-v*b,S=y*H-R*x,C=g*M-T*w,A>=-t&&C>=-t&&S>=-t))return!1;return!0};return e.Triangulate=r,e.Triangulate.area=i,e}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.typeface_js=self._typeface_js,THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(e){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(e){var t=this.getUtoTmapping(e);return this.getPoint(t)},THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,r=[];for(t=0;e>=t;t++)r.push(this.getPoint(t/e));return r},THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,r=[];for(t=0;e>=t;t++)r.push(this.getPointAt(t/e));return r},THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]},THREE.Curve.prototype.getLengths=function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t=[],r,i=this.getPoint(0),n,a=0;for(t.push(0),n=1;e>=n;n++)r=this.getPoint(n/e),a+=r.distanceTo(i),t.push(a),i=r;return this.cacheArcLengths=t,t},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(e,t){var r=this.getLengths(),i=0,n=r.length,a;a=t?t:e*r[n-1];for(var o=0,s=n-1,h;s>=o;)if(i=Math.floor(o+(s-o)/2),h=r[i]-a,0>h)o=i+1;else{if(!(h>0)){s=i;break}s=i-1}if(i=s,r[i]==a){var l=i/(n-1);return l}var c=r[i],u=r[i+1],f=u-c,E=(a-c)/f,l=(i+E)/(n-1);return l},THREE.Curve.prototype.getTangent=function(e){var t=1e-4,r=e-t,i=e+t;0>r&&(r=0),i>1&&(i=1);var n=this.getPoint(r),a=this.getPoint(i),o=a.clone().sub(n);return o.normalize()},THREE.Curve.prototype.getTangentAt=function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)},THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,r,i){return 2*(1-e)*(r-t)+2*e*(i-r)},tangentCubicBezier:function(e,t,r,i,n){return-3*t*(1-e)*(1-e)+3*r*(1-e)*(1-e)-6*e*r*(1-e)+6*e*i*(1-e)-3*e*e*i+3*e*e*n},tangentSpline:function(e,t,r,i,n){var a=6*e*e-6*e,o=3*e*e-4*e+1,s=-6*e*e+6*e,h=3*e*e-2*e;return a+o+s+h},interpolate:function(e,t,r,i,n){var a=.5*(r-e),o=.5*(i-t),s=n*n,h=n*s;return(2*t-2*r+a+o)*h+(-3*t+3*r-2*a-o)*s+a*n+t}},THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.getPoint=t,e},THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){for(var t=e*this.getLength(),r=this.getCurveLengths(),i=0,n,a;i<r.length;){if(r[i]>=t){n=r[i]-t,a=this.curves[i];var o=1-n/a.getLength();return a.getPointAt(o);break}i++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e=[],t=0,r,i=this.curves.length;for(r=0;i>r;r++)t+=this.curves[r].getLength(),e.push(t);return this.cacheLengths=e,e},THREE.CurvePath.prototype.getBoundingBox=function(){var e=this.getPoints(),t,r,i,n,a,o;t=r=Number.NEGATIVE_INFINITY,n=a=Number.POSITIVE_INFINITY;var s,h,l,c,u=e[0]instanceof THREE.Vector3;for(c=u?new THREE.Vector3:new THREE.Vector2,h=0,l=e.length;l>h;h++)s=e[h],s.x>t?t=s.x:s.x<n&&(n=s.x),s.y>r?r=s.y:s.y<a&&(a=s.y),u&&(s.z>i?i=s.z:s.z<o&&(o=s.z)),c.add(s);var f={minX:n,minY:a,maxX:t,maxY:r};return u&&(f.maxZ=i,f.minZ=o),f},THREE.CurvePath.prototype.createPointsGeometry=function(e){var t=this.getPoints(e,!0);return this.createGeometry(t)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){var t=this.getSpacedPoints(e,!0);return this.createGeometry(t)},THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,r=0;r<e.length;r++)t.vertices.push(new THREE.Vector3(e[r].x,e[r].y,e[r].z||0));return t},THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)},THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var r=this.getPoints(e),i,n;for(t||(t=this.bends),i=0,n=t.length;n>i;i++)r=this.getWrapPoints(r,t[i]);return r},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var r=this.getSpacedPoints(e),i,n;for(t||(t=this.bends),i=0,n=t.length;n>i;i++)r=this.getWrapPoints(r,t[i]);return r},THREE.CurvePath.prototype.getWrapPoints=function(e,t){var r=this.getBoundingBox(),i,n,a,o,s,h;for(i=0,n=e.length;n>i;i++){a=e[i],o=a.x,s=a.y,h=o/r.maxX,h=t.getUtoTmapping(h,o);var l=t.getPoint(h),c=t.getTangent(h);c.set(-c.y,c.x).multiplyScalar(s),a.x=l.x+c.x,a.y=l.y+c.y}return e},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;r>t;t++)this.children[t].updateMatrixWorld(e)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,r=e.length;r>t;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(e,t){var r=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:r})},THREE.Path.prototype.lineTo=function(e,t){var r=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,n=i[i.length-2],a=i[i.length-1],o=new THREE.LineCurve(new THREE.Vector2(n,a),new THREE.Vector2(e,t));this.curves.push(o),this.actions.push({action:THREE.PathActions.LINE_TO,args:r})},THREE.Path.prototype.quadraticCurveTo=function(e,t,r,i){var n=Array.prototype.slice.call(arguments),a=this.actions[this.actions.length-1].args,o=a[a.length-2],s=a[a.length-1],h=new THREE.QuadraticBezierCurve(new THREE.Vector2(o,s),new THREE.Vector2(e,t),new THREE.Vector2(r,i));this.curves.push(h),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:n})},THREE.Path.prototype.bezierCurveTo=function(e,t,r,i,n,a){var o=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,h=s[s.length-2],l=s[s.length-1],c=new THREE.CubicBezierCurve(new THREE.Vector2(h,l),new THREE.Vector2(e,t),new THREE.Vector2(r,i),new THREE.Vector2(n,a));this.curves.push(c),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:o})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,i=r[r.length-2],n=r[r.length-1],a=[new THREE.Vector2(i,n)];Array.prototype.push.apply(a,e);var o=new THREE.SplineCurve(a);this.curves.push(o),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})},THREE.Path.prototype.arc=function(e,t,r,i,n,a){var o=this.actions[this.actions.length-1].args,s=o[o.length-2],h=o[o.length-1];this.absarc(e+s,t+h,r,i,n,a)},THREE.Path.prototype.absarc=function(e,t,r,i,n,a){this.absellipse(e,t,r,r,i,n,a)},THREE.Path.prototype.ellipse=function(e,t,r,i,n,a,o){var s=this.actions[this.actions.length-1].args,h=s[s.length-2],l=s[s.length-1];this.absellipse(e+h,t+l,r,i,n,a,o)},THREE.Path.prototype.absellipse=function(e,t,r,i,n,a,o){var s=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(e,t,r,i,n,a,o);this.curves.push(h);var l=h.getPoint(1);s.push(l.x),s.push(l.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})},THREE.Path.prototype.getSpacedPoints=function(e,t){e||(e=40);for(var r=[],i=0;e>i;i++)r.push(this.getPoint(i/e));return r},THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);e=e||12;var r=[],i,n,a,o,s,h,l,c,u,f,E,p,d,m,v,g,T,y;for(i=0,n=this.actions.length;n>i;i++)switch(a=this.actions[i],o=a.action,s=a.args,o){case THREE.PathActions.MOVE_TO:r.push(new THREE.Vector2(s[0],s[1]));break;case THREE.PathActions.LINE_TO:r.push(new THREE.Vector2(s[0],s[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(h=s[2],l=s[3],f=s[0],E=s[1],r.length>0?(m=r[r.length-1],p=m.x,d=m.y):(m=this.actions[i-1].args,p=m[m.length-2],d=m[m.length-1]),v=1;e>=v;v++)g=v/e,T=THREE.Shape.Utils.b2(g,p,f,h),y=THREE.Shape.Utils.b2(g,d,E,l),r.push(new THREE.Vector2(T,y));break;case THREE.PathActions.BEZIER_CURVE_TO:for(h=s[4],l=s[5],f=s[0],E=s[1],c=s[2],u=s[3],r.length>0?(m=r[r.length-1],p=m.x,d=m.y):(m=this.actions[i-1].args,p=m[m.length-2],d=m[m.length-1]),v=1;e>=v;v++)g=v/e,T=THREE.Shape.Utils.b3(g,p,f,c,h),y=THREE.Shape.Utils.b3(g,d,E,u,l),r.push(new THREE.Vector2(T,y));break;case THREE.PathActions.CSPLINE_THRU:m=this.actions[i-1].args;var R=new THREE.Vector2(m[m.length-2],m[m.length-1]),x=[R],H=e*s[0].length;x=x.concat(s[0]);var b=new THREE.SplineCurve(x);for(v=1;H>=v;v++)r.push(b.getPointAt(v/H));break;case THREE.PathActions.ARC:var _=s[0],w=s[1],M=s[2],S=s[3],C=s[4],A=!!s[5],L=C-S,P,F=2*e;for(v=1;F>=v;v++)g=v/F,A||(g=1-g),P=S+g*L,T=_+M*Math.cos(P),y=w+M*Math.sin(P),r.push(new THREE.Vector2(T,y));break;case THREE.PathActions.ELLIPSE:var _=s[0],w=s[1],D=s[2],U=s[3],S=s[4],C=s[5],A=!!s[6],L=C-S,P,F=2*e;for(v=1;F>=v;v++)g=v/F,A||(g=1-g),P=S+g*L,T=_+D*Math.cos(P),y=w+U*Math.sin(P),r.push(new THREE.Vector2(T,y))}var V=r[r.length-1],z=1e-10;return Math.abs(V.x-r[0].x)<z&&Math.abs(V.y-r[0].y)<z&&r.splice(r.length-1,1),t&&r.push(r[0]),r},THREE.Path.prototype.toShapes=function(e,t){function r(e){var t,r,i,n,a,o=[],s=new THREE.Path;for(t=0,r=e.length;r>t;t++)i=e[t],a=i.args,n=i.action,n==THREE.PathActions.MOVE_TO&&0!=s.actions.length&&(o.push(s),s=new THREE.Path),s[n].apply(s,a);return 0!=s.actions.length&&o.push(s),o}function i(e){for(var t=[],r=0,i=e.length;i>r;r++){var n=e[r],a=new THREE.Shape;a.actions=n.actions,a.curves=n.curves,t.push(a)}return t}function n(e,t){for(var r=1e-10,i=t.length,n=!1,a=i-1,o=0;i>o;a=o++){var s=t[a],h=t[o],l=h.x-s.x,c=h.y-s.y;if(Math.abs(c)>r){if(0>c&&(s=t[o],l=-l,h=t[a],c=-c),e.y<s.y||e.y>h.y)continue;if(e.y==s.y){if(e.x==s.x)return!0}else{var u=c*(e.x-s.x)-l*(e.y-s.y);if(0==u)return!0;if(0>u)continue;n=!n}}else{if(e.y!=s.y)continue;if(h.x<=e.x&&e.x<=s.x||s.x<=e.x&&e.x<=h.x)return!0}}return n}var a=r(this.actions);if(0==a.length)return[];if(t===!0)return i(a);var o,s,h,l=[];if(1==a.length)return s=a[0],h=new THREE.Shape,h.actions=s.actions,h.curves=s.curves,l.push(h),l;var c=!THREE.Shape.Utils.isClockWise(a[0].getPoints());c=e?!c:c;var u=[],f=[],E=[],p=0,d;f[p]=void 0,E[p]=[];var m,v;for(m=0,v=a.length;v>m;m++)s=a[m],d=s.getPoints(),o=THREE.Shape.Utils.isClockWise(d),o=e?!o:o,o?(!c&&f[p]&&p++,f[p]={s:new THREE.Shape,p:d},f[p].s.actions=s.actions,f[p].s.curves=s.curves,c&&p++,E[p]=[]):E[p].push({h:s,p:d[0]});if(!f[0])return i(a);if(f.length>1){for(var g=!1,T=[],y=0,R=f.length;R>y;y++)u[y]=[];for(var y=0,R=f.length;R>y;y++)for(var x=f[y],H=E[y],b=0;b<H.length;b++){for(var _=H[b],w=!0,M=0;M<f.length;M++)n(_.p,f[M].p)&&(y!=M&&T.push({froms:y,tos:M,hole:b}),w?(w=!1,u[M].push(_)):g=!0);w&&u[y].push(_)}T.length>0&&(g||(E=u))}var S,C,A;for(m=0,v=f.length;v>m;m++)for(h=f[m].s,l.push(h),S=E[m],C=0,A=S.length;A>C;C++)h.holes.push(S[C].h);return l},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(e){var t=new THREE.ExtrudeGeometry(this,e);return t},THREE.Shape.prototype.makeGeometry=function(e){var t=new THREE.ShapeGeometry(this,e);return t},THREE.Shape.prototype.getPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;r>t;t++)i[t]=this.holes[t].getTransformedPoints(e,this.bends);return i},THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;r>t;t++)i[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return i},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)},THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}},THREE.Shape.Utils={triangulateShape:function(e,t){function r(e,t,r){return e.x!=t.x?e.x<t.x?e.x<=r.x&&r.x<=t.x:t.x<=r.x&&r.x<=e.x:e.y<t.y?e.y<=r.y&&r.y<=t.y:t.y<=r.y&&r.y<=e.y}function i(e,t,i,n,a){var o=1e-10,s=t.x-e.x,h=t.y-e.y,l=n.x-i.x,c=n.y-i.y,u=e.x-i.x,f=e.y-i.y,E=h*l-s*c,p=h*u-s*f;if(Math.abs(E)>o){var d;if(E>0){if(0>p||p>E)return[];if(d=c*u-l*f,0>d||d>E)return[]}else{if(p>0||E>p)return[];if(d=c*u-l*f,d>0||E>d)return[]}if(0==d)return!a||0!=p&&p!=E?[e]:[];if(d==E)return!a||0!=p&&p!=E?[t]:[];if(0==p)return[i];if(p==E)return[n];var m=d/E;return[{x:e.x+m*s,y:e.y+m*h}]}if(0!=p||c*u!=l*f)return[];var v=0==s&&0==h,g=0==l&&0==c;if(v&&g)return e.x!=i.x||e.y!=i.y?[]:[e];if(v)return r(i,n,e)?[e]:[];if(g)return r(e,t,i)?[i]:[];var T,y,R,x,H,b,_,w;return 0!=s?(e.x<t.x?(T=e,R=e.x,y=t,x=t.x):(T=t,R=t.x,y=e,x=e.x),i.x<n.x?(H=i,_=i.x,b=n,w=n.x):(H=n,_=n.x,b=i,w=i.x)):(e.y<t.y?(T=e,R=e.y,y=t,x=t.y):(T=t,R=t.y,y=e,x=e.y),i.y<n.y?(H=i,_=i.y,b=n,w=n.y):(H=n,_=n.y,b=i,w=i.y)),_>=R?_>x?[]:x==_?a?[]:[H]:w>=x?[H,y]:[H,b]:R>w?[]:R==w?a?[]:[T]:w>=x?[T,y]:[T,b]}function n(e,t,r,i){var n=1e-10,a=t.x-e.x,o=t.y-e.y,s=r.x-e.x,h=r.y-e.y,l=i.x-e.x,c=i.y-e.y,u=a*h-o*s,f=a*c-o*l;if(Math.abs(u)>n){var E=l*h-c*s;return u>0?f>=0&&E>=0:f>=0||E>=0}return f>0}function a(e,t){function r(e,t){var r=s.length-1,i=e-1;0>i&&(i=r);var a=e+1;a>r&&(a=0);var o=n(s[e],s[i],s[a],h[t]);if(!o)return!1;var l=h.length-1,c=t-1;0>c&&(c=l);var u=t+1;return u>l&&(u=0),o=n(h[t],h[c],h[u],s[e]),o?!0:!1}function a(e,t){var r,n,a;for(r=0;r<s.length;r++)if(n=r+1,n%=s.length,a=i(e,t,s[r],s[n],!0),a.length>0)return!0;return!1}function o(e,r){var n,a,o,s,h;for(n=0;n<l.length;n++)for(a=t[l[n]],o=0;o<a.length;o++)if(s=o+1,s%=a.length,h=i(e,r,a[o],a[s],!0),h.length>0)return!0;return!1}for(var s=e.concat(),h,l=[],c,u,f,E,p,d,m=[],v,g,T,y,R=0,x=t.length;x>R;R++)l.push(R);for(var H=0,b=2*l.length;l.length>0;){if(b--,0>b){console.log("Infinite Loop! Holes left:"+l.length+", Probably Hole outside Shape!");break}for(u=H;u<s.length;u++){f=s[u],c=-1;for(var R=0;R<l.length;R++)if(p=l[R],d=f.x+":"+f.y+":"+p,void 0===m[d]){h=t[p];for(var _=0;_<h.length;_++)if(E=h[_],r(u,_)&&!a(f,E)&&!o(f,E)){c=_,l.splice(R,1),v=s.slice(0,u+1),g=s.slice(u),T=h.slice(c),y=h.slice(0,c+1),s=v.concat(T).concat(y).concat(g),H=u;break}if(c>=0)break;m[d]=!0}if(c>=0)break}}return s}for(var o,s,h,l,c,u,f={},E=e.concat(),p=0,d=t.length;d>p;p++)Array.prototype.push.apply(E,t[p]);for(o=0,s=E.length;s>o;o++)c=E[o].x+":"+E[o].y,void 0!==f[c]&&console.log("Duplicate point",c),f[c]=o;var m=a(e,t),v=THREE.FontUtils.Triangulate(m,!1);for(o=0,s=v.length;s>o;o++)for(l=v[o],h=0;3>h;h++)c=l[h].x+":"+l[h].y,u=f[c],void 0!==u&&(l[h]=u);return v.concat()},isClockWise:function(e){return THREE.FontUtils.Triangulate.area(e)<0},b2p0:function(e,t){var r=1-e;return r*r*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,r,i){return this.b2p0(e,t)+this.b2p1(e,r)+this.b2p2(e,i)},b3p0:function(e,t){var r=1-e;return r*r*r*t},b3p1:function(e,t){var r=1-e;return 3*r*r*e*t},b3p2:function(e,t){var r=1-e;return 3*r*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,r,i,n){return this.b3p0(e,t)+this.b3p1(e,r)+this.b3p2(e,i)+this.b3p3(e,n)}},THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(e){var t=this.v2.clone().sub(this.v1);return t.normalize()},THREE.QuadraticBezierCurve=function(e,t,r){this.v0=e,this.v1=t,this.v2=r},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t,r;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(t,r)},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t,r;t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y);var i=new THREE.Vector2(t,r);return i.normalize(),i},THREE.CubicBezierCurve=function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(e){var t,r;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,r)},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t,r;t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var i=new THREE.Vector2(t,r);return i.normalize(),i},THREE.SplineCurve=function(e){this.points=void 0==e?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(e){var t=new THREE.Vector2,r=[],i=this.points,n,a,o;return n=(i.length-1)*e,a=Math.floor(n),o=n-a,r[0]=0==a?a:a-1,r[1]=a,r[2]=a>i.length-2?i.length-1:a+1,r[3]=a>i.length-3?i.length-1:a+2,t.x=THREE.Curve.Utils.interpolate(i[r[0]].x,i[r[1]].x,i[r[2]].x,i[r[3]].x,o),t.y=THREE.Curve.Utils.interpolate(i[r[0]].y,i[r[1]].y,i[r[2]].y,i[r[3]].y,o),t},THREE.EllipseCurve=function(e,t,r,i,n,a,o){this.aX=e,this.aY=t,this.xRadius=r,this.yRadius=i,this.aStartAngle=n,this.aEndAngle=a,this.aClockwise=o},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(e){var t,r=this.aEndAngle-this.aStartAngle;0>r&&(r+=2*Math.PI),r>2*Math.PI&&(r-=2*Math.PI),t=this.aClockwise===!0?this.aEndAngle+(1-e)*(2*Math.PI-r):this.aStartAngle+e*r;var i=this.aX+this.xRadius*Math.cos(t),n=this.aY+this.yRadius*Math.sin(t);return new THREE.Vector2(i,n)},THREE.ArcCurve=function(e,t,r,i,n,a){THREE.EllipseCurve.call(this,e,t,r,r,i,n,a)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){var t=new THREE.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,r){this.v0=e,this.v1=t,this.v2=r},function(e){var t,r,i;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),i=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(t,r,i)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i},function(e){var t,r,i;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),i=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(t,r,i)}),THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=new THREE.Vector3,r=[],i=this.points,n,a,o;n=(i.length-1)*e,a=Math.floor(n),o=n-a,r[0]=0==a?a:a-1,r[1]=a,r[2]=a>i.length-2?i.length-1:a+1,r[3]=a>i.length-3?i.length-1:a+2;var s=i[r[0]],h=i[r[1]],l=i[r[2]],c=i[r[3]];return t.x=THREE.Curve.Utils.interpolate(s.x,h.x,l.x,c.x,o),t.y=THREE.Curve.Utils.interpolate(s.y,h.y,l.y,c.y,o),t.z=THREE.Curve.Utils.interpolate(s.z,h.z,l.z,c.z,o),t}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=new THREE.Vector3,r=[],i=this.points,n,a,o;return n=(i.length-0)*e,a=Math.floor(n),o=n-a,a+=a>0?0:(Math.floor(Math.abs(a)/i.length)+1)*i.length,r[0]=(a-1)%i.length,r[1]=a%i.length,r[2]=(a+1)%i.length,r[3]=(a+2)%i.length,t.x=THREE.Curve.Utils.interpolate(i[r[0]].x,i[r[1]].x,i[r[2]].x,i[r[3]].x,o),t.y=THREE.Curve.Utils.interpolate(i[r[0]].y,i[r[1]].y,i[r[2]].y,i[r[3]].y,o),t.z=THREE.Curve.Utils.interpolate(i[r[0]].z,i[r[1]].z,i[r[2]].z,i[r[3]].z,o),t}),THREE.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){console.warn("THREE.AnimationHandler.add() has been deprecated.")},get:function(){console.warn("THREE.AnimationHandler.get() has been deprecated.")},remove:function(){console.warn("THREE.AnimationHandler.remove() has been deprecated.")},animations:[],init:function(e){if(e.initialized!==!0){for(var t=0;t<e.hierarchy.length;t++){for(var r=0;r<e.hierarchy[t].keys.length;r++)if(e.hierarchy[t].keys[r].time<0&&(e.hierarchy[t].keys[r].time=0),void 0!==e.hierarchy[t].keys[r].rot&&!(e.hierarchy[t].keys[r].rot instanceof THREE.Quaternion)){var i=e.hierarchy[t].keys[r].rot;e.hierarchy[t].keys[r].rot=(new THREE.Quaternion).fromArray(i)}if(e.hierarchy[t].keys.length&&void 0!==e.hierarchy[t].keys[0].morphTargets){for(var n={},r=0;r<e.hierarchy[t].keys.length;r++)for(var a=0;a<e.hierarchy[t].keys[r].morphTargets.length;a++){var o=e.hierarchy[t].keys[r].morphTargets[a];n[o]=-1}e.hierarchy[t].usedMorphTargets=n;for(var r=0;r<e.hierarchy[t].keys.length;r++){var s={};for(var o in n){for(var a=0;a<e.hierarchy[t].keys[r].morphTargets.length;a++)if(e.hierarchy[t].keys[r].morphTargets[a]===o){s[o]=e.hierarchy[t].keys[r].morphTargetsInfluences[a];break}a===e.hierarchy[t].keys[r].morphTargets.length&&(s[o]=0)}e.hierarchy[t].keys[r].morphTargetsInfluences=s}}for(var r=1;r<e.hierarchy[t].keys.length;r++)e.hierarchy[t].keys[r].time===e.hierarchy[t].keys[r-1].time&&(e.hierarchy[t].keys.splice(r,1),r--);for(var r=0;r<e.hierarchy[t].keys.length;r++)e.hierarchy[t].keys[r].index=r}return e.initialized=!0,e}},parse:function(e){var t=function(e,r){r.push(e);for(var i=0;i<e.children.length;i++)t(e.children[i],r)},r=[];if(e instanceof THREE.SkinnedMesh)for(var i=0;i<e.skeleton.bones.length;i++)r.push(e.skeleton.bones[i]);else t(e,r);return r},play:function(e){-1===this.animations.indexOf(e)&&this.animations.push(e)},stop:function(e){var t=this.animations.indexOf(e);-1!==t&&this.animations.splice(t,1)},update:function(e){for(var t=0;t<this.animations.length;t++)this.animations[t].update(e)}},THREE.Animation=function(e,t){this.root=e,this.data=THREE.AnimationHandler.init(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=!0,this.weight=0,this.interpolationType=THREE.AnimationHandler.LINEAR},THREE.Animation.prototype.keyTypes=["pos","rot","scl"],THREE.Animation.prototype.play=function(e,t){this.currentTime=void 0!==e?e:0,this.weight=void 0!==t?t:1,this.isPlaying=!0,this.reset(),THREE.AnimationHandler.play(this)},THREE.Animation.prototype.stop=function(){this.isPlaying=!1,THREE.AnimationHandler.stop(this)},THREE.Animation.prototype.reset=function(){for(var e=0,t=this.hierarchy.length;t>e;e++){var r=this.hierarchy[e];r.matrixAutoUpdate=!0,void 0===r.animationCache&&(r.animationCache={}),void 0===r.animationCache[this.data.name]&&(r.animationCache[this.data.name]={},r.animationCache[this.data.name].prevKey={pos:0,rot:0,scl:0},r.animationCache[this.data.name].nextKey={pos:0,rot:0,scl:0},r.animationCache[this.data.name].originalMatrix=r.matrix);for(var i=r.animationCache[this.data.name],n=0;3>n;n++){for(var a=this.keyTypes[n],o=this.data.hierarchy[e].keys[0],s=this.getNextKeyWith(a,e,1);s.time<this.currentTime&&s.index>o.index;)o=s,s=this.getNextKeyWith(a,e,s.index+1);i.prevKey[a]=o,i.nextKey[a]=s}}},THREE.Animation.prototype.update=function(){var e=[],t=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Quaternion,n=function(e,t){var r=[],i=[],n,o,s,h,l,c,u,f,E;return n=(e.length-1)*t,o=Math.floor(n),s=n-o,r[0]=0===o?o:o-1,r[1]=o,r[2]=o>e.length-2?o:o+1,r[3]=o>e.length-3?o:o+2,c=e[r[0]],u=e[r[1]],f=e[r[2]],E=e[r[3]],h=s*s,l=s*h,i[0]=a(c[0],u[0],f[0],E[0],s,h,l),i[1]=a(c[1],u[1],f[1],E[1],s,h,l),i[2]=a(c[2],u[2],f[2],E[2],s,h,l),i},a=function(e,t,r,i,n,a,o){var s=.5*(r-e),h=.5*(i-t);return(2*(t-r)+s+h)*o+(-3*(t-r)-2*s-h)*a+s*n+t};return function(a){if(this.isPlaying!==!1&&(this.currentTime+=a*this.timeScale,
0!==this.weight)){var o=this.data.length;if(this.loop===!0&&this.currentTime>o)this.currentTime%=o,this.reset();else if(this.loop===!1&&this.currentTime>o)return void this.stop();for(var s=0,h=this.hierarchy.length;h>s;s++)for(var l=this.hierarchy[s],c=l.animationCache[this.data.name],u=0;3>u;u++){var f=this.keyTypes[u],E=c.prevKey[f],p=c.nextKey[f];if(p.time<=this.currentTime){for(E=this.data.hierarchy[s].keys[0],p=this.getNextKeyWith(f,s,1);p.time<this.currentTime&&p.index>E.index;)E=p,p=this.getNextKeyWith(f,s,p.index+1);c.prevKey[f]=E,c.nextKey[f]=p}l.matrixAutoUpdate=!0,l.matrixWorldNeedsUpdate=!0;var d=(this.currentTime-E.time)/(p.time-E.time),m=E[f],v=p[f];if(0>d&&(d=0),d>1&&(d=1),"pos"===f){if(this.interpolationType===THREE.AnimationHandler.LINEAR)if(r.x=m[0]+(v[0]-m[0])*d,r.y=m[1]+(v[1]-m[1])*d,r.z=m[2]+(v[2]-m[2])*d,l instanceof THREE.Bone){var g=this.weight/(this.weight+l.accumulatedPosWeight);l.position.lerp(r,g),l.accumulatedPosWeight+=this.weight}else l.position.copy(r);else if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){e[0]=this.getPrevKeyWith("pos",s,E.index-1).pos,e[1]=m,e[2]=v,e[3]=this.getNextKeyWith("pos",s,p.index+1).pos,d=.33*d+.33;var T=n(e,d),g=1;l instanceof THREE.Bone&&(g=this.weight/(this.weight+l.accumulatedPosWeight),l.accumulatedPosWeight+=this.weight);var y=l.position;if(y.x=y.x+(T[0]-y.x)*g,y.y=y.y+(T[1]-y.y)*g,y.z=y.z+(T[2]-y.z)*g,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){var R=n(e,1.01*d);t.set(R[0],R[1],R[2]),t.sub(y),t.y=0,t.normalize();var x=Math.atan2(t.x,t.z);l.rotation.set(0,x,0)}}}else if("rot"===f)if(THREE.Quaternion.slerp(m,v,i,d),l instanceof THREE.Bone)if(0===l.accumulatedRotWeight)l.quaternion.copy(i),l.accumulatedRotWeight=this.weight;else{var g=this.weight/(this.weight+l.accumulatedRotWeight);THREE.Quaternion.slerp(l.quaternion,i,l.quaternion,g),l.accumulatedRotWeight+=this.weight}else l.quaternion.copy(i);else if("scl"===f)if(r.x=m[0]+(v[0]-m[0])*d,r.y=m[1]+(v[1]-m[1])*d,r.z=m[2]+(v[2]-m[2])*d,l instanceof THREE.Bone){var g=this.weight/(this.weight+l.accumulatedSclWeight);l.scale.lerp(r,g),l.accumulatedSclWeight+=this.weight}else l.scale.copy(r)}return!0}}}(),THREE.Animation.prototype.getNextKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r=r<i.length-1?r:i.length-1:r%=i.length;r<i.length;r++)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r>0?r:0:r>=0?r:r+i.length;r>=0;r--)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[i.length-1]},THREE.KeyFrameAnimation=function(e){this.root=e.node,this.data=THREE.AnimationHandler.init(e),this.hierarchy=THREE.AnimationHandler.parse(this.root),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0;for(var t=0,r=this.hierarchy.length;r>t;t++){var i=this.data.hierarchy[t].keys,n=this.data.hierarchy[t].sids,a=this.hierarchy[t];if(i.length&&n){for(var o=0;o<n.length;o++){var s=n[o],h=this.getNextKeyWith(s,t,0);h&&h.apply(s)}a.matrixAutoUpdate=!1,this.data.hierarchy[t].node.updateMatrix(),a.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(e){if(this.currentTime=void 0!==e?e:0,this.isPlaying===!1){this.isPlaying=!0;var t,r=this.hierarchy.length,i,n;for(t=0;r>t;t++){i=this.hierarchy[t],n=this.data.hierarchy[t],void 0===n.animationCache&&(n.animationCache={},n.animationCache.prevKey=null,n.animationCache.nextKey=null,n.animationCache.originalMatrix=i.matrix);var a=this.data.hierarchy[t].keys;a.length&&(n.animationCache.prevKey=a[0],n.animationCache.nextKey=a[1],this.startTime=Math.min(a[0].time,this.startTime),this.endTime=Math.max(a[a.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.play(this)},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.stop(this);for(var e=0;e<this.data.hierarchy.length;e++){var t=this.hierarchy[e],r=this.data.hierarchy[e];if(void 0!==r.animationCache){var i=r.animationCache.originalMatrix;i.copy(t.matrix),t.matrix=i,delete r.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(e){if(this.isPlaying!==!1){this.currentTime+=e*this.timeScale;var t=this.data.length;this.loop===!0&&this.currentTime>t&&(this.currentTime%=t),this.currentTime=Math.min(this.currentTime,t);for(var r=0,i=this.hierarchy.length;i>r;r++){var n=this.hierarchy[r],a=this.data.hierarchy[r],o=a.keys,s=a.animationCache;if(o.length){var h=s.prevKey,l=s.nextKey;if(l.time<=this.currentTime){for(;l.time<this.currentTime&&l.index>h.index;)h=l,l=o[h.index+1];s.prevKey=h,s.nextKey=l}l.time>=this.currentTime?h.interpolate(l,this.currentTime):h.interpolate(l,l.time),this.data.hierarchy[r].node.updateMatrix(),n.matrixWorldNeedsUpdate=!0}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r%=i.length;r<i.length;r++)if(i[r].hasTarget(e))return i[r];return i[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=r>=0?r:r+i.length;r>=0;r--)if(i[r].hasTarget(e))return i[r];return i[i.length-1]},THREE.MorphAnimation=function(e){this.mesh=e,this.frames=e.morphTargetInfluences.length,this.currentTime=0,this.duration=1e3,this.loop=!0,this.isPlaying=!1},THREE.MorphAnimation.prototype={play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(){var e=0,t=0;return function(r){if(this.isPlaying!==!1){this.currentTime+=r,this.loop===!0&&this.currentTime>this.duration&&(this.currentTime%=this.duration),this.currentTime=Math.min(this.currentTime,this.duration);var i=this.duration/this.frames,n=Math.floor(this.currentTime/i);n!=t&&(this.mesh.morphTargetInfluences[e]=0,this.mesh.morphTargetInfluences[t]=1,this.mesh.morphTargetInfluences[n]=0,e=t,t=n),this.mesh.morphTargetInfluences[n]=this.currentTime%i/i,this.mesh.morphTargetInfluences[e]=1-this.mesh.morphTargetInfluences[n]}}}()},THREE.BoxGeometry=function(e,t,r,i,n,a){function o(e,t,r,i,n,a,o,h){var l,c,u,f=s.widthSegments,E=s.heightSegments,p=n/2,d=a/2,m=s.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?l="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(l="y",E=s.depthSegments):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(l="x",f=s.depthSegments);var v=f+1,g=E+1,T=n/f,y=a/E,R=new THREE.Vector3;for(R[l]=o>0?1:-1,u=0;g>u;u++)for(c=0;v>c;c++){var x=new THREE.Vector3;x[e]=(c*T-p)*r,x[t]=(u*y-d)*i,x[l]=o,s.vertices.push(x)}for(u=0;E>u;u++)for(c=0;f>c;c++){var H=c+v*u,b=c+v*(u+1),_=c+1+v*(u+1),w=c+1+v*u,M=new THREE.Vector2(c/f,1-u/E),S=new THREE.Vector2(c/f,1-(u+1)/E),C=new THREE.Vector2((c+1)/f,1-(u+1)/E),A=new THREE.Vector2((c+1)/f,1-u/E),L=new THREE.Face3(H+m,b+m,w+m);L.normal.copy(R),L.vertexNormals.push(R.clone(),R.clone(),R.clone()),L.materialIndex=h,s.faces.push(L),s.faceVertexUvs[0].push([M,S,A]),L=new THREE.Face3(b+m,_+m,w+m),L.normal.copy(R),L.vertexNormals.push(R.clone(),R.clone(),R.clone()),L.materialIndex=h,s.faces.push(L),s.faceVertexUvs[0].push([S.clone(),C,A.clone()])}}THREE.Geometry.call(this),this.parameters={width:e,height:t,depth:r,widthSegments:i,heightSegments:n,depthSegments:a},this.widthSegments=i||1,this.heightSegments=n||1,this.depthSegments=a||1;var s=this,h=e/2,l=t/2,c=r/2;o("z","y",-1,-1,r,t,h,0),o("z","y",1,-1,r,t,-h,1),o("x","z",1,1,e,r,l,2),o("x","z",1,-1,e,r,-l,3),o("x","y",1,-1,e,t,c,4),o("x","y",-1,-1,e,t,-c,5),this.mergeVertices()},THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry=function(e,t,r,i){THREE.Geometry.call(this),this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:i},e=e||50,t=void 0!==t?Math.max(3,t):8,r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI;var n,a=[],o=new THREE.Vector3,s=new THREE.Vector2(.5,.5);for(this.vertices.push(o),a.push(s),n=0;t>=n;n++){var h=new THREE.Vector3,l=r+n/t*i;h.x=e*Math.cos(l),h.y=e*Math.sin(l),this.vertices.push(h),a.push(new THREE.Vector2((h.x/e+1)/2,(h.y/e+1)/2))}var c=new THREE.Vector3(0,0,1);for(n=1;t>=n;n++)this.faces.push(new THREE.Face3(n,n+1,0,[c.clone(),c.clone(),c.clone()])),this.faceVertexUvs[0].push([a[n].clone(),a[n+1].clone(),s.clone()]);this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(e,t,r,i,n,a){return console.warn("THEE.CubeGeometry has been renamed to THREE.BoxGeometry."),new THREE.BoxGeometry(e,t,r,i,n,a)},THREE.CylinderGeometry=function(e,t,r,i,n,a){THREE.Geometry.call(this),this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:i,heightSegments:n,openEnded:a},e=void 0!==e?e:20,t=void 0!==t?t:20,r=void 0!==r?r:100,i=i||8,n=n||1,a=void 0!==a?a:!1;var o=r/2,s,h,l=[],c=[];for(h=0;n>=h;h++){var u=[],f=[],E=h/n,p=E*(t-e)+e;for(s=0;i>=s;s++){var d=s/i,m=new THREE.Vector3;m.x=p*Math.sin(d*Math.PI*2),m.y=-E*r+o,m.z=p*Math.cos(d*Math.PI*2),this.vertices.push(m),u.push(this.vertices.length-1),f.push(new THREE.Vector2(d,1-E))}l.push(u),c.push(f)}var v=(t-e)/r,g,T;for(s=0;i>s;s++)for(0!==e?(g=this.vertices[l[0][s]].clone(),T=this.vertices[l[0][s+1]].clone()):(g=this.vertices[l[1][s]].clone(),T=this.vertices[l[1][s+1]].clone()),g.setY(Math.sqrt(g.x*g.x+g.z*g.z)*v).normalize(),T.setY(Math.sqrt(T.x*T.x+T.z*T.z)*v).normalize(),h=0;n>h;h++){var y=l[h][s],R=l[h+1][s],x=l[h+1][s+1],H=l[h][s+1],b=g.clone(),_=g.clone(),w=T.clone(),M=T.clone(),S=c[h][s].clone(),C=c[h+1][s].clone(),A=c[h+1][s+1].clone(),L=c[h][s+1].clone();this.faces.push(new THREE.Face3(y,R,H,[b,_,M])),this.faceVertexUvs[0].push([S,C,L]),this.faces.push(new THREE.Face3(R,x,H,[_.clone(),w,M.clone()])),this.faceVertexUvs[0].push([C.clone(),A,L.clone()])}if(a===!1&&e>0)for(this.vertices.push(new THREE.Vector3(0,o,0)),s=0;i>s;s++){var y=l[0][s],R=l[0][s+1],x=this.vertices.length-1,b=new THREE.Vector3(0,1,0),_=new THREE.Vector3(0,1,0),w=new THREE.Vector3(0,1,0),S=c[0][s].clone(),C=c[0][s+1].clone(),A=new THREE.Vector2(C.x,0);this.faces.push(new THREE.Face3(y,R,x,[b,_,w])),this.faceVertexUvs[0].push([S,C,A])}if(a===!1&&t>0)for(this.vertices.push(new THREE.Vector3(0,-o,0)),s=0;i>s;s++){var y=l[h][s+1],R=l[h][s],x=this.vertices.length-1,b=new THREE.Vector3(0,-1,0),_=new THREE.Vector3(0,-1,0),w=new THREE.Vector3(0,-1,0),S=c[h][s+1].clone(),C=c[h][s].clone(),A=new THREE.Vector2(C.x,1);this.faces.push(new THREE.Face3(y,R,x,[b,_,w])),this.faceVertexUvs[0].push([S,C,A])}this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(e,t){return"undefined"==typeof e?void(e=[]):(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.addShapeList(e,t),void this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var r=e.length,i=0;r>i;i++){var n=e[i];this.addShape(n,t)}},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function r(e,t,r){return t||console.log("die"),t.clone().multiplyScalar(r).add(e)}function i(e,t,r){var i=1e-10,n=THREE.Math.sign,a,o,s=1,h=e.x-t.x,l=e.y-t.y,c=r.x-e.x,u=r.y-e.y,f=h*h+l*l,E=h*u-l*c;if(Math.abs(E)>i){var p=Math.sqrt(f),d=Math.sqrt(c*c+u*u),m=t.x-l/p,v=t.y+h/p,g=r.x-u/d,T=r.y+c/d,y=((g-m)*u-(T-v)*c)/(h*u-l*c);a=m+h*y-e.x,o=v+l*y-e.y;var R=a*a+o*o;if(2>=R)return new THREE.Vector2(a,o);s=Math.sqrt(R/2)}else{var x=!1;h>i?c>i&&(x=!0):-i>h?-i>c&&(x=!0):n(l)==n(u)&&(x=!0),x?(a=-l,o=h,s=Math.sqrt(f)):(a=h,o=l,s=Math.sqrt(f/2))}return new THREE.Vector2(a/s,o/s)}function n(){if(p){var e=0,t=W*e;for(Q=0;X>Q;Q++)j=z[Q],h(j[2]+t,j[1]+t,j[0]+t,!0);for(e=m+2*E,t=W*e,Q=0;X>Q;Q++)j=z[Q],h(j[0]+t,j[1]+t,j[2]+t,!1)}else{for(Q=0;X>Q;Q++)j=z[Q],h(j[2],j[1],j[0],!0);for(Q=0;X>Q;Q++)j=z[Q],h(j[0]+W*m,j[1]+W*m,j[2]+W*m,!1)}}function a(){var e=0;for(o(B,e),e+=B.length,S=0,C=U.length;C>S;S++)M=U[S],o(M,e),e+=M.length}function o(e,t){var r,i;for(Q=e.length;--Q>=0;){r=Q,i=Q-1,0>i&&(i=e.length-1);var n=0,a=m+2*E;for(n=0;a>n;n++){var o=W*n,s=W*(n+1),h=t+r+o,c=t+i+o,u=t+i+s,f=t+r+s;l(h,c,u,f,e,n,a,r,i)}}}function s(e,t,r){A.vertices.push(new THREE.Vector3(e,t,r))}function h(r,i,n,a){r+=P,i+=P,n+=P,A.faces.push(new THREE.Face3(r,i,n,null,null,y));var o=a?x.generateBottomUV(A,e,t,r,i,n):x.generateTopUV(A,e,t,r,i,n);A.faceVertexUvs[0].push(o)}function l(r,i,n,a,o,s,h,l,c){r+=P,i+=P,n+=P,a+=P,A.faces.push(new THREE.Face3(r,i,a,null,null,R)),A.faces.push(new THREE.Face3(i,n,a,null,null,R));var u=x.generateSideWallUV(A,e,o,t,r,i,n,a,s,h,l,c);A.faceVertexUvs[0].push([u[0],u[1],u[3]]),A.faceVertexUvs[0].push([u[1],u[2],u[3]])}var c=void 0!==t.amount?t.amount:100,u=void 0!==t.bevelThickness?t.bevelThickness:6,f=void 0!==t.bevelSize?t.bevelSize:u-2,E=void 0!==t.bevelSegments?t.bevelSegments:3,p=void 0!==t.bevelEnabled?t.bevelEnabled:!0,d=void 0!==t.curveSegments?t.curveSegments:12,m=void 0!==t.steps?t.steps:1,v=t.extrudePath,g,T=!1,y=t.material,R=t.extrudeMaterial,x=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,H,b,_,w;v&&(g=v.getSpacedPoints(m),T=!0,p=!1,H=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(v,m,!1),b=new THREE.Vector3,_=new THREE.Vector3,w=new THREE.Vector3),p||(E=0,u=0,f=0);var M,S,C,A=this,L=[],P=this.vertices.length,F=e.extractPoints(d),D=F.shape,U=F.holes,V=!THREE.Shape.Utils.isClockWise(D);if(V){for(D=D.reverse(),S=0,C=U.length;C>S;S++)M=U[S],THREE.Shape.Utils.isClockWise(M)&&(U[S]=M.reverse());V=!1}var z=THREE.Shape.Utils.triangulateShape(D,U),B=D;for(S=0,C=U.length;C>S;S++)M=U[S],D=D.concat(M);for(var k,N,O,I,G,W=D.length,j,X=z.length,Y,q=B.length,K=180/Math.PI,Z=[],Q=0,J=B.length,ee=J-1,te=Q+1;J>Q;Q++,ee++,te++){ee===J&&(ee=0),te===J&&(te=0);var re=B[Q],ie=B[ee],ne=B[te];Z[Q]=i(B[Q],B[ee],B[te])}var ae=[],oe,se=Z.concat();for(S=0,C=U.length;C>S;S++){for(M=U[S],oe=[],Q=0,J=M.length,ee=J-1,te=Q+1;J>Q;Q++,ee++,te++)ee===J&&(ee=0),te===J&&(te=0),oe[Q]=i(M[Q],M[ee],M[te]);ae.push(oe),se=se.concat(oe)}for(k=0;E>k;k++){for(O=k/E,I=u*(1-O),N=f*Math.sin(O*Math.PI/2),Q=0,J=B.length;J>Q;Q++)G=r(B[Q],Z[Q],N),s(G.x,G.y,-I);for(S=0,C=U.length;C>S;S++)for(M=U[S],oe=ae[S],Q=0,J=M.length;J>Q;Q++)G=r(M[Q],oe[Q],N),s(G.x,G.y,-I)}for(N=f,Q=0;W>Q;Q++)G=p?r(D[Q],se[Q],N):D[Q],T?(_.copy(H.normals[0]).multiplyScalar(G.x),b.copy(H.binormals[0]).multiplyScalar(G.y),w.copy(g[0]).add(_).add(b),s(w.x,w.y,w.z)):s(G.x,G.y,0);var he;for(he=1;m>=he;he++)for(Q=0;W>Q;Q++)G=p?r(D[Q],se[Q],N):D[Q],T?(_.copy(H.normals[he]).multiplyScalar(G.x),b.copy(H.binormals[he]).multiplyScalar(G.y),w.copy(g[he]).add(_).add(b),s(w.x,w.y,w.z)):s(G.x,G.y,c/m*he);for(k=E-1;k>=0;k--){for(O=k/E,I=u*(1-O),N=f*Math.sin(O*Math.PI/2),Q=0,J=B.length;J>Q;Q++)G=r(B[Q],Z[Q],N),s(G.x,G.y,c+I);for(S=0,C=U.length;C>S;S++)for(M=U[S],oe=ae[S],Q=0,J=M.length;J>Q;Q++)G=r(M[Q],oe[Q],N),T?s(G.x,G.y+g[m-1].y,g[m-1].x+I):s(G.x,G.y,c+I)}n(),a()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,r,i,n,a){var o=e.vertices[i].x,s=e.vertices[i].y,h=e.vertices[n].x,l=e.vertices[n].y,c=e.vertices[a].x,u=e.vertices[a].y;return[new THREE.Vector2(o,s),new THREE.Vector2(h,l),new THREE.Vector2(c,u)]},generateBottomUV:function(e,t,r,i,n,a){return this.generateTopUV(e,t,r,i,n,a)},generateSideWallUV:function(e,t,r,i,n,a,o,s,h,l,c,u){var f=e.vertices[n].x,E=e.vertices[n].y,p=e.vertices[n].z,d=e.vertices[a].x,m=e.vertices[a].y,v=e.vertices[a].z,g=e.vertices[o].x,T=e.vertices[o].y,y=e.vertices[o].z,R=e.vertices[s].x,x=e.vertices[s].y,H=e.vertices[s].z;return Math.abs(E-m)<.01?[new THREE.Vector2(f,1-p),new THREE.Vector2(d,1-v),new THREE.Vector2(g,1-y),new THREE.Vector2(R,1-H)]:[new THREE.Vector2(E,1-p),new THREE.Vector2(m,1-v),new THREE.Vector2(T,1-y),new THREE.Vector2(x,1-H)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),e instanceof Array==!1&&(e=[e]),this.addShapeList(e,t),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var r=0,i=e.length;i>r;r++)this.addShape(e[r],t);return this},THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var r=void 0!==t.curveSegments?t.curveSegments:12,i=t.material,n=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,a,o,s,h,l=this.vertices.length,c=e.extractPoints(r),u=c.shape,f=c.holes,E=!THREE.Shape.Utils.isClockWise(u);if(E){for(u=u.reverse(),a=0,o=f.length;o>a;a++)s=f[a],THREE.Shape.Utils.isClockWise(s)&&(f[a]=s.reverse());E=!1}var p=THREE.Shape.Utils.triangulateShape(u,f),d=u;for(a=0,o=f.length;o>a;a++)s=f[a],u=u.concat(s);var m,v=u.length,g,T=p.length,y,R=d.length;for(a=0;v>a;a++)m=u[a],this.vertices.push(new THREE.Vector3(m.x,m.y,0));for(a=0;T>a;a++){g=p[a];var x=g[0]+l,H=g[1]+l,b=g[2]+l;this.faces.push(new THREE.Face3(x,H,b,null,null,i)),this.faceVertexUvs[0].push(n.generateBottomUV(this,e,t,x,H,b))}},THREE.LatheGeometry=function(e,t,r,i){THREE.Geometry.call(this),t=t||12,r=r||0,i=i||2*Math.PI;for(var n=1/(e.length-1),a=1/t,o=0,s=t;s>=o;o++)for(var h=r+o*a*i,l=Math.cos(h),c=Math.sin(h),u=0,f=e.length;f>u;u++){var E=e[u],p=new THREE.Vector3;p.x=l*E.x-c*E.y,p.y=c*E.x+l*E.y,p.z=E.z,this.vertices.push(p)}for(var d=e.length,o=0,s=t;s>o;o++)for(var u=0,f=e.length-1;f>u;u++){var m=u+d*o,v=m,g=m+d,l=m+1+d,T=m+1,y=o*a,R=u*n,x=y+a,H=R+n;this.faces.push(new THREE.Face3(v,g,T)),this.faceVertexUvs[0].push([new THREE.Vector2(y,R),new THREE.Vector2(x,R),new THREE.Vector2(y,H)]),this.faces.push(new THREE.Face3(g,l,T)),this.faceVertexUvs[0].push([new THREE.Vector2(x,R),new THREE.Vector2(x,H),new THREE.Vector2(y,H)])}this.mergeVertices(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(e,t,r,i){THREE.Geometry.call(this),this.parameters={width:e,height:t,widthSegments:r,heightSegments:i};var n,a,o=e/2,s=t/2,h=r||1,l=i||1,c=h+1,u=l+1,f=e/h,E=t/l,p=new THREE.Vector3(0,0,1);for(a=0;u>a;a++){var d=a*E-s;for(n=0;c>n;n++){var m=n*f-o;this.vertices.push(new THREE.Vector3(m,-d,0))}}for(a=0;l>a;a++)for(n=0;h>n;n++){var v=n+c*a,g=n+c*(a+1),T=n+1+c*(a+1),y=n+1+c*a,R=new THREE.Vector2(n/h,1-a/l),x=new THREE.Vector2(n/h,1-(a+1)/l),H=new THREE.Vector2((n+1)/h,1-(a+1)/l),b=new THREE.Vector2((n+1)/h,1-a/l),_=new THREE.Face3(v,g,y);_.normal.copy(p),_.vertexNormals.push(p.clone(),p.clone(),p.clone()),this.faces.push(_),this.faceVertexUvs[0].push([R,x,b]),_=new THREE.Face3(g,T,y),_.normal.copy(p),_.vertexNormals.push(p.clone(),p.clone(),p.clone()),this.faces.push(_),this.faceVertexUvs[0].push([x.clone(),H,b.clone()])}},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry=function(e,t,r,i,n,a){THREE.Geometry.call(this),e=e||0,t=t||50,n=void 0!==n?n:0,a=void 0!==a?a:2*Math.PI,r=void 0!==r?Math.max(3,r):8,i=void 0!==i?Math.max(1,i):8;var o,s,h=[],l=e,c=(t-e)/i;for(o=0;i+1>o;o++){for(s=0;r+1>s;s++){var u=new THREE.Vector3,f=n+s/r*a;u.x=l*Math.cos(f),u.y=l*Math.sin(f),this.vertices.push(u),h.push(new THREE.Vector2((u.x/t+1)/2,(u.y/t+1)/2))}l+=c}var E=new THREE.Vector3(0,0,1);for(o=0;i>o;o++){var p=o*(r+1);for(s=0;r>s;s++){var f=s+p,d=f,m=f+r+1,v=f+r+2;this.faces.push(new THREE.Face3(d,m,v,[E.clone(),E.clone(),E.clone()])),this.faceVertexUvs[0].push([h[d].clone(),h[m].clone(),h[v].clone()]),d=f,m=f+r+2,v=f+1,this.faces.push(new THREE.Face3(d,m,v,[E.clone(),E.clone(),E.clone()])),this.faceVertexUvs[0].push([h[d].clone(),h[m].clone(),h[v].clone()])}}this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,l)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(e,t,r,i,n,a,o){THREE.Geometry.call(this),this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:i,phiLength:n,thetaStart:a,thetaLength:o},e=e||50,t=Math.max(3,Math.floor(t)||8),r=Math.max(2,Math.floor(r)||6),i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI,a=void 0!==a?a:0,o=void 0!==o?o:Math.PI;var s,h,l=[],c=[];for(h=0;r>=h;h++){var u=[],f=[];for(s=0;t>=s;s++){var E=s/t,p=h/r,d=new THREE.Vector3;d.x=-e*Math.cos(i+E*n)*Math.sin(a+p*o),d.y=e*Math.cos(a+p*o),d.z=e*Math.sin(i+E*n)*Math.sin(a+p*o),this.vertices.push(d),u.push(this.vertices.length-1),f.push(new THREE.Vector2(E,1-p))}l.push(u),c.push(f)}for(h=0;r>h;h++)for(s=0;t>s;s++){var m=l[h][s+1],v=l[h][s],g=l[h+1][s],T=l[h+1][s+1],y=this.vertices[m].clone().normalize(),R=this.vertices[v].clone().normalize(),x=this.vertices[g].clone().normalize(),H=this.vertices[T].clone().normalize(),b=c[h][s+1].clone(),_=c[h][s].clone(),w=c[h+1][s].clone(),M=c[h+1][s+1].clone();Math.abs(this.vertices[m].y)===e?(b.x=(b.x+_.x)/2,this.faces.push(new THREE.Face3(m,g,T,[y,x,H])),this.faceVertexUvs[0].push([b,w,M])):Math.abs(this.vertices[g].y)===e?(w.x=(w.x+M.x)/2,this.faces.push(new THREE.Face3(m,v,g,[y,R,x])),this.faceVertexUvs[0].push([b,_,w])):(this.faces.push(new THREE.Face3(m,v,T,[y,R,H])),this.faceVertexUvs[0].push([b,_,M]),this.faces.push(new THREE.Face3(v,g,T,[R.clone(),x,H.clone()])),this.faceVertexUvs[0].push([_.clone(),w,M.clone()]))}this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(e,t){t=t||{};var r=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,r,t)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(e,t,r,i,n){THREE.Geometry.call(this),this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:i,arc:n},e=e||100,t=t||40,r=r||8,i=i||6,n=n||2*Math.PI;for(var a=new THREE.Vector3,o=[],s=[],h=0;r>=h;h++)for(var l=0;i>=l;l++){var c=l/i*n,u=h/r*Math.PI*2;a.x=e*Math.cos(c),a.y=e*Math.sin(c);var f=new THREE.Vector3;f.x=(e+t*Math.cos(u))*Math.cos(c),f.y=(e+t*Math.cos(u))*Math.sin(c),f.z=t*Math.sin(u),this.vertices.push(f),o.push(new THREE.Vector2(l/i,h/r)),s.push(f.clone().sub(a).normalize())}for(var h=1;r>=h;h++)for(var l=1;i>=l;l++){var E=(i+1)*h+l-1,p=(i+1)*(h-1)+l-1,d=(i+1)*(h-1)+l,m=(i+1)*h+l,v=new THREE.Face3(E,p,m,[s[E].clone(),s[p].clone(),s[m].clone()]);this.faces.push(v),this.faceVertexUvs[0].push([o[E].clone(),o[p].clone(),o[m].clone()]),v=new THREE.Face3(p,d,m,[s[p].clone(),s[d].clone(),s[m].clone()]),this.faces.push(v),this.faceVertexUvs[0].push([o[p].clone(),o[d].clone(),o[m].clone()])}this.computeFaceNormals()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(e,t,r,i,n,a,o){function s(e,t,r,i,n){var a=Math.cos(e),o=Math.sin(e),s=t/r*e,h=Math.cos(s),l=i*(2+h)*.5*a,c=i*(2+h)*o*.5,u=n*i*Math.sin(s)*.5;return new THREE.Vector3(l,c,u)}THREE.Geometry.call(this),this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:i,p:n,q:a,heightScale:o},e=e||100,t=t||40,r=r||64,i=i||8,n=n||2,a=a||3,o=o||1;for(var h=new Array(r),l=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3,f=0;r>f;++f){h[f]=new Array(i);var E=f/r*2*n*Math.PI,p=s(E,a,n,e,o),d=s(E+.01,a,n,e,o);l.subVectors(d,p),c.addVectors(d,p),u.crossVectors(l,c),c.crossVectors(u,l),u.normalize(),c.normalize();for(var m=0;i>m;++m){var v=m/i*2*Math.PI,g=-t*Math.cos(v),T=t*Math.sin(v),y=new THREE.Vector3;y.x=p.x+g*c.x+T*u.x,y.y=p.y+g*c.y+T*u.y,y.z=p.z+g*c.z+T*u.z,h[f][m]=this.vertices.push(y)-1}}for(var f=0;r>f;++f)for(var m=0;i>m;++m){var R=(f+1)%r,x=(m+1)%i,H=h[f][m],b=h[R][m],_=h[R][x],w=h[f][x],M=new THREE.Vector2(f/r,m/i),S=new THREE.Vector2((f+1)/r,m/i),C=new THREE.Vector2((f+1)/r,(m+1)/i),A=new THREE.Vector2(f/r,(m+1)/i);this.faces.push(new THREE.Face3(H,b,w)),this.faceVertexUvs[0].push([M,S,A]),this.faces.push(new THREE.Face3(b,_,w)),this.faceVertexUvs[0].push([S.clone(),C,A.clone()])}this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(e,t,r,i,n){function a(e,t,r){return s.vertices.push(new THREE.Vector3(e,t,r))-1}THREE.Geometry.call(this),this.parameters={path:e,segments:t,radius:r,radialSegments:i,closed:n},t=t||64,r=r||1,i=i||8,n=n||!1;var o=[],s=this,h,l,c,u=t+1,f,E,p,d,m,v,g,T,y,R,x,H=new THREE.Vector3,b,_,w,M,S,C,A,L,P,F,D,U,V=new THREE.TubeGeometry.FrenetFrames(e,t,n),z=V.tangents,B=V.normals,k=V.binormals;for(this.tangents=z,this.normals=B,this.binormals=k,b=0;u>b;b++)for(o[b]=[],g=b/(u-1),x=e.getPointAt(g),h=z[b],l=B[b],c=k[b],_=0;i>_;_++)T=_/i*2*Math.PI,y=-r*Math.cos(T),R=r*Math.sin(T),H.copy(x),H.x+=y*l.x+R*c.x,H.y+=y*l.y+R*c.y,H.z+=y*l.z+R*c.z,o[b][_]=a(H.x,H.y,H.z);for(b=0;t>b;b++)for(_=0;i>_;_++)w=n?(b+1)%t:b+1,M=(_+1)%i,S=o[b][_],C=o[w][_],A=o[w][M],L=o[b][M],P=new THREE.Vector2(b/t,_/i),F=new THREE.Vector2((b+1)/t,_/i),D=new THREE.Vector2((b+1)/t,(_+1)/i),U=new THREE.Vector2(b/t,(_+1)/i),this.faces.push(new THREE.Face3(S,C,L)),this.faceVertexUvs[0].push([P,F,U]),this.faces.push(new THREE.Face3(C,A,L)),this.faceVertexUvs[0].push([F.clone(),D,U.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(e,t,r){function i(){h[0]=new THREE.Vector3,l[0]=new THREE.Vector3,d=Number.MAX_VALUE,m=Math.abs(s[0].x),v=Math.abs(s[0].y),g=Math.abs(s[0].z),d>=m&&(d=m,a.set(1,0,0)),d>=v&&(d=v,a.set(0,1,0)),d>=g&&a.set(0,0,1),c.crossVectors(s[0],a).normalize(),h[0].crossVectors(s[0],c),l[0].crossVectors(s[0],h[0])}var n=new THREE.Vector3,a=new THREE.Vector3,o=new THREE.Vector3,s=[],h=[],l=[],c=new THREE.Vector3,u=new THREE.Matrix4,f=t+1,E,p=1e-4,d,m,v,g,T,y,R;for(this.tangents=s,this.normals=h,this.binormals=l,T=0;f>T;T++)y=T/(f-1),s[T]=e.getTangentAt(y),s[T].normalize();for(i(),T=1;f>T;T++)h[T]=h[T-1].clone(),l[T]=l[T-1].clone(),c.crossVectors(s[T-1],s[T]),c.length()>p&&(c.normalize(),E=Math.acos(THREE.Math.clamp(s[T-1].dot(s[T]),-1,1)),h[T].applyMatrix4(u.makeRotationAxis(c,E))),l[T].crossVectors(s[T],h[T]);if(r)for(E=Math.acos(THREE.Math.clamp(h[0].dot(h[f-1]),-1,1)),E/=f-1,s[0].dot(c.crossVectors(h[0],h[f-1]))>0&&(E=-E),T=1;f>T;T++)h[T].applyMatrix4(u.makeRotationAxis(s[T],E*T)),l[T].crossVectors(s[T],h[T])},THREE.PolyhedronGeometry=function(e,t,r,i){function n(e){var t=e.normalize().clone();t.index=c.vertices.push(t)-1;var r=s(e)/2/Math.PI+.5,i=h(e)/Math.PI+.5;return t.uv=new THREE.Vector2(r,1-i),t}function a(e,t,r){var i=new THREE.Face3(e.index,t.index,r.index,[e.clone(),t.clone(),r.clone()]);c.faces.push(i),y.copy(e).add(t).add(r).divideScalar(3);var n=s(y);c.faceVertexUvs[0].push([l(e.uv,e,n),l(t.uv,t,n),l(r.uv,r,n)])}function o(e,t){for(var r=Math.pow(2,t),i=Math.pow(4,t),o=n(c.vertices[e.a]),s=n(c.vertices[e.b]),h=n(c.vertices[e.c]),l=[],u=0;r>=u;u++){l[u]=[];for(var f=n(o.clone().lerp(h,u/r)),E=n(s.clone().lerp(h,u/r)),p=r-u,d=0;p>=d;d++)0==d&&u==r?l[u][d]=f:l[u][d]=n(f.clone().lerp(E,d/p))}for(var u=0;r>u;u++)for(var d=0;2*(r-u)-1>d;d++){var m=Math.floor(d/2);d%2==0?a(l[u][m+1],l[u+1][m],l[u][m]):a(l[u][m+1],l[u+1][m+1],l[u+1][m])}}function s(e){return Math.atan2(e.z,-e.x)}function h(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}function l(e,t,r){return 0>r&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new THREE.Vector2(r/2/Math.PI+.5,e.y)),e.clone()}THREE.Geometry.call(this),r=r||1,i=i||0;for(var c=this,u=0,f=e.length;f>u;u+=3)n(new THREE.Vector3(e[u],e[u+1],e[u+2]));for(var E=[],p=this.vertices,d=[],u=0,m=0,f=t.length;f>u;u+=3,m++){var v=p[t[u]],g=p[t[u+1]],T=p[t[u+2]];d[m]=new THREE.Face3(v.index,g.index,T.index,[v.clone(),g.clone(),T.clone()])}for(var y=new THREE.Vector3,u=0,f=d.length;f>u;u++)o(d[u],i);for(var u=0,f=this.faceVertexUvs[0].length;f>u;u++){var R=this.faceVertexUvs[0][u],x=R[0].x,H=R[1].x,b=R[2].x,_=Math.max(x,Math.max(H,b)),w=Math.min(x,Math.min(H,b));_>.9&&.1>w&&(.2>x&&(R[0].x+=1),.2>H&&(R[1].x+=1),.2>b&&(R[2].x+=1))}for(var u=0,f=this.vertices.length;f>u;u++)this.vertices[u].multiplyScalar(r);this.mergeVertices(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(e,t){this.parameters={radius:e,detail:t};var r=(1+Math.sqrt(5))/2,i=[-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],n=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];THREE.PolyhedronGeometry.call(this,i,n,e,t)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(e,t){this.parameters={radius:e,detail:t};var r=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];THREE.PolyhedronGeometry.call(this,r,i,e,t)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(e,t){var r=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];THREE.PolyhedronGeometry.call(this,r,i,e,t)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(e,t,r){THREE.Geometry.call(this);var i=this.vertices,n=this.faces,a=this.faceVertexUvs[0],o,s,h,l,c,u,f=r+1,E=t+1;for(o=0;r>=o;o++)for(u=o/r,h=0;t>=h;h++)c=h/t,l=e(c,u),i.push(l);var p,d,m,v,g,T,y,R;for(o=0;r>o;o++)for(h=0;t>h;h++)p=o*E+h,d=o*E+h+1,m=(o+1)*E+h+1,v=(o+1)*E+h,g=new THREE.Vector2(h/t,o/r),T=new THREE.Vector2((h+1)/t,o/r),y=new THREE.Vector2((h+1)/t,(o+1)/r),R=new THREE.Vector2(h/t,(o+1)/r),n.push(new THREE.Face3(p,d,v)),a.push([g,T,R]),n.push(new THREE.Face3(d,m,v)),a.push([T.clone(),y,R.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(e){e=e||1;var t=new Float32Array([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e]),r=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]),i=new THREE.BufferGeometry;i.addAttribute("position",new THREE.BufferAttribute(t,3)),i.addAttribute("color",new THREE.BufferAttribute(r,3));var n=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,i,n,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(){var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var t=new THREE.CylinderGeometry(0,.5,1,5,1);return t.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),function(r,i,n,a,o,s){THREE.Object3D.call(this),void 0===a&&(a=16776960),void 0===n&&(n=1),void 0===o&&(o=.2*n),void 0===s&&(s=.2*o),this.position.copy(i),this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:a})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new THREE.Mesh(t,new THREE.MeshBasicMaterial({color:a})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(r),this.setLength(n,o,s)}}(),THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(){var e=new THREE.Vector3,t;return function(r){r.y>.99999?this.quaternion.set(0,0,0,1):r.y<-.99999?this.quaternion.set(1,0,0,0):(e.set(r.z,0,-r.x).normalize(),t=Math.acos(r.y),this.quaternion.setFromAxisAngle(e,t))}}(),THREE.ArrowHelper.prototype.setLength=function(e,t,r){void 0===t&&(t=.2*e),void 0===r&&(r=.2*t),
this.line.scale.set(1,e,1),this.line.updateMatrix(),this.cone.scale.set(r,t,r),this.cone.position.y=e,this.cone.updateMatrix()},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.set(e),this.cone.material.color.set(e)},THREE.BoxHelper=function(e){var t=new THREE.BufferGeometry;t.addAttribute("position",new THREE.BufferAttribute(new Float32Array(72),3)),THREE.Line.call(this,t,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces),void 0!==e&&this.update(e)},THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype),THREE.BoxHelper.prototype.update=function(e){var t=e.geometry;null===t.boundingBox&&t.computeBoundingBox();var r=t.boundingBox.min,i=t.boundingBox.max,n=this.geometry.attributes.position.array;n[0]=i.x,n[1]=i.y,n[2]=i.z,n[3]=r.x,n[4]=i.y,n[5]=i.z,n[6]=r.x,n[7]=i.y,n[8]=i.z,n[9]=r.x,n[10]=r.y,n[11]=i.z,n[12]=r.x,n[13]=r.y,n[14]=i.z,n[15]=i.x,n[16]=r.y,n[17]=i.z,n[18]=i.x,n[19]=r.y,n[20]=i.z,n[21]=i.x,n[22]=i.y,n[23]=i.z,n[24]=i.x,n[25]=i.y,n[26]=r.z,n[27]=r.x,n[28]=i.y,n[29]=r.z,n[30]=r.x,n[31]=i.y,n[32]=r.z,n[33]=r.x,n[34]=r.y,n[35]=r.z,n[36]=r.x,n[37]=r.y,n[38]=r.z,n[39]=i.x,n[40]=r.y,n[41]=r.z,n[42]=i.x,n[43]=r.y,n[44]=r.z,n[45]=i.x,n[46]=i.y,n[47]=r.z,n[48]=i.x,n[49]=i.y,n[50]=i.z,n[51]=i.x,n[52]=i.y,n[53]=r.z,n[54]=r.x,n[55]=i.y,n[56]=i.z,n[57]=r.x,n[58]=i.y,n[59]=r.z,n[60]=r.x,n[61]=r.y,n[62]=i.z,n[63]=r.x,n[64]=r.y,n[65]=r.z,n[66]=i.x,n[67]=r.y,n[68]=i.z,n[69]=i.x,n[70]=r.y,n[71]=r.z,this.geometry.attributes.position.needsUpdate=!0,this.geometry.computeBoundingSphere(),this.matrixAutoUpdate=!1,this.matrixWorld=e.matrixWorld},THREE.BoundingBoxHelper=function(e,t){var r=void 0!==t?t:8947848;this.object=e,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:r,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(e){function t(e,t,i){r(e,i),r(t,i)}function r(e,t){i.vertices.push(new THREE.Vector3),i.colors.push(new THREE.Color(t)),void 0===a[e]&&(a[e]=[]),a[e].push(i.vertices.length-1)}var i=new THREE.Geometry,n=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),a={},o=16755200,s=16711680,h=43775,l=16777215,c=3355443;t("n1","n2",o),t("n2","n4",o),t("n4","n3",o),t("n3","n1",o),t("f1","f2",o),t("f2","f4",o),t("f4","f3",o),t("f3","f1",o),t("n1","f1",o),t("n2","f2",o),t("n3","f3",o),t("n4","f4",o),t("p","n1",s),t("p","n2",s),t("p","n3",s),t("p","n4",s),t("u1","u2",h),t("u2","u3",h),t("u3","u1",h),t("c","t",l),t("p","c",c),t("cn1","cn2",c),t("cn3","cn4",c),t("cf1","cf2",c),t("cf3","cf4",c),THREE.Line.call(this,i,n,THREE.LinePieces),this.camera=e,this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Camera,r=new THREE.Projector;return function(){function i(i,a,o,s){e.set(a,o,s),r.unprojectVector(e,t);var h=n.pointMap[i];if(void 0!==h)for(var l=0,c=h.length;c>l;l++)n.geometry.vertices[h[l]].copy(e)}var n=this,a=1,o=1;t.projectionMatrix.copy(this.camera.projectionMatrix),i("c",0,0,-1),i("t",0,0,1),i("n1",-a,-o,-1),i("n2",a,-o,-1),i("n3",-a,o,-1),i("n4",a,o,-1),i("f1",-a,-o,1),i("f2",a,-o,1),i("f3",-a,o,1),i("f4",a,o,1),i("u1",.7*a,1.1*o,-1),i("u2",.7*-a,1.1*o,-1),i("u3",0,2*o,-1),i("cf1",-a,0,1),i("cf2",a,0,1),i("cf3",0,-o,1),i("cf4",0,o,1),i("cn1",-a,0,-1),i("cn2",a,0,-1),i("cn3",0,-o,-1),i("cn4",0,o,-1),this.geometry.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,t=t||1;var r=new THREE.Geometry;r.vertices.push(new THREE.Vector3(-t,t,0),new THREE.Vector3(t,t,0),new THREE.Vector3(t,-t,0),new THREE.Vector3(-t,-t,0),new THREE.Vector3(-t,t,0));var i=new THREE.LineBasicMaterial({fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Line(r,i),this.add(this.lightPlane),r=new THREE.Geometry,r.vertices.push(new THREE.Vector3,new THREE.Vector3),i=new THREE.LineBasicMaterial({fog:!1}),i.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(r,i),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(){e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),r.subVectors(t,e),this.lightPlane.lookAt(r),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(r),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.EdgesHelper=function(e,t){var r=void 0!==t?t:16777215,i=[0,0],n={},a=function(e,t){return e-t},o=["a","b","c"],s=new THREE.BufferGeometry,h=e.geometry.clone();h.mergeVertices(),h.computeFaceNormals();for(var l=h.vertices,c=h.faces,u=0,f=0,E=c.length;E>f;f++)for(var p=c[f],d=0;3>d;d++){i[0]=p[o[d]],i[1]=p[o[(d+1)%3]],i.sort(a);var m=i.toString();void 0===n[m]?(n[m]={vert1:i[0],vert2:i[1],face1:f,face2:void 0},u++):n[m].face2=f}s.addAttribute("position",new THREE.Float32Attribute(2*u*3,3));var v=s.attributes.position.array,g=0;for(var m in n){var T=n[m];if(void 0===T.face2||c[T.face1].normal.dot(c[T.face2].normal)<.9999){var y=l[T.vert1];v[g++]=y.x,v[g++]=y.y,v[g++]=y.z,y=l[T.vert2],v[g++]=y.x,v[g++]=y.y,v[g++]=y.z}}THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=e.matrixWorld},THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper=function(e,t,r,i){this.object=e,this.size=void 0!==t?t:1;for(var n=void 0!==r?r:16776960,a=void 0!==i?i:1,o=new THREE.Geometry,s=this.object.geometry.faces,h=0,l=s.length;l>h;h++)o.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,o,new THREE.LineBasicMaterial({color:n,linewidth:a}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper.prototype.update=function(){var e=this.geometry.vertices,t=this.object,r=t.geometry.vertices,i=t.geometry.faces,n=t.matrixWorld;t.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(n);for(var a=0,o=0,s=i.length;s>a;a++,o+=2){var h=i[a];e[o].copy(r[h.a]).add(r[h.b]).add(r[h.c]).divideScalar(3).applyMatrix4(n),e[o+1].copy(h.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(e[o])}return this.geometry.verticesNeedUpdate=!0,this},THREE.GridHelper=function(e,t){var r=new THREE.Geometry,i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var n=-e;e>=n;n+=t){r.vertices.push(new THREE.Vector3(-e,0,n),new THREE.Vector3(e,0,n),new THREE.Vector3(n,0,-e),new THREE.Vector3(n,0,e));var a=0===n?this.color1:this.color2;r.colors.push(a,a,a,a)}THREE.Line.call(this,r,i,THREE.LinePieces)},THREE.GridHelper.prototype=Object.create(THREE.Line.prototype),THREE.GridHelper.prototype.setColors=function(e,t){this.color1.set(e),this.color2.set(t),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(e,t,r,i){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color];var n=new THREE.SphereGeometry(t,4,2);n.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var a=0,o=8;o>a;a++)n.faces[a].color=this.colors[4>a?0:1];var s=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(n,s),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(e,t){this.light=e,this.light.updateMatrixWorld();var r=new THREE.SphereGeometry(t,4,2),i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,r,i),this.matrixWorld=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SkeletonHelper=function(e){this.bones=this.getBoneList(e);for(var t=new THREE.Geometry,r=0;r<this.bones.length;r++){var i=this.bones[r];i.parent instanceof THREE.Bone&&(t.vertices.push(new THREE.Vector3),t.vertices.push(new THREE.Vector3),t.colors.push(new THREE.Color(0,0,1)),t.colors.push(new THREE.Color(0,1,0)))}var n=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});THREE.Line.call(this,t,n,THREE.LinePieces),this.root=e,this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.update()},THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype),THREE.SkeletonHelper.prototype.getBoneList=function(e){var t=[];e instanceof THREE.Bone&&t.push(e);for(var r=0;r<e.children.length;r++)t.push.apply(t,this.getBoneList(e.children[r]));return t},THREE.SkeletonHelper.prototype.update=function(){for(var e=this.geometry,t=(new THREE.Matrix4).getInverse(this.root.matrixWorld),r=new THREE.Matrix4,i=0,n=0;n<this.bones.length;n++){var a=this.bones[n];a.parent instanceof THREE.Bone&&(r.multiplyMatrices(t,a.matrixWorld),e.vertices[i].setFromMatrixPosition(r),r.multiplyMatrices(t,a.parent.matrixWorld),e.vertices[i+1].setFromMatrixPosition(r),i+=2)}e.verticesNeedUpdate=!0,e.computeBoundingSphere()},THREE.SpotLightHelper=function(e){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1;var t=new THREE.CylinderGeometry(0,1,1,8,1,!0);t.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),t.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var r=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(t,r),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){var r=this.light.distance?this.light.distance:1e4,i=r*Math.tan(this.light.angle);this.cone.scale.set(i,i,r),e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(t.sub(e)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(e,t,r,i){this.object=e,this.size=void 0!==t?t:1;for(var n=void 0!==r?r:16711680,a=void 0!==i?i:1,o=new THREE.Geometry,s=e.geometry.vertices,h=e.geometry.faces,l=0,c=h.length;c>l;l++)for(var u=h[l],f=0,E=u.vertexNormals.length;E>f;f++)o.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,o,new THREE.LineBasicMaterial({color:n,linewidth:a}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexNormalsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){var r=["a","b","c","d"];this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var i=this.geometry.vertices,n=this.object.geometry.vertices,a=this.object.geometry.faces,o=this.object.matrixWorld,s=0,h=0,l=a.length;l>h;h++)for(var c=a[h],u=0,f=c.vertexNormals.length;f>u;u++){var E=c[r[u]],p=n[E],d=c.vertexNormals[u];i[s].copy(p).applyMatrix4(o),t.copy(d).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),t.add(i[s]),s+=1,i[s].copy(t),s+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.VertexTangentsHelper=function(e,t,r,i){this.object=e,this.size=void 0!==t?t:1;for(var n=void 0!==r?r:255,a=void 0!==i?i:1,o=new THREE.Geometry,s=e.geometry.vertices,h=e.geometry.faces,l=0,c=h.length;c>l;l++)for(var u=h[l],f=0,E=u.vertexTangents.length;E>f;f++)o.vertices.push(new THREE.Vector3),o.vertices.push(new THREE.Vector3);THREE.Line.call(this,o,new THREE.LineBasicMaterial({color:n,linewidth:a}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.update()},THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexTangentsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){var r=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var i=this.geometry.vertices,n=this.object.geometry.vertices,a=this.object.geometry.faces,o=this.object.matrixWorld,s=0,h=0,l=a.length;l>h;h++)for(var c=a[h],u=0,f=c.vertexTangents.length;f>u;u++){var E=c[r[u]],p=n[E],d=c.vertexTangents[u];i[s].copy(p).applyMatrix4(o),t.copy(d).transformDirection(o).multiplyScalar(this.size),t.add(i[s]),s+=1,i[s].copy(t),s+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.WireframeHelper=function(e,t){var r=void 0!==t?t:16777215,i=[0,0],n={},a=function(e,t){return e-t},o=["a","b","c"],s=new THREE.BufferGeometry;if(e.geometry instanceof THREE.Geometry){for(var h=e.geometry.vertices,l=e.geometry.faces,c=0,u=new Uint32Array(6*l.length),f=0,E=l.length;E>f;f++)for(var p=l[f],d=0;3>d;d++){i[0]=p[o[d]],i[1]=p[o[(d+1)%3]],i.sort(a);var m=i.toString();void 0===n[m]&&(u[2*c]=i[0],u[2*c+1]=i[1],n[m]=!0,c++)}for(var v=new Float32Array(2*c*3),f=0,E=c;E>f;f++)for(var d=0;2>d;d++){var g=h[u[2*f+d]],T=6*f+3*d;v[T+0]=g.x,v[T+1]=g.y,v[T+2]=g.z}s.addAttribute("position",new THREE.BufferAttribute(v,3))}else if(e.geometry instanceof THREE.BufferGeometry)if(void 0!==e.geometry.attributes.index){for(var h=e.geometry.attributes.position.array,y=e.geometry.attributes.index.array,R=e.geometry.offsets,c=0,u=new Uint32Array(2*y.length),x=0,H=R.length;H>x;++x)for(var b=R[x].start,_=R[x].count,T=R[x].index,f=b,w=b+_;w>f;f+=3)for(var d=0;3>d;d++){i[0]=T+y[f+d],i[1]=T+y[f+(d+1)%3],i.sort(a);var m=i.toString();void 0===n[m]&&(u[2*c]=i[0],u[2*c+1]=i[1],n[m]=!0,c++)}for(var v=new Float32Array(2*c*3),f=0,E=c;E>f;f++)for(var d=0;2>d;d++){var T=6*f+3*d,M=3*u[2*f+d];v[T+0]=h[M],v[T+1]=h[M+1],v[T+2]=h[M+2]}s.addAttribute("position",new THREE.BufferAttribute(v,3))}else{for(var h=e.geometry.attributes.position.array,c=h.length/3,S=c/3,v=new Float32Array(2*c*3),f=0,E=S;E>f;f++)for(var d=0;3>d;d++){var T=18*f+6*d,C=9*f+3*d;v[T+0]=h[C],v[T+1]=h[C+1],v[T+2]=h[C+2];var M=9*f+3*((d+1)%3);v[T+3]=h[M],v[T+4]=h[M+1],v[T+5]=h[M+2]}s.addAttribute("position",new THREE.BufferAttribute(v,3))}THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=e.matrixWorld},THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype),THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(e){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(e,t,r,i,n){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,r,i,n)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(e,t,r,i,n,a){void 0===t&&(t=-1),void 0===r&&(r=0),void 0===a&&(a=1),void 0===n&&(n=new THREE.Color(16777215)),void 0===i&&(i=THREE.NormalBlending),r=Math.min(r,Math.max(0,r)),this.lensFlares.push({texture:e,size:t,distance:r,x:0,y:0,z:0,scale:1,rotation:1,opacity:a,color:n,blending:i})},THREE.LensFlare.prototype.updateLensFlares=function(){var e,t=this.lensFlares.length,r,i=2*-this.positionScreen.x,n=2*-this.positionScreen.y;for(e=0;t>e;e++)r=this.lensFlares[e],r.x=this.positionScreen.x+i*r.distance,r.y=this.positionScreen.y+n*r.distance,r.wantedRotation=r.x*Math.PI*.25,r.rotation+=.25*(r.wantedRotation-r.rotation)},THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var r=this.geometry.morphTargets.length,i="__default",n=0,a=r-1,o=r/1;this.createAnimation(i,n,a,o),this.setAnimationWeight(i,1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,r,i){var n={startFrame:t,endFrame:r,length:r-t+1,fps:i,duration:(r-t)/i,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=n,this.animationsList.push(n)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t=/([a-z]+)_?(\d+)/,r,i={},n=this.geometry,a=0,o=n.morphTargets.length;o>a;a++){var s=n.morphTargets[a],h=s.name.match(t);if(h&&h.length>1){var l=h[1],c=h[2];i[l]||(i[l]={start:1/0,end:-(1/0)});var u=i[l];a<u.start&&(u.start=a),a>u.end&&(u.end=a),r||(r=l)}}for(var l in i){var u=i[l];this.createAnimation(l,u.start,u.end,e)}this.firstAnimation=r},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];t&&(t.direction=1,t.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];t&&(t.direction=-1,t.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var r=this.animationsMap[e];r&&(r.fps=t,r.duration=(r.end-r.start)/r.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var r=this.animationsMap[e];r&&(r.duration=t,r.fps=(r.end-r.start)/r.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var r=this.animationsMap[e];r&&(r.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var r=this.animationsMap[e];r&&(r.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0,r=this.animationsMap[e];return r&&(t=r.time),t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1,r=this.animationsMap[e];return r&&(t=r.duration),t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){var t=this.animationsMap[e];t&&(t.active=!1)},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,r=this.animationsList.length;r>t;t++){var i=this.animationsList[t];if(i.active){var n=i.duration/i.length;i.time+=i.direction*e,i.mirroredLoop?(i.time>i.duration||i.time<0)&&(i.direction*=-1,i.time>i.duration&&(i.time=i.duration,i.directionBackwards=!0),i.time<0&&(i.time=0,i.directionBackwards=!1)):(i.time=i.time%i.duration,i.time<0&&(i.time+=i.duration));var a=i.startFrame+THREE.Math.clamp(Math.floor(i.time/n),0,i.length-1),o=i.weight;a!==i.currentFrame&&(this.morphTargetInfluences[i.lastFrame]=0,this.morphTargetInfluences[i.currentFrame]=1*o,this.morphTargetInfluences[a]=0,i.lastFrame=i.currentFrame,i.currentFrame=a);var s=i.time%n/n;i.directionBackwards&&(s=1-s),this.morphTargetInfluences[i.currentFrame]=s*o,this.morphTargetInfluences[i.lastFrame]=(1-s)*o}}},THREE.LensFlarePlugin=function(){function e(e,t){var i=r.createProgram(),n=r.createShader(r.FRAGMENT_SHADER),a=r.createShader(r.VERTEX_SHADER),o="precision "+t+" float;\n";return r.shaderSource(n,o+e.fragmentShader),r.shaderSource(a,o+e.vertexShader),r.compileShader(n),r.compileShader(a),r.attachShader(i,n),r.attachShader(i,a),r.linkProgram(i),i}var t=[],r,i,n,a={};this.init=function(t){r=t.context,i=t,n=t.getPrecision(),a.vertices=new Float32Array(16),a.faces=new Uint16Array(6);var o=0;a.vertices[o++]=-1,a.vertices[o++]=-1,a.vertices[o++]=0,a.vertices[o++]=0,a.vertices[o++]=1,a.vertices[o++]=-1,a.vertices[o++]=1,a.vertices[o++]=0,a.vertices[o++]=1,a.vertices[o++]=1,a.vertices[o++]=1,a.vertices[o++]=1,a.vertices[o++]=-1,a.vertices[o++]=1,a.vertices[o++]=0,a.vertices[o++]=1,o=0,a.faces[o++]=0,a.faces[o++]=1,a.faces[o++]=2,a.faces[o++]=0,a.faces[o++]=2,a.faces[o++]=3,a.vertexBuffer=r.createBuffer(),a.elementBuffer=r.createBuffer(),r.bindBuffer(r.ARRAY_BUFFER,a.vertexBuffer),r.bufferData(r.ARRAY_BUFFER,a.vertices,r.STATIC_DRAW),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,a.elementBuffer),r.bufferData(r.ELEMENT_ARRAY_BUFFER,a.faces,r.STATIC_DRAW),a.tempTexture=r.createTexture(),a.occlusionTexture=r.createTexture(),r.bindTexture(r.TEXTURE_2D,a.tempTexture),r.texImage2D(r.TEXTURE_2D,0,r.RGB,16,16,0,r.RGB,r.UNSIGNED_BYTE,null),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.bindTexture(r.TEXTURE_2D,a.occlusionTexture),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,16,16,0,r.RGBA,r.UNSIGNED_BYTE,null),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(a.hasVertexTexture=!1,a.program=e(THREE.ShaderFlares.lensFlare,n)):(a.hasVertexTexture=!0,a.program=e(THREE.ShaderFlares.lensFlareVertexTexture,n)),a.attributes={},a.uniforms={},a.attributes.vertex=r.getAttribLocation(a.program,"position"),a.attributes.uv=r.getAttribLocation(a.program,"uv"),a.uniforms.renderType=r.getUniformLocation(a.program,"renderType"),a.uniforms.map=r.getUniformLocation(a.program,"map"),a.uniforms.occlusionMap=r.getUniformLocation(a.program,"occlusionMap"),a.uniforms.opacity=r.getUniformLocation(a.program,"opacity"),a.uniforms.color=r.getUniformLocation(a.program,"color"),a.uniforms.scale=r.getUniformLocation(a.program,"scale"),a.uniforms.rotation=r.getUniformLocation(a.program,"rotation"),a.uniforms.screenPosition=r.getUniformLocation(a.program,"screenPosition")},this.render=function(e,n,o,s){if(t.length=0,e.traverseVisible(function(e){e instanceof THREE.LensFlare&&t.push(e)}),0!==t.length){var h=new THREE.Vector3,l=s/o,c=.5*o,u=.5*s,f=16/s,E=new THREE.Vector2(f*l,f),p=new THREE.Vector3(1,1,0),d=new THREE.Vector2(1,1),m=a.uniforms,v=a.attributes;r.useProgram(a.program),r.enableVertexAttribArray(a.attributes.vertex),r.enableVertexAttribArray(a.attributes.uv),r.uniform1i(m.occlusionMap,0),r.uniform1i(m.map,1),r.bindBuffer(r.ARRAY_BUFFER,a.vertexBuffer),r.vertexAttribPointer(v.vertex,2,r.FLOAT,!1,16,0),r.vertexAttribPointer(v.uv,2,r.FLOAT,!1,16,8),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,a.elementBuffer),r.disable(r.CULL_FACE),r.depthMask(!1);for(var g=0,T=t.length;T>g;g++){f=16/s,E.set(f*l,f);var y=t[g];if(h.set(y.matrixWorld.elements[12],y.matrixWorld.elements[13],y.matrixWorld.elements[14]),h.applyMatrix4(n.matrixWorldInverse),h.applyProjection(n.projectionMatrix),p.copy(h),d.x=p.x*c+c,d.y=p.y*u+u,a.hasVertexTexture||d.x>0&&d.x<o&&d.y>0&&d.y<s){r.activeTexture(r.TEXTURE1),r.bindTexture(r.TEXTURE_2D,a.tempTexture),r.copyTexImage2D(r.TEXTURE_2D,0,r.RGB,d.x-8,d.y-8,16,16,0),r.uniform1i(m.renderType,0),r.uniform2f(m.scale,E.x,E.y),r.uniform3f(m.screenPosition,p.x,p.y,p.z),r.disable(r.BLEND),r.enable(r.DEPTH_TEST),r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0),r.activeTexture(r.TEXTURE0),r.bindTexture(r.TEXTURE_2D,a.occlusionTexture),r.copyTexImage2D(r.TEXTURE_2D,0,r.RGBA,d.x-8,d.y-8,16,16,0),r.uniform1i(m.renderType,1),r.disable(r.DEPTH_TEST),r.activeTexture(r.TEXTURE1),r.bindTexture(r.TEXTURE_2D,a.tempTexture),r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0),y.positionScreen.copy(p),y.customUpdateCallback?y.customUpdateCallback(y):y.updateLensFlares(),r.uniform1i(m.renderType,2),r.enable(r.BLEND);for(var R=0,x=y.lensFlares.length;x>R;R++){var H=y.lensFlares[R];H.opacity>.001&&H.scale>.001&&(p.x=H.x,p.y=H.y,p.z=H.z,f=H.size*H.scale/s,E.x=f*l,E.y=f,r.uniform3f(m.screenPosition,p.x,p.y,p.z),r.uniform2f(m.scale,E.x,E.y),r.uniform1f(m.rotation,H.rotation),r.uniform1f(m.opacity,H.opacity),r.uniform3f(m.color,H.color.r,H.color.g,H.color.b),i.setBlending(H.blending,H.blendEquation,H.blendSrc,H.blendDst),i.setTexture(H.texture,1),r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0))}}}r.enable(r.CULL_FACE),r.enable(r.DEPTH_TEST),r.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){function e(t,r,i){if(r.visible){var n=t.__webglObjects[r.id];if(n&&r.castShadow&&(r.frustumCulled===!1||u.intersectsObject(r)===!0))for(var a=0,o=n.length;o>a;a++){var s=n[a];r._modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,r.matrixWorld),m.push(s)}for(var a=0,o=r.children.length;o>a;a++)e(t,r.children[a],i)}}function t(e,t){var r=new THREE.DirectionalLight;r.isVirtual=!0,r.onlyShadow=!0,r.castShadow=!0,r.shadowCameraNear=e.shadowCameraNear,r.shadowCameraFar=e.shadowCameraFar,r.shadowCameraLeft=e.shadowCameraLeft,r.shadowCameraRight=e.shadowCameraRight,r.shadowCameraBottom=e.shadowCameraBottom,r.shadowCameraTop=e.shadowCameraTop,r.shadowCameraVisible=e.shadowCameraVisible,r.shadowDarkness=e.shadowDarkness,r.shadowBias=e.shadowCascadeBias[t],r.shadowMapWidth=e.shadowCascadeWidth[t],r.shadowMapHeight=e.shadowCascadeHeight[t],r.pointsWorld=[],r.pointsFrustum=[];for(var i=r.pointsWorld,n=r.pointsFrustum,a=0;8>a;a++)i[a]=new THREE.Vector3,n[a]=new THREE.Vector3;var o=e.shadowCascadeNearZ[t],s=e.shadowCascadeFarZ[t];return n[0].set(-1,-1,o),n[1].set(1,-1,o),n[2].set(-1,1,o),n[3].set(1,1,o),n[4].set(-1,-1,s),n[5].set(1,-1,s),n[6].set(-1,1,s),n[7].set(1,1,s),r}function r(e,t){var r=e.shadowCascadeArray[t];r.position.copy(e.position),r.target.position.copy(e.target.position),r.lookAt(r.target),r.shadowCameraVisible=e.shadowCameraVisible,r.shadowDarkness=e.shadowDarkness,r.shadowBias=e.shadowCascadeBias[t];var i=e.shadowCascadeNearZ[t],n=e.shadowCascadeFarZ[t],a=r.pointsFrustum;a[0].z=i,a[1].z=i,a[2].z=i,a[3].z=i,a[4].z=n,a[5].z=n,a[6].z=n,a[7].z=n}function i(e,t){var r=t.shadowCamera,i=t.pointsFrustum,n=t.pointsWorld;E.set(1/0,1/0,1/0),p.set(-(1/0),-(1/0),-(1/0));for(var a=0;8>a;a++){var o=n[a];o.copy(i[a]),THREE.ShadowMapPlugin.__projector.unprojectVector(o,e),o.applyMatrix4(r.matrixWorldInverse),o.x<E.x&&(E.x=o.x),o.x>p.x&&(p.x=o.x),o.y<E.y&&(E.y=o.y),o.y>p.y&&(p.y=o.y),o.z<E.z&&(E.z=o.z),o.z>p.z&&(p.z=o.z)}r.left=E.x,r.right=p.x,r.top=p.y,r.bottom=E.y,r.updateProjectionMatrix()}function n(e){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[0]:e.material}var a,o,s,h,l,c,u=new THREE.Frustum,f=new THREE.Matrix4,E=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3,m=[];this.init=function(e){a=e.context,o=e;var t=THREE.ShaderLib.depthRGBA,r=THREE.UniformsUtils.clone(t.uniforms);s=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:r}),h=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:r,morphTargets:!0}),l=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:r,skinning:!0}),c=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:r,morphTargets:!0,skinning:!0}),s._shadowPass=!0,h._shadowPass=!0,l._shadowPass=!0,c._shadowPass=!0},this.render=function(e,t){o.shadowMapEnabled&&o.shadowMapAutoUpdate&&this.update(e,t)},this.update=function(E,p){var v,g,T,y,R,x,H,b,_,w,M,S,C,A,L=[],P=0,F=null;for(a.clearColor(1,1,1,1),a.disable(a.BLEND),a.enable(a.CULL_FACE),a.frontFace(a.CCW),o.shadowMapCullFace===THREE.CullFaceFront?a.cullFace(a.FRONT):a.cullFace(a.BACK),o.setDepthTest(!0),v=0,g=E.__lights.length;g>v;v++)if(A=E.__lights[v],A.castShadow)if(A instanceof THREE.DirectionalLight&&A.shadowCascade)for(R=0;R<A.shadowCascadeCount;R++){var D;if(A.shadowCascadeArray[R])D=A.shadowCascadeArray[R];else{D=t(A,R),D.originalCamera=p;var U=new THREE.Gyroscope;U.position.copy(A.shadowCascadeOffset),U.add(D),U.add(D.target),p.add(U),A.shadowCascadeArray[R]=D,console.log("Created virtualLight",D)}r(A,R),L[P]=D,P++}else L[P]=A,P++;for(v=0,g=L.length;g>v;v++){if(A=L[v],!A.shadowMap){var V=THREE.LinearFilter;o.shadowMapType===THREE.PCFSoftShadowMap&&(V=THREE.NearestFilter);var z={minFilter:V,magFilter:V,format:THREE.RGBAFormat};A.shadowMap=new THREE.WebGLRenderTarget(A.shadowMapWidth,A.shadowMapHeight,z),A.shadowMapSize=new THREE.Vector2(A.shadowMapWidth,A.shadowMapHeight),A.shadowMatrix=new THREE.Matrix4}if(!A.shadowCamera){if(A instanceof THREE.SpotLight)A.shadowCamera=new THREE.PerspectiveCamera(A.shadowCameraFov,A.shadowMapWidth/A.shadowMapHeight,A.shadowCameraNear,A.shadowCameraFar);else{if(!(A instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}A.shadowCamera=new THREE.OrthographicCamera(A.shadowCameraLeft,A.shadowCameraRight,A.shadowCameraTop,A.shadowCameraBottom,A.shadowCameraNear,A.shadowCameraFar)}E.add(A.shadowCamera),E.autoUpdate===!0&&E.updateMatrixWorld()}A.shadowCameraVisible&&!A.cameraHelper&&(A.cameraHelper=new THREE.CameraHelper(A.shadowCamera),A.shadowCamera.add(A.cameraHelper)),A.isVirtual&&D.originalCamera==p&&i(p,A),x=A.shadowMap,H=A.shadowMatrix,b=A.shadowCamera,b.position.setFromMatrixPosition(A.matrixWorld),d.setFromMatrixPosition(A.target.matrixWorld),b.lookAt(d),b.updateMatrixWorld(),b.matrixWorldInverse.getInverse(b.matrixWorld),A.cameraHelper&&(A.cameraHelper.visible=A.shadowCameraVisible),A.shadowCameraVisible&&A.cameraHelper.update(),H.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),H.multiply(b.projectionMatrix),H.multiply(b.matrixWorldInverse),f.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),u.setFromMatrix(f),o.setRenderTarget(x),o.clear(),m.length=0,e(E,E,b);var B,k,N;for(T=0,y=m.length;y>T;T++)S=m[T],C=S.object,w=S.buffer,B=n(C),k=void 0!==C.geometry.morphTargets&&C.geometry.morphTargets.length>0&&B.morphTargets,N=C instanceof THREE.SkinnedMesh&&B.skinning,M=C.customDepthMaterial?C.customDepthMaterial:N?k?c:l:k?h:s,o.setMaterialFaces(B),w instanceof THREE.BufferGeometry?o.renderBufferDirect(b,E.__lights,F,M,w,C):o.renderBuffer(b,E.__lights,F,M,w,C);var O=E.__webglObjectsImmediate;for(T=0,y=O.length;y>T;T++)S=O[T],C=S.object,C.visible&&C.castShadow&&(C._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,C.matrixWorld),o.renderImmediateObject(b,E.__lights,F,s,C))}var I=o.getClearColor(),G=o.getClearAlpha();a.clearColor(I.r,I.g,I.b,G),a.enable(a.BLEND),o.shadowMapCullFace===THREE.CullFaceFront&&a.cullFace(a.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function e(){var e=r.createProgram(),t=r.createShader(r.VERTEX_SHADER),n=r.createShader(r.FRAGMENT_SHADER);return r.shaderSource(t,["precision "+i.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),
r.shaderSource(n,["precision "+i.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),r.compileShader(t),r.compileShader(n),r.attachShader(e,t),r.attachShader(e,n),r.linkProgram(e),e}function t(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var r,i,n,a=[],o,s,h,l,c,u,f;this.init=function(t){r=t.context,i=t,o=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),s=new Uint16Array([0,1,2,0,2,3]),h=r.createBuffer(),l=r.createBuffer(),r.bindBuffer(r.ARRAY_BUFFER,h),r.bufferData(r.ARRAY_BUFFER,o,r.STATIC_DRAW),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,l),r.bufferData(r.ELEMENT_ARRAY_BUFFER,s,r.STATIC_DRAW),c=e(),u={position:r.getAttribLocation(c,"position"),uv:r.getAttribLocation(c,"uv")},f={uvOffset:r.getUniformLocation(c,"uvOffset"),uvScale:r.getUniformLocation(c,"uvScale"),rotation:r.getUniformLocation(c,"rotation"),scale:r.getUniformLocation(c,"scale"),color:r.getUniformLocation(c,"color"),map:r.getUniformLocation(c,"map"),opacity:r.getUniformLocation(c,"opacity"),modelViewMatrix:r.getUniformLocation(c,"modelViewMatrix"),projectionMatrix:r.getUniformLocation(c,"projectionMatrix"),fogType:r.getUniformLocation(c,"fogType"),fogDensity:r.getUniformLocation(c,"fogDensity"),fogNear:r.getUniformLocation(c,"fogNear"),fogFar:r.getUniformLocation(c,"fogFar"),fogColor:r.getUniformLocation(c,"fogColor"),alphaTest:r.getUniformLocation(c,"alphaTest")};var a=document.createElement("canvas");a.width=8,a.height=8;var E=a.getContext("2d");E.fillStyle="white",E.fillRect(0,0,8,8),n=new THREE.Texture(a),n.needsUpdate=!0},this.render=function(e,o,s,E){if(a.length=0,e.traverseVisible(function(e){e instanceof THREE.Sprite&&a.push(e)}),0!==a.length){r.useProgram(c),r.enableVertexAttribArray(u.position),r.enableVertexAttribArray(u.uv),r.disable(r.CULL_FACE),r.enable(r.BLEND),r.bindBuffer(r.ARRAY_BUFFER,h),r.vertexAttribPointer(u.position,2,r.FLOAT,!1,16,0),r.vertexAttribPointer(u.uv,2,r.FLOAT,!1,16,8),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,l),r.uniformMatrix4fv(f.projectionMatrix,!1,o.projectionMatrix.elements),r.activeTexture(r.TEXTURE0),r.uniform1i(f.map,0);var p=0,d=0,m=e.fog;m?(r.uniform3f(f.fogColor,m.color.r,m.color.g,m.color.b),m instanceof THREE.Fog?(r.uniform1f(f.fogNear,m.near),r.uniform1f(f.fogFar,m.far),r.uniform1i(f.fogType,1),p=1,d=1):m instanceof THREE.FogExp2&&(r.uniform1f(f.fogDensity,m.density),r.uniform1i(f.fogType,2),p=2,d=2)):(r.uniform1i(f.fogType,0),p=0,d=0);for(var v=0,g=a.length;g>v;v++){var T=a[v],y=T.material;T._modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,T.matrixWorld),T.z=-T._modelViewMatrix.elements[14]}a.sort(t);for(var R=[],v=0,g=a.length;g>v;v++){var T=a[v],y=T.material;r.uniform1f(f.alphaTest,y.alphaTest),r.uniformMatrix4fv(f.modelViewMatrix,!1,T._modelViewMatrix.elements),R[0]=T.scale.x,R[1]=T.scale.y;var x=0;e.fog&&y.fog&&(x=d),p!==x&&(r.uniform1i(f.fogType,x),p=x),null!==y.map?(r.uniform2f(f.uvOffset,y.map.offset.x,y.map.offset.y),r.uniform2f(f.uvScale,y.map.repeat.x,y.map.repeat.y)):(r.uniform2f(f.uvOffset,0,0),r.uniform2f(f.uvScale,1,1)),r.uniform1f(f.opacity,y.opacity),r.uniform3f(f.color,y.color.r,y.color.g,y.color.b),r.uniform1f(f.rotation,y.rotation),r.uniform2fv(f.scale,R),i.setBlending(y.blending,y.blendEquation,y.blendSrc,y.blendDst),i.setDepthTest(y.depthTest),i.setDepthWrite(y.depthWrite),y.map&&y.map.image&&y.map.image.width?i.setTexture(y.map,0):i.setTexture(n,0),r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0)}r.enable(r.CULL_FACE)}}},THREE.DepthPassPlugin=function(){function e(t,r,i){if(r.visible){var n=t.__webglObjects[r.id];if(n&&(r.frustumCulled===!1||h.intersectsObject(r)===!0))for(var a=0,o=n.length;o>a;a++){var s=n[a];r._modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,r.matrixWorld),c.push(s)}for(var a=0,o=r.children.length;o>a;a++)e(t,r.children[a],i)}}function t(e){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[0]:e.material}this.enabled=!1,this.renderTarget=null;var r,i,n,a,o,s,h=new THREE.Frustum,l=new THREE.Matrix4,c=[];this.init=function(e){r=e.context,i=e;var t=THREE.ShaderLib.depthRGBA,h=THREE.UniformsUtils.clone(t.uniforms);n=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:h}),a=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:h,morphTargets:!0}),o=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:h,skinning:!0}),s=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:h,morphTargets:!0,skinning:!0}),n._shadowPass=!0,a._shadowPass=!0,o._shadowPass=!0,s._shadowPass=!0},this.render=function(e,t){this.enabled&&this.update(e,t)},this.update=function(u,f){var E,p,d,m,v,g,T,y,R,x,H,b,_=null;r.clearColor(1,1,1,1),r.disable(r.BLEND),i.setDepthTest(!0),u.autoUpdate===!0&&u.updateMatrixWorld(),f.matrixWorldInverse.getInverse(f.matrixWorld),l.multiplyMatrices(f.projectionMatrix,f.matrixWorldInverse),h.setFromMatrix(l),i.setRenderTarget(this.renderTarget),i.clear(),c.length=0,e(u,u,f);var w,M,S;for(d=0,m=c.length;m>d;d++)R=c[d],x=R.object,T=R.buffer,x instanceof THREE.PointCloud&&!x.customDepthMaterial||(w=t(x),w&&i.setMaterialFaces(x.material),M=void 0!==x.geometry.morphTargets&&x.geometry.morphTargets.length>0&&w.morphTargets,S=x instanceof THREE.SkinnedMesh&&w.skinning,y=x.customDepthMaterial?x.customDepthMaterial:S?M?s:o:M?a:n,T instanceof THREE.BufferGeometry?i.renderBufferDirect(f,u.__lights,_,y,T,x):i.renderBuffer(f,u.__lights,_,y,T,x));for(b=u.__webglObjectsImmediate,d=0,m=b.length;m>d;d++)R=b[d],x=R.object,x.visible&&(x._modelViewMatrix.multiplyMatrices(f.matrixWorldInverse,x.matrixWorld),i.renderImmediateObject(f,u.__lights,_,n,x));var C=i.getClearColor(),A=i.getClearAlpha();r.clearColor(C.r,C.g,C.b,A),r.enable(r.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}};